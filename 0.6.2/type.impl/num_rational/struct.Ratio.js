(function() {var type_impls = {
"num_rational":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#789\">source</a><a href=\"#impl-Add%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Add&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#789\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a>Read more</a></div></details></div></details>","Add<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26T%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#789\">source</a><a href=\"#impl-Add%3C%26T%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Add&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#789\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add</a>(self, other: &amp;T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a>Read more</a></div></details></div></details>","Add<&'a T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#789\">source</a><a href=\"#impl-Add%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Add&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#789\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add</a>(self, rhs: T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a>Read more</a></div></details></div></details>","Add<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#789\">source</a><a href=\"#impl-Add-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Add for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#789\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a>Read more</a></div></details></div></details>","Add","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#608\">source</a><a href=\"#impl-AddAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; AddAssign&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#608\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a>Read more</a></div></details></div></details>","AddAssign<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26T%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#608\">source</a><a href=\"#impl-AddAssign%3C%26T%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; AddAssign&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#608\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;T)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a>Read more</a></div></details></div></details>","AddAssign<&'a T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#550-555\">source</a><a href=\"#impl-AddAssign%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; AddAssign&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#551-554\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a>Read more</a></div></details></div></details>","AddAssign<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#478-491\">source</a><a href=\"#impl-AddAssign-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; AddAssign for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#479-490\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a>Read more</a></div></details></div></details>","AddAssign","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1109\">source</a><a href=\"#impl-Binary-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Binary + Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Binary for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1109\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Binary","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#874\">source</a><a href=\"#impl-CheckedAdd-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a> + <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedAdd.html\" title=\"trait num_traits::ops::checked::CheckedAdd\">CheckedAdd</a>&gt; <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedAdd.html\" title=\"trait num_traits::ops::checked::CheckedAdd\">CheckedAdd</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#874\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; Option&lt;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#811-855\">source</a><a href=\"#impl-CheckedDiv-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedDiv.html\" title=\"trait num_traits::ops::checked::CheckedDiv\">CheckedDiv</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#816-854\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; Option&lt;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#794-808\">source</a><a href=\"#impl-CheckedMul-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#799-807\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; Option&lt;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, <code>None</code> is returned.</div></details></div></details>","CheckedMul","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#877\">source</a><a href=\"#impl-CheckedSub-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a> + <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedSub.html\" title=\"trait num_traits::ops::checked::CheckedSub\">CheckedSub</a>&gt; <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedSub.html\" title=\"trait num_traits::ops::checked::CheckedSub\">CheckedSub</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#877\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; Option&lt;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#49\">source</a><a href=\"#impl-Clone-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone&gt; Clone for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#49\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a>Read more</a></div></details></div></details>","Clone","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstOne-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#960-962\">source</a><a href=\"#impl-ConstOne-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/identities/trait.ConstOne.html\" title=\"trait num_traits::identities::ConstOne\">ConstOne</a>&gt; <a class=\"trait\" href=\"num_traits/identities/trait.ConstOne.html\" title=\"trait num_traits::identities::ConstOne\">ConstOne</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#961\">source</a><a href=\"#associatedconstant.ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"num_traits/identities/trait.ConstOne.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: Self = Self::ONE</h4></section></summary><div class='docblock'>The multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","ConstOne","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstZero-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#933-935\">source</a><a href=\"#impl-ConstZero-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/identities/trait.ConstZero.html\" title=\"trait num_traits::identities::ConstZero\">ConstZero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.ConstOne.html\" title=\"trait num_traits::identities::ConstOne\">ConstOne</a>&gt; <a class=\"trait\" href=\"num_traits/identities/trait.ConstZero.html\" title=\"trait num_traits::identities::ConstZero\">ConstZero</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#934\">source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"num_traits/identities/trait.ConstZero.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: Self = Self::ZERO</h4></section></summary><div class='docblock'>The additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","ConstZero","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#49\">source</a><a href=\"#impl-Debug-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Debug&gt; Debug for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#49\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Debug","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#309-314\">source</a><a href=\"#impl-Default-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Default for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#311-313\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns zero</p>\n</div></details></div></details>","Default","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1107\">source</a><a href=\"#impl-Display-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Display + Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Display for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1107\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Display","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#729\">source</a><a href=\"#impl-Div%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Div&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#729\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div</a>(self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a>Read more</a></div></details></div></details>","Div<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26T%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#729\">source</a><a href=\"#impl-Div%3C%26T%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Div&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#729\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div</a>(self, other: &amp;T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a>Read more</a></div></details></div></details>","Div<&'a T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#748-759\">source</a><a href=\"#impl-Div%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Div&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#755-758\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div</a>(self, rhs: T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a>Read more</a></div></details></div></details>","Div<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#731-746\">source</a><a href=\"#impl-Div-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Div for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#738-745\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a>Read more</a></div></details></div></details>","Div","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#609\">source</a><a href=\"#impl-DivAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; DivAssign&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#609\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a>Read more</a></div></details></div></details>","DivAssign<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26T%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#609\">source</a><a href=\"#impl-DivAssign%3C%26T%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; DivAssign&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#609\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a>Read more</a></div></details></div></details>","DivAssign<&'a T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#557-564\">source</a><a href=\"#impl-DivAssign%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; DivAssign&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#558-563\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a>Read more</a></div></details></div></details>","DivAssign<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#494-504\">source</a><a href=\"#impl-DivAssign-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; DivAssign for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#495-503\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a>Read more</a></div></details></div></details>","DivAssign","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T)%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#327-334\">source</a><a href=\"#impl-From%3C(T,+T)%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; From&lt;(T, T)&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#331-333\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from</a>(pair: (T, T)) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T)>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#317-324\">source</a><a href=\"#impl-From%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; From&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#321-323\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from</a>(x: T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-Ratio%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1280\">source</a><a href=\"#impl-FromPrimitive-for-Ratio%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;i32&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1280\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: i64) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1280\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: i128) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1280\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: u64) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1280\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: u128) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1280\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: f32) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1280\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: f64) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#391\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: isize) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#398\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: i8) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#405\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: i16) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#412\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: i32) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#433\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: usize) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#440\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: u8) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#447\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: u16) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#454\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: u32) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details></div></details>","FromPrimitive","num_rational::Rational32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-Ratio%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1281\">source</a><a href=\"#impl-FromPrimitive-for-Ratio%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;i64&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1281\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: i64) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1281\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: i128) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1281\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: u64) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1281\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: u128) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1281\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: f32) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1281\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: f64) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#391\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: isize) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#398\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: i8) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#405\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: i16) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#412\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: i32) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#433\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: usize) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#440\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: u8) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#447\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: u16) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#454\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: u32) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details></div></details>","FromPrimitive","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-Ratio%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1283\">source</a><a href=\"#impl-FromPrimitive-for-Ratio%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;isize&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1283\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: i64) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1283\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: i128) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1283\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: u64) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1283\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: u128) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1283\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: f32) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1283\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: f64) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#391\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: isize) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#398\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: i8) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#405\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: i16) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#412\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: i32) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#433\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: usize) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#440\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: u8) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#447\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: u16) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#454\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: u32) -&gt; Option&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details></div></details>","FromPrimitive","num_rational::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1115-1142\">source</a><a href=\"#impl-FromStr-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: FromStr + Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; FromStr for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1119-1141\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_str</a>(s: &amp;str) -&gt; Result&lt;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;, <a class=\"struct\" href=\"num_rational/struct.ParseRatioError.html\" title=\"struct num_rational::ParseRatioError\">ParseRatioError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses <code>numer/denom</code> or just <code>numer</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"num_rational/struct.ParseRatioError.html\" title=\"struct num_rational::ParseRatioError\">ParseRatioError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#412-426\">source</a><a href=\"#impl-Hash-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + Hash&gt; Hash for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#413-425\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash</a>&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H)</h4></section></summary><div class='docblock'>Feeds this value into the given [<code>Hasher</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.3.0\">1.3.0</span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: &amp;mut H)<div class=\"where\">where\n    H: Hasher,\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given [<code>Hasher</code>]. <a>Read more</a></div></details></div></details>","Hash","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Inv-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#903-913\">source</a><a href=\"#impl-Inv-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"num_traits/ops/inv/trait.Inv.html\" title=\"trait num_traits::ops::inv::Inv\">Inv</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/ops/inv/trait.Inv.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#910-912\">source</a><a href=\"#method.inv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/inv/trait.Inv.html#tymethod.inv\" class=\"fn\">inv</a>(self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the multiplicative inverse of <code>self</code>. <a href=\"num_traits/ops/inv/trait.Inv.html#tymethod.inv\">Read more</a></div></details></div></details>","Inv","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1112\">source</a><a href=\"#impl-LowerExp-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: LowerExp + Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; LowerExp for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1112\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","LowerExp","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1110\">source</a><a href=\"#impl-LowerHex-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: LowerHex + Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; LowerHex for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1110\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","LowerHex","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#699\">source</a><a href=\"#impl-Mul%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Mul&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#699\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul</a>(self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a>Read more</a></div></details></div></details>","Mul<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26T%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#699\">source</a><a href=\"#impl-Mul%3C%26T%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Mul&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#699\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul</a>(self, other: &amp;T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a>Read more</a></div></details></div></details>","Mul<&'a T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#717-727\">source</a><a href=\"#impl-Mul%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Mul&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#723-726\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul</a>(self, rhs: T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a>Read more</a></div></details></div></details>","Mul<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#701-715\">source</a><a href=\"#impl-Mul-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Mul for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#707-714\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a>Read more</a></div></details></div></details>","Mul","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#610\">source</a><a href=\"#impl-MulAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; MulAssign&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#610\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a>Read more</a></div></details></div></details>","MulAssign<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26T%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#610\">source</a><a href=\"#impl-MulAssign%3C%26T%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; MulAssign&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#610\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a>Read more</a></div></details></div></details>","MulAssign<&'a T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#566-573\">source</a><a href=\"#impl-MulAssign%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; MulAssign&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#567-572\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a>Read more</a></div></details></div></details>","MulAssign<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#507-517\">source</a><a href=\"#impl-MulAssign-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; MulAssign for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#508-516\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a>Read more</a></div></details></div></details>","MulAssign","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#879-889\">source</a><a href=\"#impl-Neg-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Neg for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + Neg&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#886-888\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a>Read more</a></div></details></div></details>","Neg","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#982-1008\">source</a><a href=\"#impl-Num-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#986-1007\">source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(s: &amp;str, radix: u32) -&gt; Result&lt;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;, <a class=\"struct\" href=\"num_rational/struct.ParseRatioError.html\" title=\"struct num_rational::ParseRatioError\">ParseRatioError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.</p>\n</div></details><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"num_rational/struct.ParseRatioError.html\" title=\"struct num_rational::ParseRatioError\">ParseRatioError</a></h4></section></div></details>","Num","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1108\">source</a><a href=\"#impl-Octal-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Octal + Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Octal for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1108\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Octal","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#964-980\">source</a><a href=\"#impl-One-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#966-968\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#971-973\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; bool</h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#976-979\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#341-392\">source</a><a href=\"#impl-Ord-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Ord for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#343-391\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cmp</a>(&amp;self, other: &amp;Self) -&gt; Ordering</h4></section></summary><div class='docblock'>This method returns an [<code>Ordering</code>] between <code>self</code> and <code>other</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.21.0\">1.21.0</span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.21.0\">1.21.0</span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.50.0\">1.50.0</span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized + PartialOrd,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a>Read more</a></div></details></div></details>","Ord","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#401-406\">source</a><a href=\"#impl-PartialEq-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; PartialEq for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#403-405\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ne</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#394-399\">source</a><a href=\"#impl-PartialOrd-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; PartialOrd for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#396-398\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;Self) -&gt; Option&lt;Ordering&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lt</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">le</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">gt</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ge</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a>Read more</a></div></details></div></details>","PartialOrd","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26i128%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#112\">source</a><a href=\"#impl-Pow%3C%26i128%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u128, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b i128&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#112\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b i128) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b i128>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26i16%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#109\">source</a><a href=\"#impl-Pow%3C%26i16%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u16, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b i16&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#109\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b i16) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b i16>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26i32%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#110\">source</a><a href=\"#impl-Pow%3C%26i32%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u32, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b i32&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#110\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b i32) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b i32>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26i64%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#111\">source</a><a href=\"#impl-Pow%3C%26i64%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u64, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b i64&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#111\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b i64) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b i64>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26i8%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#108\">source</a><a href=\"#impl-Pow%3C%26i8%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u8, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b i8&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#108\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b i8) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b i8>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26isize%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#113\">source</a><a href=\"#impl-Pow%3C%26isize%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;usize, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b isize&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#113\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b isize) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b isize>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u128%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#48\">source</a><a href=\"#impl-Pow%3C%26u128%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u128, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b u128&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#48\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b u128) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b u128>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#45\">source</a><a href=\"#impl-Pow%3C%26u16%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u16, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b u16&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#45\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b u16) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b u16>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u32%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#46\">source</a><a href=\"#impl-Pow%3C%26u32%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u32, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b u32&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#46\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b u32) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b u32>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u64%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#47\">source</a><a href=\"#impl-Pow%3C%26u64%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u64, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b u64&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#47\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b u64) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b u64>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#44\">source</a><a href=\"#impl-Pow%3C%26u8%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u8, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b u8&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#44\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b u8) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b u8>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26usize%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#49\">source</a><a href=\"#impl-Pow%3C%26usize%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;usize, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'b usize&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#49\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: &amp;'b usize) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'b usize>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Ci128%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#112\">source</a><a href=\"#impl-Pow%3Ci128%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u128, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;i128&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#112\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: i128) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<i128>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Ci16%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#109\">source</a><a href=\"#impl-Pow%3Ci16%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u16, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;i16&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#109\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: i16) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<i16>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Ci32%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#110\">source</a><a href=\"#impl-Pow%3Ci32%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u32, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;i32&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#110\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: i32) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<i32>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Ci64%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#111\">source</a><a href=\"#impl-Pow%3Ci64%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u64, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;i64&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#111\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: i64) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<i64>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Ci8%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#108\">source</a><a href=\"#impl-Pow%3Ci8%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u8, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;i8&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#108\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: i8) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<i8>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cisize%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#113\">source</a><a href=\"#impl-Pow%3Cisize%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;usize, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;isize&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#113\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: isize) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<isize>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu128%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#48\">source</a><a href=\"#impl-Pow%3Cu128%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u128, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u128&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#48\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: u128) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u128>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#45\">source</a><a href=\"#impl-Pow%3Cu16%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u16, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u16&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#45\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: u16) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu32%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#46\">source</a><a href=\"#impl-Pow%3Cu32%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u32, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u32&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#46\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: u32) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u32>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu64%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#47\">source</a><a href=\"#impl-Pow%3Cu64%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u64, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u64&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#47\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: u64) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u64>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#44\">source</a><a href=\"#impl-Pow%3Cu8%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u8, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u8&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#44\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: u8) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cusize%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#49\">source</a><a href=\"#impl-Pow%3Cusize%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;usize, Output = T&gt;&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;usize&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/pow.rs.html#49\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, expon: usize) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<usize>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#461-468\">source</a><a href=\"#impl-Product%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + Clone&gt; Product&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#462-467\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; Self<div class=\"where\">where\n    I: Iterator&lt;Item = &amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#452-459\">source</a><a href=\"#impl-Product-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + Clone&gt; Product for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#453-458\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; Self<div class=\"where\">where\n    I: Iterator&lt;Item = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#103-282\">source</a><a href=\"#impl-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#108-112\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.new\" class=\"fn\">new</a>(numer: T, denom: T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Ratio</code>.</p>\n<p><strong>Panics if <code>denom</code> is zero.</strong></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#116-118\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.from_integer\" class=\"fn\">from_integer</a>(t: T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>Ratio</code> representing the integer <code>t</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_integer\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#122-124\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.to_integer\" class=\"fn\">to_integer</a>(&amp;self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Converts to an integer, rounding towards zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_integer\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#128-130\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.is_integer\" class=\"fn\">is_integer</a>(&amp;self) -&gt; bool</h4></section></summary><div class=\"docblock\"><p>Returns true if the rational number is an integer (denominator is 1).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reduced\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#177-181\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.reduced\" class=\"fn\">reduced</a>(&amp;self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reduced copy of self.</p>\n<p>In general, it is not necessary to use this method, as the only\nmethod of procuring a non-reduced fraction is through <code>new_raw</code>.</p>\n<p><strong>Panics if <code>denom</code> is zero.</strong></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recip\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#187-189\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.recip\" class=\"fn\">recip</a>(&amp;self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the reciprocal.</p>\n<p><strong>Panics if the <code>Ratio</code> is zero.</strong></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#202-211\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.floor\" class=\"fn\">floor</a>(&amp;self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Rounds towards minus infinity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#215-224\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.ceil\" class=\"fn\">ceil</a>(&amp;self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Rounds towards plus infinity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#228-258\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.round\" class=\"fn\">round</a>(&amp;self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Rounds to the nearest integer. Rounds half-way cases away from zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trunc\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#262-264\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.trunc\" class=\"fn\">trunc</a>(&amp;self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Rounds towards zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fract\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#270-272\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.fract\" class=\"fn\">fract</a>(&amp;self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the fractional part of a number, with division rounded towards zero.</p>\n<p>Satisfies <code>self == self.trunc() + self.fract()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#276-281\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.pow\" class=\"fn\">pow</a>(&amp;self, expon: i32) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    for&lt;'a&gt; &amp;'a T: <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;u32, Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Raises the <code>Ratio</code> to the power of an exponent.</p>\n</div></details></div></details>",0,"num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1292-1300\">source</a><a href=\"#impl-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a> + <a class=\"trait\" href=\"num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> + <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + Clone&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.approximate_float\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1293-1299\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.approximate_float\" class=\"fn\">approximate_float</a>&lt;F: <a class=\"trait\" href=\"num_traits/float/trait.FloatCore.html\" title=\"trait num_traits::float::FloatCore\">FloatCore</a> + <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(f: F) -&gt; Option&lt;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt;</h4></section></div></details>",0,"num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1302-1310\">source</a><a href=\"#impl-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/sign/trait.Unsigned.html\" title=\"trait num_traits::sign::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> + <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + Clone&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.approximate_float_unsigned\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1303-1309\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.approximate_float_unsigned\" class=\"fn\">approximate_float_unsigned</a>&lt;F: <a class=\"trait\" href=\"num_traits/float/trait.FloatCore.html\" title=\"trait num_traits::float::FloatCore\">FloatCore</a> + <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(\n    f: F,\n) -&gt; Option&lt;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt;</h4></section></div></details>",0,"num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#74-101\">source</a><a href=\"#impl-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"docblock\"><p>These method are <code>const</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_raw\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#80-82\">source</a><h4 class=\"code-header\">pub const fn <a href=\"num_rational/struct.Ratio.html#tymethod.new_raw\" class=\"fn\">new_raw</a>(numer: T, denom: T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or reducing.</p>\n<p><strong>There are several methods that will panic if used on a <code>Ratio</code> with\n<code>denom == 0</code>.</strong></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#86-88\">source</a><h4 class=\"code-header\">pub fn <a href=\"num_rational/struct.Ratio.html#tymethod.into_raw\" class=\"fn\">into_raw</a>(self) -&gt; (T, T)</h4></section></summary><div class=\"docblock\"><p>Deconstructs a <code>Ratio</code> into its numerator and denominator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.numer\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#92-94\">source</a><h4 class=\"code-header\">pub const fn <a href=\"num_rational/struct.Ratio.html#tymethod.numer\" class=\"fn\">numer</a>(&amp;self) -&gt; &amp;T</h4></section></summary><div class=\"docblock\"><p>Gets an immutable reference to the numerator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.denom\" class=\"method\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#98-100\">source</a><h4 class=\"code-header\">pub const fn <a href=\"num_rational/struct.Ratio.html#tymethod.denom\" class=\"fn\">denom</a>(&amp;self) -&gt; &amp;T</h4></section></summary><div class=\"docblock\"><p>Gets an immutable reference to the denominator.</p>\n</div></details></div></details>",0,"num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#928-931\">source</a><a href=\"#impl-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/identities/trait.ConstZero.html\" title=\"trait num_traits::identities::ConstZero\">ConstZero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.ConstOne.html\" title=\"trait num_traits::identities::ConstOne\">ConstOne</a>&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#930\">source</a><h4 class=\"code-header\">pub const <a href=\"num_rational/struct.Ratio.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>A constant <code>Ratio</code> 0/1.</p>\n</div></details></div></details>",0,"num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#955-958\">source</a><a href=\"#impl-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/identities/trait.ConstOne.html\" title=\"trait num_traits::identities::ConstOne\">ConstOne</a>&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#957\">source</a><h4 class=\"code-header\">pub const <a href=\"num_rational/struct.Ratio.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>A constant <code>Ratio</code> 1/1.</p>\n</div></details></div></details>",0,"num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#791\">source</a><a href=\"#impl-Rem%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Rem&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#791\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem</a>(self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a>Read more</a></div></details></div></details>","Rem<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26T%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#791\">source</a><a href=\"#impl-Rem%3C%26T%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Rem&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#791\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem</a>(self, other: &amp;T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a>Read more</a></div></details></div></details>","Rem<&'a T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#791\">source</a><a href=\"#impl-Rem%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Rem&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#791\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem</a>(self, rhs: T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a>Read more</a></div></details></div></details>","Rem<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#791\">source</a><a href=\"#impl-Rem-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Rem for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#791\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a>Read more</a></div></details></div></details>","Rem","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#611\">source</a><a href=\"#impl-RemAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; RemAssign&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#611\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a>Read more</a></div></details></div></details>","RemAssign<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26T%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#611\">source</a><a href=\"#impl-RemAssign%3C%26T%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; RemAssign&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#611\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;T)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a>Read more</a></div></details></div></details>","RemAssign<&'a T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#576-581\">source</a><a href=\"#impl-RemAssign%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; RemAssign&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#577-580\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a>Read more</a></div></details></div></details>","RemAssign<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#519-532\">source</a><a href=\"#impl-RemAssign-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; RemAssign for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#520-531\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a>Read more</a></div></details></div></details>","RemAssign","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signed-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1010-1051\">source</a><a href=\"#impl-Signed-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a>&gt; <a class=\"trait\" href=\"num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1012-1018\">source</a><a href=\"#method.abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/sign/trait.Signed.html#tymethod.abs\" class=\"fn\">abs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Computes the absolute value. <a href=\"num_traits/sign/trait.Signed.html#tymethod.abs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1021-1027\">source</a><a href=\"#method.abs_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/sign/trait.Signed.html#tymethod.abs_sub\" class=\"fn\">abs_sub</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The positive difference of two numbers. <a href=\"num_traits/sign/trait.Signed.html#tymethod.abs_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1030-1038\">source</a><a href=\"#method.signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/sign/trait.Signed.html#tymethod.signum\" class=\"fn\">signum</a>(&amp;self) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the sign of the number. <a href=\"num_traits/sign/trait.Signed.html#tymethod.signum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1041-1044\">source</a><a href=\"#method.is_positive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/sign/trait.Signed.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(&amp;self) -&gt; bool</h4></section></summary><div class='docblock'>Returns true if the number is positive and false if the number is zero or negative.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1047-1050\">source</a><a href=\"#method.is_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/sign/trait.Signed.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(&amp;self) -&gt; bool</h4></section></summary><div class='docblock'>Returns true if the number is negative and false if the number is zero or positive.</div></details></div></details>","Signed","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#790\">source</a><a href=\"#impl-Sub%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Sub&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#790\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a>Read more</a></div></details></div></details>","Sub<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26T%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#790\">source</a><a href=\"#impl-Sub%3C%26T%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; Sub&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;<div class=\"where\">where\n    T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#790\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub</a>(self, other: &amp;T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a>Read more</a></div></details></div></details>","Sub<&'a T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#790\">source</a><a href=\"#impl-Sub%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Sub&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#790\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub</a>(self, rhs: T) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a>Read more</a></div></details></div></details>","Sub<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#790\">source</a><a href=\"#impl-Sub-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Sub for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#790\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a>Read more</a></div></details></div></details>","Sub","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#612\">source</a><a href=\"#impl-SubAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; SubAssign&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#612\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a>Read more</a></div></details></div></details>","SubAssign<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26T%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#612\">source</a><a href=\"#impl-SubAssign%3C%26T%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; SubAssign&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#612\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;T)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a>Read more</a></div></details></div></details>","SubAssign<&'a T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CT%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#584-589\">source</a><a href=\"#impl-SubAssign%3CT%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; SubAssign&lt;T&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#585-588\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a>Read more</a></div></details></div></details>","SubAssign<T>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#534-547\">source</a><a href=\"#impl-SubAssign-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + <a class=\"trait\" href=\"num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; SubAssign for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#535-546\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a>Read more</a></div></details></div></details>","SubAssign","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#443-450\">source</a><a href=\"#impl-Sum%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + Clone&gt; Sum&lt;&amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#444-449\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; Self<div class=\"where\">where\n    I: Iterator&lt;Item = &amp;'a <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a Ratio<T>>","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#434-441\">source</a><a href=\"#impl-Sum-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> + Clone&gt; Sum for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#435-440\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; Self<div class=\"where\">where\n    I: Iterator&lt;Item = <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-Ratio%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1452\">source</a><a href=\"#impl-ToPrimitive-for-Ratio%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;i32&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1452\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; Option&lt;i64&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1452\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; Option&lt;i128&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1452\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; Option&lt;u64&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1452\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; Option&lt;u128&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1452\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; Option&lt;f64&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#21\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; Option&lt;isize&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#28\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; Option&lt;i8&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#35\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; Option&lt;i16&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#42\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; Option&lt;i32&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#64\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; Option&lt;usize&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#71\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; Option&lt;u8&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#78\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; Option&lt;u16&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#85\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; Option&lt;u32&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#108\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; Option&lt;f32&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details></div></details>","ToPrimitive","num_rational::Rational32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-Ratio%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1493\">source</a><a href=\"#impl-ToPrimitive-for-Ratio%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;i64&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1493\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; Option&lt;i64&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1493\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; Option&lt;i128&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1493\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; Option&lt;u64&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1493\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; Option&lt;u128&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1493\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; Option&lt;f64&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#21\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; Option&lt;isize&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#28\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; Option&lt;i8&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#35\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; Option&lt;i16&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#42\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; Option&lt;i32&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#64\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; Option&lt;usize&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#71\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; Option&lt;u8&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#78\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; Option&lt;u16&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#85\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; Option&lt;u32&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#108\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; Option&lt;f32&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details></div></details>","ToPrimitive","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-Ratio%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1496\">source</a><a href=\"#impl-ToPrimitive-for-Ratio%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;isize&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1496\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; Option&lt;i64&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1496\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; Option&lt;i128&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1496\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; Option&lt;u64&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1496\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; Option&lt;u128&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1496\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; Option&lt;f64&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#21\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; Option&lt;isize&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#28\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; Option&lt;i8&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#35\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; Option&lt;i16&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#42\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; Option&lt;i32&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#64\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; Option&lt;usize&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#71\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; Option&lt;u8&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#78\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; Option&lt;u16&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#85\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; Option&lt;u32&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#108\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; Option&lt;f32&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details></div></details>","ToPrimitive","num_rational::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1113\">source</a><a href=\"#impl-UpperExp-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: UpperExp + Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; UpperExp for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1113\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","UpperExp","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1111\">source</a><a href=\"#impl-UpperHex-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: UpperHex + Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; UpperHex for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#1111\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","UpperHex","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#937-953\">source</a><a href=\"#impl-Zero-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#939-941\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#944-946\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; bool</h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#949-952\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<section id=\"impl-Copy-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#49\">source</a><a href=\"#impl-Copy-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Copy&gt; Copy for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section>","Copy","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"],["<section id=\"impl-Eq-for-Ratio%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_rational/lib.rs.html#408\">source</a><a href=\"#impl-Eq-for-Ratio%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone + <a class=\"trait\" href=\"num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a>&gt; Eq for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;</h3></section>","Eq","num_rational::Rational","num_rational::Rational32","num_rational::Rational64"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()