(function() {var type_impls = {
"aster_frame":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RangeExt%3Cusize%3E-for-R\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/range.rs.html#54-55\">source</a><a href=\"#impl-RangeExt%3Cusize%3E-for-R\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"wyz/range/trait.RangeExt.html\" title=\"trait wyz::range::RangeExt\">RangeExt</a>&lt;usize&gt; for R<div class=\"where\">where\n    R: RangeBounds&lt;usize&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.normalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/range.rs.html#57-61\">source</a><a href=\"#method.normalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"wyz/range/trait.RangeExt.html#tymethod.normalize\" class=\"fn\">normalize</a>(\n    self,\n    start: impl Into&lt;Option&lt;usize&gt;&gt;,\n    end: impl Into&lt;Option&lt;usize&gt;&gt;\n) -&gt; Range&lt;usize&gt;</h4></section></summary><div class='docblock'>Normalizes a range-like type to a canonical half-open <code>Range</code>. <a href=\"wyz/range/trait.RangeExt.html#tymethod.normalize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/range.rs.html#80-81\">source</a><a href=\"#method.intersection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"wyz/range/trait.RangeExt.html#tymethod.intersection\" class=\"fn\">intersection</a>&lt;R2&gt;(self, other: R2) -&gt; Option&lt;Range&lt;usize&gt;&gt;<div class=\"where\">where\n    R2: <a class=\"trait\" href=\"wyz/range/trait.RangeExt.html\" title=\"trait wyz::range::RangeExt\">RangeExt</a>&lt;usize&gt;,</div></h4></section></summary><div class='docblock'>Finds the intersection between two range-likes. The produced <code>Range</code>\nspans only the elements common to both. <a href=\"wyz/range/trait.RangeExt.html#tymethod.intersection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/range.rs.html#100-101\">source</a><a href=\"#method.union\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"wyz/range/trait.RangeExt.html#tymethod.union\" class=\"fn\">union</a>&lt;R2&gt;(self, other: R2) -&gt; Option&lt;Range&lt;usize&gt;&gt;<div class=\"where\">where\n    R2: <a class=\"trait\" href=\"wyz/range/trait.RangeExt.html\" title=\"trait wyz::range::RangeExt\">RangeExt</a>&lt;usize&gt;,</div></h4></section></summary><div class='docblock'>Finds the union between two range-likes. The produced <code>Range</code> spans all\nelements present in at least one of them. <a href=\"wyz/range/trait.RangeExt.html#tymethod.union\">Read more</a></div></details></div></details>","RangeExt<usize>","aster_frame::mm::dma::Daddr","aster_frame::mm::Vaddr","aster_frame::mm::Paddr"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()