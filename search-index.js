var searchIndex = new Map(JSON.parse('[\
["acpi",{"doc":"A library for parsing ACPI tables. This crate can be used …","t":"GKKFFEPEPPPPPPEPEFEEPGFPPPPPOCNNNNNNNNNNNNNNNNONCNNNNNNNNNNNNNNNMCNNNNNNOOCMNCNONCNNOCONONNNNNNNNNNNNNNNNNNNMONFPGPNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONPFPPFFFPPGPPPPPOONONNNNNNNNNNNONONNNNNNNNONNNNOONNOOONNNNNNNONNONNNNNNNNNONNNNNNNNNNNNNONONNOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFFPPGPPONNNNNNOONNNNNNNONNNNNNNONNNNNNNNNNFPFPFPFPFPFPPFPPFPFPPFFPFPFPFFGFGPPPFPFPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFFFGPPCOOONNNNNNNNNNNNNNNNNNNNNNNCONNNNNOONNOOOOOONNNNNNNNNNNNNNNNNGGPPPPPFPPPPPPPPPPPPPOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFPPGFFPPPGFGFGPPPGPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTTTTTTTTTTTFTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTFFTTTTTTTTTTNNNNNNNNONNNNNNNOONNNNNNNNNONOONONOONNNNNNNNNNNNNN","n":["AcpiError","AcpiHandler","AcpiTable","AcpiTables","AmlTable","HpetInfo","IncorrectSignature","InterruptModel","InvalidChecksum","InvalidDsdtAddress","InvalidFacsAddress","InvalidGenericAddress","InvalidMadt","InvalidOemId","MadtError","NoValidRsdp","PciConfigRegions","PhysicalMapping","PlatformInfo","PowerProfile","Rsdp","RsdpError","Sdt","SdtInvalidChecksum","SdtInvalidOemId","SdtInvalidSignature","SdtInvalidTableId","TableMissing","address","bgrt","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","drop","dsdt","eq","fadt","fmt","fmt","fmt","from","from","from","from","from","from","from_rsdp","from_rsdt","from_tables_direct","from_validated_rsdp","get_sdt","handler","header","hpet","into","into","into","into","into","into","length","length","madt","map_physical_region","mapped_length","mcfg","new","physical_address","physical_start","platform","platform_info","region_length","revision","sdt","sdts","search_for_rsdp_bios","ssdts","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unmap_physical_region","validated","virtual_start","Bgrt","Bitmap","ImageType","Reserved","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","eq","fmt","from","from","hash","header","image_address","image_offset","image_type","into","into","orientation_offset","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","was_displayed","AppliancePc","ArmBootArchFlags","Desktop","EnterpriseServer","Fadt","FixedFeatureFlags","IaPcBootArchFlags","Mobile","PerformanceServer","PowerProfile","Reserved","SohoServer","Tablet","Unspecified","Workstation","acpi_disable","acpi_enable","all_procs_support_c1_power_state","arm_boot_arch","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c2_configured_for_mp_system","c_state_control","case_is_sealed","century","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","day_alarm","dont_enable_msi","dont_enable_pcie_aspm","dont_probe_vga","dsdt_address","duty_offset","duty_width","eq","facs_address","flags","flush_size","flush_stride","fmt","from","from","from","from","from","gpe0_block","gpe1_base","gpe1_block","header","iapc_boot_arch","implements_psci","into","into","into","into","into","lapics_must_use_cluster_model_for_logical_mode","legacy_devices_are_accessible","local_xapics_must_use_physical_destination_mode","month_alarm","motherboard_implements_8042","no_benefit_to_s3","no_rtc_wake_in_fixed_register_space","ospm_may_leave_gpe_wake_events_armed_before_s5","pm1a_control_block","pm1a_event_block","pm1b_control_block","pm1b_event_block","pm2_control_block","pm_timer_block","pm_timer_is_32_bit","power_button_is_control_method","power_profile","pstate_control","reset_register","reset_value","rtc_sts_is_valid_after_wakeup_from_s4","rtc_wakes_system_from_s4","s4bios_req","sci_interrupt","sleep_button_is_control_method","sleep_control_register","sleep_status_register","smi_cmd_port","supports_docking","supports_equivalent_to_wbinvd","supports_pciexp_wake_in_pm1","supports_system_reset_via_fadt","system_is_headless","system_is_hw_reduced_acpi","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_hvc_as_psci_conduit","use_instr_after_write_to_slp_typx","use_pm_or_hpet_for_monotonically_decreasing_timers","use_time_and_alarm_namespace_for_rtc","validate","wbinvd_flushes_all_caches","worst_c2_latency","worst_c3_latency","HpetInfo","HpetTable","None","Other","PageProtection","Protected4K","Protected64K","base_address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clock_tick_unit","event_timer_block_id","fmt","fmt","from","from","from","hardware_rev","header","hpet_number","into","into","into","legacy_irq_capable","main_counter_is_64bits","new","num_comparators","page_protection","pci_vendor_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","EntryHeader","GicInterruptTranslationService","GicInterruptTranslationServiceEntry","GicMsiFrame","GicMsiFrameEntry","GicRedistributor","GicRedistributorEntry","Gicc","GiccEntry","Gicd","GicdEntry","InterruptOverrideEntryHasInvalidBus","InterruptSourceOverride","InterruptSourceOverrideEntry","InvalidLocalNmiLine","IoApic","IoApicEntry","IoSapic","IoSapicEntry","LocalApic","LocalApicAddressOverride","LocalApicAddressOverrideEntry","LocalApicEntry","LocalApicNmi","LocalApicNmiEntry","LocalSapic","LocalSapicEntry","LocalX2Apic","LocalX2ApicEntry","Madt","MadtEntry","MadtEntryIter","MadtError","MpsIntiInvalidPolarity","MpsIntiInvalidTriggerMode","MultiprocessorWakeup","MultiprocessorWakeupEntry","NmiSource","NmiSourceEntry","PlatformInterruptSource","PlatformInterruptSourceEntry","UnexpectedEntry","X2ApicNmi","X2ApicNmiEntry","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","entries","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","next","parse_interrupt_model","supports_8259","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Mcfg","McfgEntry","PciConfigRegions","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","header","into","into","into","new","physical_address","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Disabled","PlatformInfo","PmTimer","Processor","ProcessorInfo","ProcessorState","Running","WaitingForSipi","address","application_processors","base","boot_processor","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","from","from","from","interrupt","interrupt_model","into","into","into","into","into","is_ap","local_apic_id","new","new","pm_timer","power_profile","processor_info","processor_uid","state","supports_32bit","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AccessSize","AddressSpace","ByteAccess","DWordAccess","EmbeddedController","FunctionalFixedHardware","GeneralIo","GenericAddress","GenericSerialBus","Ipmi","OemDefined","PciBarTarget","PciConfigSpace","PlatformCommunicationsChannel","QWordAccess","SMBus","SystemCmos","SystemIo","SystemMemory","Undefined","WordAccess","access_size","address","address_space","bit_offset","bit_width","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ActiveHigh","ActiveLow","All","Apic","Apic","Edge","InterruptModel","InterruptSourceOverride","IoApic","Level","Lint0","Lint1","LocalInterruptLine","NmiLine","NmiProcessor","NmiSource","Polarity","ProcessorUid","SameAsBus","SameAsBus","TriggerMode","Unknown","address","also_has_legacy_pics","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","global_system_interrupt","global_system_interrupt","global_system_interrupt_base","id","interrupt_source_overrides","into","into","into","into","into","into","into","into","into","into","io_apics","isa_source","line","local_apic_address","local_apic_nmi_lines","nmi_sources","polarity","polarity","processor","trigger_mode","trigger_mode","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AEST","BDAT","BERT","BGRT","CDIT","CEDT","CPEP","CRAT","CSRT","DBG2","DBGP","DMAR","DRTM","DSDT","ECDT","EINJ","ERST","ETDT","ExtendedField","FACS","FADT","FPDT","GTDT","HEST","HPET","IBFT","IORT","IVRS","LPIT","MADT","MCFG","MCHI","MPAM","MPST","MSCT","MSDM","NFIT","PCCT","PHAT","PMTT","PRMT","PSDT","RASF","RGRT","RSDT","SBST","SDEI","SDEV","SLIC","SLIT","SPCR","SPMI","SRAT","SSDT","STAO","SVKL","SdtHeader","Signature","TCPA","TPM2","UEFI","WAET","WDAT","WDRT","WPBT","WSMT","XENV","XSDT","access","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checksum","clone","clone","clone","clone_into","clone_into","clone_into","cmp","creator_id","creator_revision","eq","fmt","fmt","from","from","from","into","into","into","length","oem_id","oem_id","oem_revision","oem_table_id","oem_table_id","partial_cmp","revision","signature","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate"],"q":[[0,"acpi"],[111,"acpi::bgrt"],[147,"acpi::fadt"],[278,"acpi::hpet"],[320,"acpi::madt"],[528,"acpi::mcfg"],[563,"acpi::platform"],[632,"acpi::platform::address"],[695,"acpi::platform::interrupt"],[815,"acpi::sdt"],[933,"core::fmt"],[934,"core::fmt"],[935,"core::fmt"],[936,"core::option"],[937,"alloc::vec"],[938,"rsdp"],[939,"core::ptr::non_null"],[940,"core::any"],[941,"core::cmp"],[942,"core::hash"],[943,"core::marker"],[944,"core::clone"],[945,"alloc::string"]],"d":["","An implementation of this trait must be provided to allow …","All types representing ACPI tables should implement this …","","","","","","","","","","","","","","","Describes a physical mapping created by …","","","","","","","","","","","Physical address of the start of the AML stream (excluding …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>AcpiTables</code> if you have the physical address of …","Create an <code>AcpiTables</code> if you have the physical address of …","Construct an <code>AcpiTables</code> from a custom set of “discovered…","Create an <code>AcpiTables</code> if you have a <code>PhysicalMapping</code> of the …","Create a mapping to a SDT, given its signature. This …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Length of the table in bytes.","Length (in bytes) of the AML stream.","","Given a physical address and a size, map a region of …","","","Construct a new <code>PhysicalMapping</code>. <code>mapped_length</code> may differ …","Physical address of the start of the SDT, including the …","","","Convenience method for contructing a <code>PlatformInfo</code>. This is …","","The revision of ACPI that the system uses, as inferred …","","","Search for the RSDP on a BIOS platform. This accesses …","","","","","","","","","","","","","","","","","","","","","Unmap the given physical mapping. This is called when a …","Whether this SDT has been validated. This is set to <code>true</code> …","","The BGRT table contains information about a boot graphic …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets the orientation offset of the image. Degrees are …","","","","","","","","","","","","","","","","Represents the Fixed ACPI Description Table (FADT). This …","","","","","","","","","","","","","If true, all processors implement the C1 power state.","","","","","","","","","","","","If true, the C2 power state is configured to work on a …","","If true, the system supports no expansion capabilities and …","","","","","","","","","","","If true, OSPM <em>must not</em> enable message-signaled interrupts.","If true, OSPM <em>must not</em> enable PCIe ASPM control.","If true, OSPM <em>must not</em> blindly probe VGA hardware. VGA …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","If true, the system implements PSCI.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If true, all LAPICs must be configured using the cluster …","If true, legacy user-accessible devices are available on …","If true, all LXAPICs must be configured using physical …","","If true, the motherboard exposes an IO port 60/64 keyboard …","If true, the system can achieve equal or better power …","If true, the RTC wake status is not supported in fixed …","If true, the platform supports OSPM leaving GPE wake …","","","","","","","If true, indicates that the PM timer is a 32-bit value. If …","If true, the power button is handled as a control method …","","","","","If true, the contents of the <code>RTC_STS</code> register are valid …","If true, the RTC alarm function can wake the system from …","","On systems with an i8259 PIC, this is the vector the …","If true, the sleep button is handled as a control method …","","","The system port address of the SMI Command Port. This port …","If true, the system supports docking.","If true, an equivalent to the x86 WBINVD instruction is …","If set, the platform supports the <code>PCIEXP_WAKE_STS</code> and …","If true, the system supports system reset via the …","If true, the system cannot detect the monitor or …","If true, this system is a hardware-reduced ACPI platform, …","","","","","","","","","","","","","","","","","","","","If true, OSPM must use HVC instead of SMC as the PSCI …","If true, OSPM must use a processor instruction after …","If true, OSPM should use the ACPI power management timer …","If true, OSPM <em>must not</em> use the RTC via its IO ports, …","","If true, WBINVD properly flushes all caches and  memory …","The worst-case latency to enter and exit the C2 state, in …","The worst-case latency to enter and exit the C3 state, in …","Information about the High Precision Event Timer (HPET)","","","","","Access to the rest of the 4KiB, relative to the base …","Access to the rest of the 64KiB, relative to the base …","","","","","","","","The minimum number of clock ticks that can be set without …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","This field will appear for ARM processors that support …","","","","","","","","","","If this entry is present, the system has an I/O SAPIC, …","","","","","","","","","","","Represents the MADT - this contains the MADT header …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a set of regions of physical memory used to …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get the physical address of the start of the configuration …","","","","","","","","","","","","A processor in this state is unusable, and you must not …","<code>PlatformInfo</code> allows the collection of some basic …","Information about the ACPI Power Management Timer (ACPI PM …","","","","A Running processor is currently brought up and running …","A processor waiting for a SIPI (Startup Inter-processor …","ACPI defines a Generic Address Structure (GAS), which …","Application processors should be brought up in the order …","A generic address to the register block of ACPI PM Timer.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether this processor is the Bootstrap Processor (BSP), …","The ID of the local APIC of the processor. Will be less …","","","","","On <code>x86_64</code> platforms that support the APIC, the processor …","Corresponds to the <code>_UID</code> object of the processor’s <code>Device</code>…","The state of this processor. Check that the processor is …","This field is <code>true</code> if the hardware supports 32-bit timer, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a register in the configuration space of a PCI …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Describes an interrupt controller based around the …","","","Describes a difference in the mapping of an ISA interrupt …","","","","","","","","Describes a Global System Interrupt that should be enabled …","","","","","","This model is only chosen when the MADT does not describe …","The physical address at which to access this I/O APIC.","If this field is set, you must remap and mask all the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The global system interrupt number where this I/O APIC’s …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a field which may or may not be present within …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All SDTs share the same header, and are <code>length</code> bytes long. …","","","","","","","","","","","","Access the field if it’s present for the given revision …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Check that: a) The signature matches the one given b) The …"],"i":[0,0,0,0,0,0,1,0,1,9,9,9,9,1,0,1,0,0,0,0,9,0,0,9,9,9,9,9,11,0,3,1,13,16,9,11,3,1,13,16,9,11,1,1,3,3,13,1,0,1,9,11,3,1,13,16,9,11,13,13,13,13,13,3,21,0,3,1,13,16,9,11,16,11,0,4,3,0,3,16,3,0,13,3,13,0,13,13,13,1,3,1,13,16,9,11,3,1,13,16,9,11,3,1,13,16,9,11,4,16,3,0,27,0,27,26,27,26,27,26,27,26,27,27,27,27,26,27,27,26,26,26,26,26,27,26,27,26,27,26,27,26,27,26,27,26,26,33,0,33,33,0,0,0,33,33,0,33,33,33,33,33,36,36,32,36,36,33,32,34,35,36,33,32,34,35,32,36,32,36,33,32,34,35,33,32,34,35,36,34,34,34,36,36,36,33,36,36,36,36,33,36,33,32,34,35,36,36,36,36,36,35,36,33,32,34,35,32,34,32,36,34,32,32,32,36,36,36,36,36,36,32,32,36,36,36,36,32,32,36,36,32,36,36,36,32,32,32,32,32,32,33,32,34,35,36,33,32,34,35,36,33,32,34,35,36,33,32,34,35,35,32,32,34,36,32,36,36,0,0,38,38,0,38,38,39,40,38,39,40,38,39,39,39,38,39,40,38,39,39,40,39,40,38,39,39,39,39,39,39,39,40,38,39,40,38,39,40,38,39,0,70,0,70,0,70,0,70,0,70,0,44,70,0,44,70,0,70,0,70,70,0,0,70,0,70,0,70,0,0,0,0,0,44,44,70,0,70,0,70,0,44,70,0,42,43,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,44,41,42,43,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,44,41,41,41,42,44,42,43,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,44,41,42,42,43,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,44,41,43,43,42,42,41,42,43,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,44,41,42,43,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,44,41,42,43,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,44,41,0,0,0,49,47,48,49,47,48,47,48,47,48,47,48,49,47,48,49,49,47,48,47,47,47,48,49,47,48,49,47,48,49,47,48,51,0,0,0,0,0,51,51,0,46,53,46,46,53,24,51,52,46,53,24,51,52,51,52,51,52,51,52,51,52,46,53,24,51,52,0,24,46,53,24,51,52,52,52,53,24,24,24,24,52,52,53,51,52,46,53,24,51,52,46,53,24,51,52,46,53,24,51,52,0,0,55,55,54,54,54,0,54,54,54,54,54,54,55,54,54,54,54,55,55,37,37,37,37,37,54,55,37,54,55,37,54,55,37,54,55,37,54,55,37,54,55,37,54,55,37,54,55,37,54,55,37,54,55,55,37,54,55,37,54,55,37,60,60,59,0,45,61,0,0,0,61,58,58,0,0,0,0,0,59,60,61,0,45,56,64,56,57,58,59,60,61,62,63,64,45,56,57,58,59,60,61,62,63,64,45,56,57,58,59,60,61,62,63,64,45,56,57,58,59,60,61,62,63,64,45,62,63,56,56,64,56,57,58,59,60,61,62,63,64,45,64,62,57,64,64,64,62,63,57,62,63,56,57,58,59,60,61,62,63,64,45,56,57,58,59,60,61,62,63,64,45,56,57,58,59,60,61,62,63,64,45,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,15,15,15,15,15,15,15,15,15,15,65,15,65,22,15,65,22,15,22,65,22,15,65,22,15,15,22,22,15,15,15,65,22,15,65,22,15,22,22,22,22,22,22,15,22,22,65,22,15,15,65,22,15,65,22,15,65,22,15,22],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[[3,[-1,-2]]],-2,4,[]],[[[3,[-1,-2]]],2,4,[]],0,[[1,1],5],0,[[1,6],[[8,[2,7]]]],[[9,6],10],[[11,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,12],[[8,[[13,[-1]],9]]],4],[[-1,14,12],[[8,[[13,[-1]],9]]],4],[[-1,14,[17,[15,16]],[18,[11]],[19,[11]]],[[13,[-1]]],4],[[-1,[3,[-1,20]]],[[8,[[13,[-1]],9]]],4],[[[13,[-1]],15],[[8,[[18,[[3,[-1,-2]]]],9]]],4,21],[[[3,[-1,-2]]],-1,4,[]],[21,22],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[4,12,12],[[3,[4,-1]]],[]],[[[3,[-1,-2]]],12,4,[]],0,[[12,[23,[-1]],12,12,-2],[[3,[-2,-1]]],[],4],0,[[[3,[-1,-2]]],12,4,[]],0,[[[13,[-1]]],[[8,[24,9]]],4],[[[3,[-1,-2]]],12,4,[]],0,0,0,[-1,[[8,[[13,[-1]],9]]],4],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[[3,[4,-1]]],2,[]],0,[[[3,[-1,-2]]],[[23,[-2]]],4,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[27,27],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[27,27],28],[[27,27],5],[[27,6],10],[-1,-1,[]],[-1,-1,[]],[[27,-1],2,29],[26,22],0,[26,[[2,[30,30]]]],[26,27],[-1,-2,[],[]],[-1,-2,[],[]],[26,31],[[27,27],[[18,[28]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],0,[26,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32,5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,5],0,[32,5],0,[33,33],[32,32],[34,34],[35,35],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[34,5],[34,5],[34,5],[36,[[8,[12,9]]]],0,0,[[33,33],5],[36,[[8,[12,9]]]],0,0,0,[[33,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[36,[[8,[[18,[37]],9]]]],0,[36,[[8,[[18,[37]],9]]]],[36,22],0,[35,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,5],[34,5],[32,5],0,[34,5],[32,5],[32,5],[32,5],[36,[[8,[37,9]]]],[36,[[8,[37,9]]]],[36,[[8,[[18,[37]],9]]]],[36,[[8,[[18,[37]],9]]]],[36,[[8,[[18,[37]],9]]]],[36,[[8,[[18,[37]],9]]]],[32,5],[32,5],[36,33],0,[36,[[8,[37,9]]]],0,[32,5],[32,5],0,0,[32,5],[36,[[8,[[18,[37]],9]]]],[36,[[8,[[18,[37]],9]]]],0,[32,5],[32,5],[32,5],[32,5],[32,5],[32,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[35,5],[32,5],[32,5],[34,5],[36,[[8,[2,9]]]],[32,5],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[38,6],10],[[39,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[39,14],[40,22],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,5],[39,5],[[[13,[-1]]],[[8,[39,9]]],4],[39,14],0,[39,31],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,41],[[-1,-2],2,[],[]],[42,43],[[44,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[42,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,[[18,[-1]]],[]],[42,[[8,[[2,[45,[18,[46]]]],9]]]],[42,5],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,47],[48,48],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[47,6],10],[[48,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[49,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1]]],[[8,[47,9]]],4],[[47,31,14,14,14],[[18,[50]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,51],[52,52],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[51,51],5],[[52,52],5],[[51,6],10],[[52,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[36,[[8,[[18,[53]],9]]]],[[[13,[-1]]],[[8,[24,9]]],4],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[54,54],[55,55],[37,37],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[54,54],5],[[55,55],5],[[37,37],5],[[54,6],10],[[55,6],10],[[37,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[14,[[8,[55,-1]]],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[56,6],10],[[57,6],10],[[58,6],10],[[59,6],10],[[60,6],10],[[61,6],10],[[62,6],10],[[63,6],10],[[64,6],10],[[45,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[65,[-1]],14],[[18,[-1]]],66],[15,67],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[65,[-1]]],[[65,[-1]]],[68,66]],[22,22],[15,15],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[15,15],28],0,0,[[15,15],5],[[15,6],10],[[15,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[22,67],0,0,[22,67],0,[[15,15],[[18,[28]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,69,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[22,15],[[8,[2,9]]]]],"c":[],"p":[[6,"RsdpError",0],[1,"tuple"],[5,"PhysicalMapping",0],[10,"AcpiHandler",0],[1,"bool"],[5,"Formatter",933],[5,"Error",933],[6,"Result",934],[6,"AcpiError",0],[8,"Result",933],[5,"AmlTable",0],[1,"usize"],[5,"AcpiTables",0],[1,"u8"],[5,"Signature",815],[5,"Sdt",0],[5,"BTreeMap",935],[6,"Option",936],[5,"Vec",937],[5,"Rsdp",938],[10,"AcpiTable",0],[5,"SdtHeader",815],[5,"NonNull",939],[5,"PlatformInfo",563],[5,"TypeId",940],[5,"Bgrt",111],[6,"ImageType",111],[6,"Ordering",941],[10,"Hasher",942],[1,"u32"],[1,"u16"],[5,"FixedFeatureFlags",147],[6,"PowerProfile",147],[5,"IaPcBootArchFlags",147],[5,"ArmBootArchFlags",147],[5,"Fadt",147],[5,"GenericAddress",632],[6,"PageProtection",278],[5,"HpetInfo",278],[5,"HpetTable",278],[5,"EntryHeader",320],[5,"Madt",320],[5,"MadtEntryIter",320],[6,"MadtError",320],[6,"InterruptModel",695],[5,"ProcessorInfo",563],[5,"PciConfigRegions",528],[5,"McfgEntry",528],[5,"Mcfg",528],[1,"u64"],[6,"ProcessorState",563],[5,"Processor",563],[5,"PmTimer",563],[6,"AddressSpace",632],[6,"AccessSize",632],[5,"IoApic",695],[5,"NmiLine",695],[6,"LocalInterruptLine",695],[6,"NmiProcessor",695],[6,"Polarity",695],[6,"TriggerMode",695],[5,"InterruptSourceOverride",695],[5,"NmiSource",695],[5,"Apic",695],[5,"ExtendedField",815],[10,"Copy",943],[1,"str"],[10,"Clone",944],[5,"String",945],[6,"MadtEntry",320],[5,"LocalApicEntry",320],[5,"IoApicEntry",320],[5,"InterruptSourceOverrideEntry",320],[5,"NmiSourceEntry",320],[5,"LocalApicNmiEntry",320],[5,"LocalApicAddressOverrideEntry",320],[5,"IoSapicEntry",320],[5,"LocalSapicEntry",320],[5,"PlatformInterruptSourceEntry",320],[5,"LocalX2ApicEntry",320],[5,"X2ApicNmiEntry",320],[5,"GiccEntry",320],[5,"GicdEntry",320],[5,"GicMsiFrameEntry",320],[5,"GicRedistributorEntry",320],[5,"GicInterruptTranslationServiceEntry",320],[5,"MultiprocessorWakeupEntry",320]],"b":[[902,"impl-Debug-for-Signature"],[903,"impl-Display-for-Signature"]]}],\
["align_ext",{"doc":"","t":"KMMM","n":["AlignExt","align_down","align_up","is_power_of_two"],"q":[[0,"align_ext"]],"d":["An extension trait for Rust integer types, including <code>u8</code>, …","Returns to the greatest number that is smaller than or …","Returns to the smallest number that is greater than or …","returns whether the number is a power of two"],"i":[0,1,1,1],"f":[0,[[1,1],1],[[1,1],1],[1,2]],"c":[],"p":[[10,"AlignExt",0],[1,"bool"]],"b":[]}],\
["aml",{"doc":"<code>aml</code> is a pure-Rust AML (ACPI Machine Language) parser, …","t":"SPPFGFFEPPPGPPPPPPKPPPPPPPPPPPPPGPPPPPGFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNCMMMMMMMMMMNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNCOMMMMMMMMMMOOPPPPPEPFGFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPGFGPPFGGPPPPFPGGPFPPPGGPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPGGPFPPPPPPPPPPPPTPPPGFPGPPPPPPPGFPPPPPPPPPPPPPPPPPPGPFPPPPPPPPPPPNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOO","n":["AML_INTERPRETER_REVISION","All","AllScopes","AmlContext","AmlError","AmlHandle","AmlName","AmlValue","BreakInInvalidPosition","BufferFieldIndexesOutOfBounds","ContinueInInvalidPosition","DebugVerbosity","Device","EmptyNamesAreInvalid","FatalError","FieldInvalidAccessSize","FieldInvalidAddress","FieldRegionIsNotOpRegion","Handler","IncompatibleValueConversion","InvalidArgAccess","InvalidFieldFlags","InvalidLocalAccess","InvalidNameSeg","InvalidNormalizedName","InvalidPkgLength","InvalidRegionSpace","InvalidShiftLeft","InvalidShiftRight","InvalidStatusObject","InvalidStringConstant","LevelDoesNotExist","LevelType","MalformedBuffer","MalformedPackage","MalformedStream","MethodLocals","NameCollision","NameComponent","Namespace","NamespaceLevel","None","NotExecutingControlMethod","PowerResource","Prefix","Processor","PrtInvalidAddress","PrtInvalidGsi","PrtInvalidPin","PrtInvalidSource","PrtNoEntry","ReservedResourceType","ResourceDescriptorTooLong","ResourceDescriptorTooShort","Root","RootHasNoParent","Scope","Scopes","Segment","ThermalZone","TooManyArgs","TriedToRemoveRootNamespace","TypeCannotBeCompared","TypeCannotBeSliced","TypeCannotBeWrittenToBufferField","UnexpectedByte","UnexpectedEndOfStream","UnexpectedResourceType","Unimplemented","UnterminatedStringConstant","ValueDoesNotExist","WrongParser","add_alias_at_resolved_path","add_level","add_value","add_value_at_resolved_path","as_segment","as_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_components","from_name_seg","from_str","get","get_by_path","get_by_path_mut","get_handle","get_mut","handle_fatal_error","initialize_objects","into","into","into","into","into","into","into","into","into","invoke_method","is_absolute","is_normal","namespace","new","new","normalize","parent","parse_table","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pci_routing","read_io_u16","read_io_u32","read_io_u8","read_pci_u16","read_pci_u32","read_pci_u8","read_u16","read_u32","read_u64","read_u8","remove_level","resolve","resource","root","search","search_for_level","search_rules_apply","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","traverse","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","write_io_u16","write_io_u32","write_io_u8","write_pci_u16","write_pci_u32","write_pci_u8","write_u16","write_u32","write_u64","write_u8","current","target","Gsi","IntA","IntB","IntC","IntD","IrqDescriptor","LinkObject","PciRoute","PciRouteType","PciRoutingTable","Pin","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_prt_path","into","into","into","into","route","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ActiveHigh","ActiveLow","Additive","AddressSpace","AddressSpaceDecodeType","AddressSpaceDescriptor","AddressSpaceResourceType","BusNumberRange","CompatibilityMode","DMADescriptor","DMASupportedSpeed","DMATransferTypePreference","Dma","Edge","FixedLocation","IOPort","IOPortDescriptor","IORange","InterruptPolarity","InterruptTrigger","Irq","IrqDescriptor","Level","MemoryRange","MemoryRange","MemoryRangeDescriptor","Resource","Subtractive","TypeA","TypeB","TypeF","_16Bit","_8And16Bit","_8BitOnly","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","dma_format_descriptor","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","irq","is_consumer","is_shared","is_wake_capable","polarity","resource_descriptor_list","to_owned","to_owned","to_owned","to_owned","to_owned","trigger","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","base_address","is_writable","range_length","Aml","AmlType","AmlValue","Any","Args","Boolean","Buffer","Buffer","Buffer","BufferField","BufferField","Byte","DWord","DdbHandle","DebugObject","Device","Device","EMPTY","EmbeddedControl","Event","Field","FieldAccessType","FieldFlags","FieldUnit","FieldUpdateRule","GeneralPurposeIo","GenericSerialBus","IPMI","Integer","Integer","Method","Method","MethodCode","MethodFlags","Mutex","Mutex","Native","ObjReference","OemDefined","OpRegion","OpRegion","Package","Package","PciBarTarget","PciConfig","PowerResource","PowerResource","Preserve","Processor","Processor","QWord","RawDataBuffer","RegionSpace","SMBus","StatusObject","String","String","SystemCmos","SystemIo","SystemMemory","ThermalZone","ThermalZone","Uninitialized","Word","WriteAsOnes","WriteAsZeros","access_type","arg","arg_count","as_bool","as_buffer","as_concat_type","as_integer","as_status","as_string","as_type","battery_present","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","field_update_rule","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_list","functional","into","into","into","into","into","into","into","into","into","into","lock_rule","native_method","new","new","one","ones","present","read_buffer_field","read_field","serialize","show_in_ui","store_arg","sync_level","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of","write_buffer_field","write_field","zero","buffer_data","code","flags","flags","id","length","length","length","offset","offset","offset","parent_device","pblk_address","pblk_len","region","region","resource_order","sync_level","system_level"],"q":[[0,"aml"],[241,"aml::AmlError"],[243,"aml::pci_routing"],[292,"aml::resource"],[457,"aml::resource::MemoryRangeDescriptor"],[460,"aml::value"],[679,"aml::value::AmlValue"],[698,"core::result"],[699,"alloc::string"],[700,"core::cmp"],[701,"core::fmt"],[702,"core::fmt"],[703,"alloc::boxed"],[704,"core::option"],[705,"core::ops::function"],[706,"core::any"],[707,"spinning_top::spinlock"],[708,"alloc::sync"],[709,"core::ops::function"],[710,"core::marker"]],"d":["AML has a <code>RevisionOp</code> operator that returns the “AML …","Print heads and tails of all objects, and extra debug …","Print heads and tails when entering and leaving scopes of …","","Used when an <code>AmlContext</code> encounters an error.","A handle is used to refer to an AML value without actually …","","","A <code>DefBreak</code> operation was performed outside of a <code>DefWhile</code> …","","A <code>DefContinue</code> operation was performed outside of a <code>DefWhile</code>…","Describes how much debug information the parser should …","","","Returned when a <code>DefFatal</code> op is encountered. This is …","","","","Trait type used by <code>AmlContext</code> to handle reading and …","","Produced when a method accesses an argument it does not …","","Produced when a method accesses a local that it has not …","","Produced when trying to normalize a path that does not …","","","","","","","Produced when a sub-level or value is added to a level …","","Produced when a <code>DefBuffer</code> contains more bytes that its …","Produced when a <code>DefPackage</code> contains a different number of …","Produced when the stream evaluates to something other than …","A level of this type is created at the same path as the …","Produced when two values with the same name are added to …","","","","Print no debug information","Produced when AML tries to do something only possible in a …","A <code>PowerResource</code> object’s sub-objects are stored in a …","","A legacy <code>Processor</code> object’s sub-objects are stored in a …","","","","","Produced when the PRT doesn’t contain an entry for the …","","","","","","","Print heads and tails when entering and leaving scopes of …","","A <code>ThermalZone</code> object’s sub-objects are stored in a level …","Tried to invoke a method with too many arguments.","","","Produced when the <code>Mid</code> operator is applied to a value of a …","","","","","Unimplemented functionality - return error rather than …","","","Emitted by a parser when it’s clear that the stream doesn…","Add an alias for an existing name. The alias will refer to …","Add a new level to the namespace. A “level” is named …","Add a value to the namespace at the given path, which must …","Helper method for adding a value to the namespace at a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Convert a string representation of an AML name into an …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","An AML path is normal if it does not contain any prefix …","","Creates a new <code>AmlContext</code> - the central type in managing …","","Normalize an AML path, resolving prefix chars. Returns …","Get the parent of this <code>AmlName</code>. For example, the parent of …","","","","","","","","","","","","","","","","","","Resolve this path against a given scope, making it …","","","Search for an object at the given path of the namespace, …","","Special rules apply when searching for certain paths …","","","","","","","","","","Traverse the namespace, calling <code>f</code> on each namespace level. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The interrupt is hard-coded to a specific GSI","","","","","","The interrupt is linked to a link object. This object will …","","","A <code>PciRoutingTable</code> is used to interpret the data in a <code>_PRT</code> …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a <code>PciRoutingTable</code> from a path to a <code>_PRT</code> object. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the interrupt input that a given PCI interrupt pin is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Parse a <code>ResourceDescriptor</code> into a list of resources. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A control method can take up to 7 arguments, each of which …","","","","","","","","","Handle to a definition block handle. Returned by the <code>Load</code> …","","","","","","","Describes a field unit within an operation region.","","","","","","","","","","","","","","","","","","","","Describes an operation region. Some regions require other …","","","","","","","","","","","","","","Representation of the return value of a <code>_STA</code> method, which …","","","","","","","","","","","","","","","","","Converts an <code>AmlValue</code> to the representation that should be …","","Turns an <code>AmlValue</code> returned from a <code>_STA</code> method into a …","","Convert this value to a value of the same data, but with …","Only applicable for Control Method Battery Devices (<code>PNP0C0A</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logically compare two <code>AmlValue</code>s, according to the rules …","","","Whether the device is enabled. Both <code>present</code> and <code>enabled</code> …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Whether the device is physically present. If this is <code>false</code>…","","Reads from a field of an opregion, returning either a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In bits.","","","In bits.","","","","","","","",""],"i":[0,12,12,0,0,0,0,0,4,4,4,0,6,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,6,4,0,0,0,12,4,6,9,6,4,4,4,4,4,4,4,4,9,4,6,12,9,6,4,4,4,4,4,4,4,4,4,4,4,4,1,1,1,1,9,2,23,3,6,11,1,2,9,12,4,23,3,6,11,1,2,9,12,4,11,3,6,11,1,2,9,12,4,3,6,11,1,2,9,12,4,3,2,9,12,3,6,2,9,12,4,3,6,11,1,2,2,9,12,4,23,3,6,11,1,2,9,12,4,2,2,2,1,1,1,1,1,19,23,23,3,6,11,1,2,9,12,4,23,2,2,23,23,1,2,2,23,3,2,9,12,0,19,19,19,19,19,19,19,19,19,19,1,2,0,2,1,1,2,3,6,11,1,2,9,12,4,2,1,23,3,6,11,1,2,9,12,4,23,3,6,11,1,2,9,12,4,11,23,3,6,11,1,2,9,12,4,0,11,19,19,19,19,19,19,19,19,19,19,62,62,34,33,33,33,33,0,34,0,0,0,0,33,34,35,36,33,34,35,36,33,33,33,33,34,35,36,33,34,35,36,36,33,34,35,36,36,33,33,34,35,36,33,34,35,36,33,34,35,36,39,39,41,42,0,0,0,40,45,0,0,0,42,38,44,42,0,40,0,0,42,0,38,42,40,0,0,41,45,45,45,46,46,46,42,38,39,40,41,43,44,37,45,46,47,48,42,38,39,40,41,43,44,37,45,46,47,48,38,39,40,41,37,38,39,40,41,37,0,42,38,39,40,41,43,44,37,45,46,47,48,42,38,39,40,41,43,44,37,45,46,47,48,42,38,39,40,41,43,44,37,45,46,47,48,42,38,39,40,41,43,44,37,45,46,47,48,37,37,37,37,37,0,38,39,40,41,37,37,42,38,39,40,41,43,44,37,45,46,47,48,42,38,39,40,41,43,44,37,45,46,47,48,42,38,39,40,41,43,44,37,45,46,47,48,63,63,63,58,0,0,50,0,8,50,55,8,55,8,50,50,55,55,55,8,24,56,55,8,0,0,55,0,56,56,56,55,8,55,8,0,0,55,8,58,55,56,55,8,55,8,56,56,55,8,57,55,8,50,55,0,56,0,55,8,56,56,56,55,8,55,50,57,57,49,24,51,8,8,8,8,8,8,8,54,56,50,57,49,51,54,55,58,8,24,56,50,57,49,51,54,55,58,8,24,56,50,57,49,51,54,55,58,8,24,56,50,57,49,51,54,55,58,8,24,8,54,24,54,56,50,57,49,51,54,55,49,56,50,57,49,51,54,55,58,8,24,56,50,57,49,51,51,54,55,58,8,24,24,54,56,50,57,49,51,54,55,58,8,24,49,8,49,51,8,8,54,8,8,51,54,24,51,56,50,57,49,51,54,55,58,8,24,56,50,57,49,51,54,55,58,8,24,56,50,57,49,51,54,55,58,8,24,56,50,57,49,51,54,55,58,8,24,8,8,8,8,64,65,66,65,67,68,66,64,68,66,64,68,67,67,68,66,69,70,69],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,2,2],[[5,[3,4]]]],[[1,2,6],[[5,[7,4]]]],[[1,2,8],[[5,[3,4]]]],[[1,2,2,8],[[5,[3,4]]]],[9,[[5,[0,7]]]],[2,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[3,3],[6,6],[11,11],[1,1],[2,2],[9,9],[12,12],[4,4],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[3,3],13],[[2,2],13],[[9,9],13],[[12,12],13],[[3,3],14],[[6,6],14],[[2,2],14],[[9,9],14],[[12,12],14],[[4,4],14],[[3,15],16],[[6,15],16],[[11,15],16],[[1,15],16],[[2,15],16],[[2,15],16],[[9,15],16],[[12,15],16],[[4,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[17,[9]]],2],0,[18,[[5,[2,4]]]],[[1,3],[[5,[8,4]]]],[[1,2],[[5,[8,4]]]],[[1,2],[[5,[8,4]]]],[[1,2],[[5,[3,4]]]],[[1,3],[[5,[8,4]]]],[[19,20,21,22],7],[23,[[5,[7,4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,2,24],[[5,[8,4]]]],[2,14],[2,14],0,[[[25,[19]],12],23],[[],1],[2,[[5,[2,4]]]],[2,[[5,[2,4]]]],[[23,[26,[20]]],[[5,[7,4]]]],[[3,3],[[27,[13]]]],[[2,2],[[27,[13]]]],[[9,9],[[27,[13]]]],[[12,12],[[27,[13]]]],0,[[19,28],28],[[19,28],21],[[19,28],20],[[19,28,20,20,20,28],28],[[19,28,20,20,20,28],21],[[19,28,20,20,20,28],20],[[19,29],28],[[19,29],21],[[19,29],22],[[19,29],20],[[1,2],[[5,[7,4]]]],[[2,2],[[5,[2,4]]]],0,[[],2],[[1,2,2],[[5,[[7,[2,3]],4]]]],[[1,2,2],[[5,[2,4]]]],[2,14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,10,[]],[[1,-1],[[5,[7,4]]],[[31,[2,11],[[30,[[5,[14,4]]]]]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],0,[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],0,0,[[19,28,28],7],[[19,28,21],7],[[19,28,20],7],[[19,28,20,20,20,28,28],7],[[19,28,20,20,20,28,21],7],[[19,28,20,20,20,28,20],7],[[19,29,28],7],[[19,29,21],7],[[19,29,22],7],[[19,29,20],7],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[[-1,-2],7,[],[]],[[33,33],14],[[33,15],16],[[34,15],16],[[35,15],16],[[36,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[2,23],[[5,[36,4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[36,28,28,33,23],[[5,[37,4]]]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,38],[39,39],[40,40],[41,41],[37,37],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[[26,[20]]],[[5,[42,4]]]],[[42,42],14],[[38,38],14],[[39,39],14],[[40,40],14],[[41,41],14],[[43,43],14],[[44,44],14],[[37,37],14],[[45,45],14],[[46,46],14],[[47,47],14],[[48,48],14],[[42,15],16],[[38,15],16],[[39,15],16],[[40,15],16],[[41,15],16],[[43,15],16],[[44,15],16],[[37,15],16],[[45,15],16],[[46,15],16],[[47,15],16],[[48,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[8,[[5,[[17,[42]],4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[49,[[5,[50,4]]]],[[24,20],[[5,[8,4]]]],[51,20],[8,[[5,[14,4]]]],[[8,23],[[5,[[53,[[52,[[17,[20]]]]]],4]]]],[8,8],[[8,23],[[5,[22,4]]]],[8,[[5,[54,4]]]],[[8,23],[[5,[10,4]]]],[[8,55,23],[[5,[8,4]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[50,50],[57,57],[49,49],[51,51],[54,54],[55,55],[58,58],[8,8],[24,24],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[8,8,23],[[5,[13,4]]]],[[],54],[[],24],0,[[56,56],14],[[50,50],14],[[57,57],14],[[49,49],14],[[51,51],14],[[54,54],14],[[55,55],14],[49,[[5,[57,4]]]],[[56,15],16],[[50,15],16],[[57,15],16],[[49,15],16],[[51,15],16],[[54,15],16],[[55,15],16],[[58,15],16],[[8,15],16],[[24,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,51],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[17,[8]]],[[5,[24,4]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,14],[[20,14,20,-1],8,[[59,[23],[[30,[[5,[8,4]]]]]],60,61]],[20,49],[[20,14,20],51],[[],8],[[],8],0,[[8,23],[[5,[8,4]]]],[[8,23],[[5,[8,4]]]],[51,14],0,[[24,20,8],[[5,[7,4]]]],[51,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[8,55],[[8,8,23],[[5,[7,4]]]],[[8,8,23],[[5,[7,4]]]],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[5,"Namespace",0],[5,"AmlName",0],[5,"AmlHandle",0],[6,"AmlError",0],[6,"Result",698],[6,"LevelType",0],[1,"tuple"],[6,"AmlValue",460],[6,"NameComponent",0],[5,"String",699],[5,"NamespaceLevel",0],[6,"DebugVerbosity",0],[6,"Ordering",700],[1,"bool"],[5,"Formatter",701],[8,"Result",701],[5,"Vec",702],[1,"str"],[10,"Handler",0],[1,"u8"],[1,"u32"],[1,"u64"],[5,"AmlContext",0],[5,"Args",460],[5,"Box",703],[1,"slice"],[6,"Option",704],[1,"u16"],[1,"usize"],[17,"Output"],[10,"FnMut",705],[5,"TypeId",706],[6,"Pin",243],[6,"PciRouteType",243],[5,"PciRoute",243],[5,"PciRoutingTable",243],[5,"IrqDescriptor",292],[6,"InterruptTrigger",292],[6,"InterruptPolarity",292],[6,"AddressSpaceResourceType",292],[6,"AddressSpaceDecodeType",292],[6,"Resource",292],[5,"AddressSpaceDescriptor",292],[6,"MemoryRangeDescriptor",292],[6,"DMASupportedSpeed",292],[6,"DMATransferTypePreference",292],[5,"DMADescriptor",292],[5,"IOPortDescriptor",292],[5,"FieldFlags",460],[6,"FieldAccessType",460],[5,"MethodFlags",460],[8,"Spinlock",707],[5,"Arc",708],[5,"StatusObject",460],[6,"AmlType",460],[6,"RegionSpace",460],[6,"FieldUpdateRule",460],[6,"MethodCode",460],[10,"Fn",705],[10,"Send",709],[10,"Sync",709],[15,"IncompatibleValueConversion",241],[15,"FixedLocation",457],[15,"BufferField",679],[15,"Method",679],[15,"Field",679],[15,"Processor",679],[15,"OpRegion",679],[15,"PowerResource",679],[15,"Mutex",679]],"b":[[127,"impl-Display-for-AmlName"],[128,"impl-Debug-for-AmlName"]]}],\
["array_init",{"doc":"The <code>array-init</code> crate allows you to initialize arrays with …","t":"HHHHH","n":["array_init","from_iter","from_iter_reversed","map_array_init","try_array_init"],"q":[[0,"array_init"],[5,"core::ops::function"],[6,"core::option"],[7,"core::iter::traits::collect"],[8,"core::result"]],"d":["Initialize an array given an initializer expression.","Initialize an array given an iterator","Initialize an array in reverse given an iterator","Initialize an array given a source array and a mapping …","Initialize an array given an initializer expression that …"],"i":[0,0,0,0,0],"f":[[-2,[[1,[-1]]],[],[[4,[2],[[3,[-1]]]]]],[-2,[[5,[[1,[-1]]]]],[],[[7,[],[[6,[-1]]]]]],[-2,[[5,[[1,[-1]]]]],[],[[7,[],[[6,[-1]]]]]],[[[1,[-1]],-3],[[1,[-2]]],[],[],[[4,[-1],[[3,[-2]]]]]],[-3,[[8,[[1,[-1]],-2]]],[],[],[[4,[2],[[3,[[8,[-1,-2]]]]]]]]],"c":[],"p":[[1,"array"],[1,"usize"],[17,"Output"],[10,"FnMut",5],[6,"Option",6],[17,"Item"],[10,"IntoIterator",7],[6,"Result",8]],"b":[]}],\
["aster_frame",{"doc":"The framework part of Asterinas.","t":"PEGPPPPPPPECCNNCNNCCCQNQQNNNHNCCCQCCCCNCNNNCQCCCCCCHCCCHIHHHHCCCJJHFKKKKFFFNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMFNNONONNONOOOONNNNFGPPNNNNNNNNNNNNNNNNNNNNNPGPNNNNNNHNNNNNNNFNNNNNNNNNNOOOOOOONNNNFSNNNNNNNNNNNNHNNNNHGFPPPPHOHNNNNOHNNNNNNNNHNNOHHNNCHCHHNNNNNNNNOPFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNGPPNNNNNNNHNCNCNNNJCCHFKKNNMNNNMNNNNPFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTJFFNNNNNCOCCONNNNNCOONNNNNNNNNONNNOOOOONNNNNNNNONFKKNNMNNNMNNNNPPPFGPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNCNNNNNNNCFNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNGTGPPPPPPPPPTPPPPFPTTTPTTPTTTPPPFPTTTTPPFPTGTTPTTTTTFPPPTPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNCFFPPPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHSPSSSSFFGFFSSSSPPFSFTSTSSPSSSSTTFTSSSSSSSSPSSTTSSPTFFSSTSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONONNNNNNNNNNNNNNNNNNNNNNNNNNHOONNONONONONONONONONONONONONONONNNNNONONONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNSTPGTIFGFFJEEEEPKKSSIFFITTTTEPPIKFFFFTPPPPTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNFFEEENNNNNNNNNNNNNNCNNNNNNCNNNNCNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHPPEIEEXQQIIIIIIIIFFIFIIIFIIIFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPFTFPKPPFFKFGHNNNNNNNNNNNNNNNNNNNNNNNNHNNNNMNHNNNNNNNNMNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNHNNHNMHMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIFEFONNNNNNNNNNNNONHNNNNNHONNNNNHNNNNNNOOOOOOOOOOOOOOOOOOCNNNONNNNNNNNNFNNNNNNNNNNNNNPGKPFFPNNNNNNNNNNNNNNNNNNMNNNNNNMMMMMNNNNNNNNNNN","n":["AccessDenied","CpuLocal","Error","InvalidArgs","IoError","MapAlreadyMappedVaddr","NoMemory","NotEnoughResources","Overflow","PageFault","Result","arch","boot","borrow","borrow_mut","bus","clone","clone_into","collections","console","cpu","cpu_local","dst_size","early_print","early_println","eq","fmt","from","init","into","io_mem","logger","mm","offset_of","panicking","prelude","sync","task","to_owned","trap","try_from","try_into","type_id","user","value_offset","x86","boot","console","device","iommu","qemu","read_tsc","task","timer","trap","tsc_freq","InputCallback","print","receive_char","register_console_input_callback","send","cmos","io_port","serial","CMOS_ADDRESS","CMOS_DATA","get_century_register","IoPort","IoPortReadAccess","IoPortWriteAccess","PortRead","PortWrite","ReadOnlyAccess","ReadWriteAccess","WriteOnlyAccess","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","dst_size","dst_size","dst_size","dst_size","fmt","fmt","fmt","from","from","from","from","into","into","into","into","new","read","read_from_port","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write_to_port","SerialPort","borrow","borrow_mut","data","dst_size","fifo_ctrl","from","init","int_en","into","line_ctrl","line_status","modem_ctrl","modem_status","new","try_from","try_into","type_id","DeviceMode","IommuError","ModificationError","NoIommu","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","dst_size","dst_size","fmt","fmt","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Failed","QemuExitCode","Success","borrow","borrow_mut","clone","clone_into","dst_size","eq","exit_qemu","fmt","from","into","to_owned","try_from","try_into","type_id","CalleeRegs","borrow","borrow_mut","clone","clone_into","default","dst_size","fmt","from","into","new","r12","r13","r14","r15","rbp","rbx","rsp","to_owned","try_from","try_into","type_id","Jiffies","TIMER_FREQ","as_duration","as_u64","borrow","borrow_mut","clone","clone_into","dst_size","elapsed","fmt","from","into","new","register_callback","to_owned","try_from","try_into","type_id","is_kernel_interrupted","BootloaderAcpiArg","BootloaderFramebufferArg","NotProvided","Rsdp","Rsdt","Xsdt","acpi_arg","address","bootloader_name","borrow","borrow","borrow_mut","borrow_mut","bpp","call_aster_main","clone","clone","clone_into","clone_into","dst_size","dst_size","fmt","fmt","framebuffer_arg","from","from","height","init","initramfs","into","into","kcmdline","kernel_cmdline","memory_region","memory_regions","register_boot_init_callbacks","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","width","Arg","KCmdlineArg","KeyVal","ModuleArg","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","dst_size","dst_size","eq","fmt","fmt","from","from","from","get_initproc_argv","get_initproc_envp","get_initproc_path","get_module_args","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","BadMemory","Framebuffer","Kernel","MemoryRegion","MemoryRegionType","Module","NonVolatileSleep","Reclaimable","Reserved","Usable","base","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","dst_size","dst_size","eq","eq","fmt","fmt","from","from","from","from","into","into","is_empty","kernel","len","new","non_overlapping_regions_from","partial_cmp","partial_cmp","to_owned","to_owned","truncate","try_from","try_from","try_into","try_into","typ","type_id","type_id","BusProbeError","ConfigurationSpaceError","DeviceNotMatch","borrow","borrow_mut","cmp","dst_size","eq","fmt","from","init","into","mmio","partial_cmp","pci","try_from","try_into","type_id","MMIO_BUS","bus","device","init","MmioBus","MmioDevice","MmioDriver","borrow","borrow_mut","device_id","dst_size","from","into","probe","register_driver","try_from","try_into","type_id","Legacy","MmioCommonDevice","Modern","VirtioMmioVersion","address","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","device_id","dst_size","dst_size","eq","fmt","fmt","from","from","into","into","io_mem","irq","irq_mut","partial_cmp","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","version","MAX_BUS","MAX_DEVICE","MAX_FUNCTION","MIN_BUS","MIN_DEVICE","MIN_FUNCTION","PCI_BUS","PciDeviceId","PciDeviceLocation","all","borrow","borrow","borrow_mut","borrow_mut","bus","bus","capability","cfg_space","class","clone","clone","clone_into","clone_into","cmp","common_device","device","device_id","dst_size","dst_size","encode_as_x86_address_value","eq","eq","fmt","fmt","from","from","function","into","into","partial_cmp","prog_if","revision_id","subclass","subsystem_id","subsystem_vendor_id","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vendor_id","zero","PciBus","PciDevice","PciDriver","borrow","borrow_mut","device_id","dst_size","from","into","probe","register_driver","try_from","try_into","type_id","Af","Agp","Agp3","Capability","CapabilityData","Ccrc","Chswp","Dbg","Ea","Exp","Hp","Msi","Msix","PciX","Pm","Sata","Secdev","Shpc","SlotId","Ssvid","Unknown","Vndr","Vpd","borrow","borrow","borrow_mut","borrow_mut","capability_data","clone","clone_into","dst_size","dst_size","fmt","fmt","from","from","into","into","msix","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vendor","CapabilityMsixData","borrow","borrow_mut","clone","clone_into","dst_size","fmt","from","into","irq_mut","set_interrupt_vector","table_size","to_owned","try_from","try_into","type_id","CapabilityVndrData","borrow","borrow_mut","clone","clone_into","dst_size","eq","fmt","from","into","is_empty","len","read16","read32","read8","to_owned","try_from","try_into","type_id","write16","write32","write8","AddrLen","BUS_MASTER","Bar","Bar0","Bar1","Bar2","Bar3","Bar4","Bar5","Bist","Bits32","Bits64","CAPABILITIES_LIST","CacheLineSize","CapabilitiesPointer","CardbusCisPtr","ClassCode","Command","Command","DETECTED_PARITY_ERROR","DEVSEL_MEDIUM_TIMING","DEVSEL_SLOW_TIMING","DeviceId","FAST_BACK_TO_BACK_CAPABLE","FAST_BACK_TO_BACK_ENABLE","HeaderType","INTERRUPT_DISABLE","INTERRUPT_STATUS","IO_SPACE","InterruptLine","InterruptPin","Io","IoBar","LatencyTimer","MASTER_DATA_PARITY_ERROR","MEMORY_SPACE","MHZ66_CAPABLE","MWI_ENABLE","MaxLatency","Memory","MemoryBar","MinGrant","PARITY_ERROR_RESPONSE","PciDeviceCommonCfgOffset","RECEIVED_MASTER_ABORT","RECEIVED_TARGET_ABORT","RevisionId","SERR_ENABLE","SIGNALED_SYSTEM_ERROR","SIGNALED_TARGET_ABORT","SPECIAL_CYCLES","STEPPING_CONTROL","Status","Status","SubsystemId","SubsystemVendorId","VGA_PALETTE_SNOOP","VendorId","XromBar","address_length","all","all","base","base","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","difference","difference","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","empty","empty","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","io_mem","is_all","is_all","is_empty","is_empty","not","not","partial_cmp","partial_cmp","prefetchable","read","remove","remove","set","set","size","size","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","write","BarManager","PciCommonDevice","bar","bar_manager","borrow","borrow","borrow_mut","borrow_mut","capabilities","command","device_id","dst_size","dst_size","fmt","fmt","from","from","into","into","location","set_command","status","try_from","try_from","try_into","try_into","type_id","type_id","xarray","Cursor","CursorMut","Mark0","Mark1","Mark2","XArray","XMark","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cursor","cursor_mut","drop","dst_size","dst_size","dst_size","dst_size","from","from","from","from","index","index","into","into","into","into","is_marked","is_marked","is_marked","load","load","load","new","next","next","range","remove","remove","reset_to","reset_to","set_mark","set_mark","store","store","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unset_mark","unset_mark","unset_mark_all","print","ALIGNMENT_CHECK","Abort","BOUND_RANGE_EXCEEDED","BREAKPOINT","CONTROL_PROTECTION_EXCEPTION","COPROCESSOR_SEGMENT_OVERRUN","CpuException","CpuExceptionInfo","CpuExceptionType","CpuLocal","CpuSet","DEBUG","DEVICE_NOT_AVAILABLE","DIVIDE_BY_ZERO","DOUBLE_FAULT","Fault","FaultOrTrap","FpRegs","GENERAL_PROTECTION_FAULT","GeneralRegs","HLAT","HYPERVISOR_INJECTION_EXCEPTION","INSTRUCTION","INVAILD_TSS","INVALID_OPCODE","Interrupt","MACHINE_CHECK","NON_MASKABLE_INTERRUPT","OVERFLOW","PAGE_FAULT","PRESENT","PROTECTION","PageFaultErrorCode","RESERVED","RESERVED_15","RESERVED_22","RESERVED_23","RESERVED_24","RESERVED_25","RESERVED_26","RESERVED_27","RESERVED_31","Reserved","SECURITY_EXCEPTION","SEGMENT_NOT_PRESENT","SGX","SHADOW_STACK","SIMD_FLOATING_POINT_EXCEPTION","STACK_SEGMENT_FAULT","Trap","USER","UserContext","UserPreemption","VIRTUALIZATION_EXCEPTION","VMM_COMMUNICATION_EXCEPTION","WRITE","X87_FLOATING_POINT_EXCEPTION","add","add_all","add_from_vec","all","as_slice","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_with","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","contains","default","default","default","default","default","deref","difference","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","empty","eq","eq","eq","eq","error_code","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fp_regs","fp_regs_mut","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","fsbase","fsbase","general_regs","general_regs_mut","gsbase","gsbase","hash","id","insert","instruction_pointer","intersection","intersects","into","into","into","into","into","into","into","into","into","into","is_all","is_cpu_exception","is_empty","is_valid","iter","might_preempt","new","new","new","new_empty","new_full","not","num_cpus","number","page_fault_addr","partial_cmp","r10","r10","r11","r11","r12","r12","r13","r13","r14","r14","r15","r15","r8","r8","r9","r9","rax","rax","rbp","rbp","rbx","rbx","rcx","rcx","rdi","rdi","rdx","rdx","remove","remove","remove_from_vec","restore","rflags","rflags","rip","rip","rsi","rsi","rsp","rsp","save","save_from_slice","set","set_fsbase","set_gsbase","set_instruction_pointer","set_r10","set_r11","set_r12","set_r13","set_r14","set_r15","set_r8","set_r9","set_rax","set_rbp","set_rbx","set_rcx","set_rdi","set_rdx","set_rflags","set_rip","set_rsi","set_rsp","set_stack_pointer","stack_pointer","sub","sub_assign","symmetric_difference","this_cpu","to_cpu_exception","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","trap_error_code","trap_information","trap_number","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","IoMem","borrow","borrow_mut","clone","clone_into","dst_size","fmt","from","into","length","paddr","paddr","read_bytes","read_val","resize","to_owned","try_from","try_into","type_id","write_bytes","write_val","INIT_LOG_LEVEL","ACCESSED","Bidirectional","CachePolicy","DIRTY","Daddr","DmaCoherent","DmaDirection","DmaStream","DmaStreamSlice","FRAMEBUFFER_REGIONS","Frame","FrameAllocOptions","FrameVec","FrameVecIter","FromDevice","HasDaddr","HasPaddr","MAX_USERSPACE_VADDR","PAGE_SIZE","Paddr","PageFlags","PageProperty","PagingLevel","R","RW","RWX","RX","Segment","ToDevice","Uncacheable","Vaddr","VmIo","VmMapOptions","VmReader","VmSpace","VmWriter","W","WriteCombining","WriteProtected","Writeback","Writethrough","X","addr","align","all","avail","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","can_overwrite","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","cursor","cursor","daddr","daddr","daddr","daddr","default","default","deref","difference","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","empty","eq","eq","eq","eq","extend","fill","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork_copy_on_write","frame","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw_parts","from_raw_parts_mut","has_avail","has_remain","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","is_page_aligned","limit","limit","map","map","map","nbytes","nbytes","new","new","new","new","new_absent","nframes","not","paddr","paddr","paddr","paddr","partial_cmp","protect","query","query_range","read","read_bytes","read_bytes","read_bytes","read_bytes","read_slice","read_slice","read_val","read_val","read_val","reader","reader","remain","remove","set","skip","skip","sub","sub_assign","symmetric_difference","sync","sync","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unmap","vm_segment","write","write_bytes","write_bytes","write_bytes","write_bytes","write_slice","write_slice","write_val","write_val","write_vals","write_vals","writer","writer","Frame","FrameRef","FrameVec","FrameVecIter","Segment","as_mut_ptr","as_ptr","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copy_from","deref","dst_size","dst_size","end_paddr","fmt","frame_vec","from","from","from_raw","into","into","into_raw","options","paddr","raw_as_ref","read_bytes","reader","segment","size","start_paddr","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write_bytes","writer","FrameVec","FrameVecIter","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","dst_size","dst_size","empty","fmt","from","from","from_one_frame","get","into","into","into_iter","into_iter","is_empty","iter","len","nbytes","new","new_with_capacity","next","pop","push","read_bytes","remove","to_owned","truncate","try_from","try_from","try_into","try_into","type_id","type_id","write_bytes","FrameAllocOptions","alloc","alloc_contiguous","alloc_single","borrow","borrow_mut","dst_size","from","into","is_contiguous","new","try_from","try_into","type_id","uninit","Segment","as_mut_ptr","as_ptr","borrow","borrow_mut","clone","clone_into","dst_size","end_paddr","fmt","from","from","into","nbytes","nframes","paddr","range","read_bytes","reader","start_paddr","to_owned","try_from","try_into","type_id","write_bytes","writer","abort","panic_handler","Err","Ok","Paddr","Result","Vaddr","abort","aster_main","print","println","ArcMutexGuard","ArcRwLockReadGuard","ArcRwLockUpgradeableGuard","ArcRwLockWriteGuard","ArcRwMutexReadGuard","ArcRwMutexUpgradeableGuard","ArcRwMutexWriteGuard","ArcSpinLockGuard","AtomicBits","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradeableGuard","RwLockWriteGuard","RwMutex","RwMutexReadGuard","RwMutexUpgradeableGuard","RwMutexWriteGuard","SpinLock","SpinLockGuard","WaitQueue","Waiter","Waker","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","drop","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get","into","into","into","into","into","into","into","into","is_empty","is_full","iter","iter_ones","iter_zeroes","len","lock","lock","lock_arc","lock_arc","lock_irq_disabled","new","new","new","new","new","new_ones","new_pair","new_zeroes","read","read","read_arc","read_irq_disabled","set","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock_arc","try_lock_irq_disabled","try_read","try_read","try_read_arc","try_read_irq_disabled","try_upread","try_upread","try_upread_arc","try_upread_irq_disabled","try_write","try_write","try_write_irq_disabled","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upread","upread","upread_arc","upread_irq_disabled","wait","wait_until","wake_all","wake_one","wake_up","waker","write","write","write_arc","write_irq_disabled","DisablePreemptGuard","Exited","FifoScheduler","NEW","Priority","Runnable","Scheduler","Sleeping","Sleepy","Task","TaskAdapter","TaskContextApi","TaskOptions","TaskStatus","add_task","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cpu_affinity","current","current_task","data","data","default","default","dequeue","dequeue","disable_preempt","drop","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","enqueue","enqueue","eq","fmt","from","from","from","from","from","from","from","func","get","get_link","get_value","high","highest","instruction_pointer","into","into","into","into","into","into","into","is_real_time","is_real_time","link_ops","link_ops_mut","low","lowest","new","new","new","new","normal","partial_cmp","pointer_ops","preempt","priority","run","schedule","set","set_instruction_pointer","set_scheduler","set_stack_pointer","should_preempt","should_preempt","spawn","stack_pointer","status","to_owned","to_owned","to_owned","transfer_to","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_space","user_space","yield_now","DisabledLocalIrqGuard","IrqCallbackFunction","IrqLine","SoftIrqLine","TrapFrame","_pad","alloc","alloc_specific","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cs","default","disable_local","drop","drop","dst_size","dst_size","dst_size","enable_local","error_code","fmt","fmt","from","from","from","in_interrupt_context","into","into","into","is_empty","num","on_active","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","rflags","rip","rsi","rsp","softirq","to_owned","to_owned","transfer_to","trap_num","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","SoftIrqLine","borrow","borrow_mut","dst_size","enable","from","get","id","into","is_enabled","raise","try_from","try_into","type_id","KernelEvent","ReturnReason","UserContextApi","UserException","UserMode","UserSpace","UserSyscall","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cmp","context","context_mut","dst_size","dst_size","dst_size","eq","execute","fmt","from","from","from","instruction_pointer","into","into","into","new","new","partial_cmp","set_instruction_pointer","set_stack_pointer","stack_pointer","trap_error_code","trap_number","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_mode","vm_space"],"q":[[0,"aster_frame"],[45,"aster_frame::arch"],[46,"aster_frame::arch::x86"],[56,"aster_frame::arch::x86::console"],[61,"aster_frame::arch::x86::device"],[64,"aster_frame::arch::x86::device::cmos"],[67,"aster_frame::arch::x86::device::io_port"],[115,"aster_frame::arch::x86::device::serial"],[133,"aster_frame::arch::x86::iommu"],[158,"aster_frame::arch::x86::qemu"],[175,"aster_frame::arch::x86::task"],[197,"aster_frame::arch::x86::timer"],[216,"aster_frame::arch::x86::trap"],[217,"aster_frame::boot"],[262,"aster_frame::boot::kcmdline"],[293,"aster_frame::boot::memory_region"],[343,"aster_frame::bus"],[361,"aster_frame::bus::mmio"],[365,"aster_frame::bus::mmio::bus"],[379,"aster_frame::bus::mmio::device"],[414,"aster_frame::bus::pci"],[469,"aster_frame::bus::pci::bus"],[483,"aster_frame::bus::pci::capability"],[530,"aster_frame::bus::pci::capability::msix"],[546,"aster_frame::bus::pci::capability::vendor"],[568,"aster_frame::bus::pci::cfg_space"],[793,"aster_frame::bus::pci::common_device"],[821,"aster_frame::collections"],[822,"aster_frame::collections::xarray"],[890,"aster_frame::console"],[891,"aster_frame::cpu"],[1198,"aster_frame::io_mem"],[1219,"aster_frame::logger"],[1220,"aster_frame::mm"],[1500,"aster_frame::mm::frame"],[1543,"aster_frame::mm::frame::frame_vec"],[1584,"aster_frame::mm::frame::options"],[1599,"aster_frame::mm::frame::segment"],[1625,"aster_frame::panicking"],[1627,"aster_frame::prelude"],[1636,"aster_frame::sync"],[1788,"aster_frame::task"],[1922,"aster_frame::trap"],[1994,"aster_frame::trap::softirq"],[2008,"aster_frame::user"],[2056,"multiboot2::tag_type"],[2057,"core::fmt"],[2058,"core::fmt"],[2059,"core::any"],[2060,"core::fmt"],[2061,"core::fmt"],[2062,"core::ops::function"],[2063,"core::marker"],[2064,"core::marker"],[2065,"alloc::vec"],[2066,"alloc::ffi::c_str"],[2067,"core::cmp"],[2068,"linux_boot_params"],[2069,"multiboot2::memory_map"],[2070,"alloc::sync"],[2071,"core::iter::traits::iterator"],[2072,"core::iter::traits::collect"],[2073,"core::hash"],[2074,"xarray::entry"],[2075,"core::clone"],[2076,"core::convert"],[2077,"core::ops::range"],[2078,"xarray::range"],[2079,"core::ops::function"],[2080,"bitvec::slice::iter"],[2081,"pod"],[2082,"core::ops::function"],[2083,"core::panic::panic_info"],[2084,"core::marker"]],"d":["","","The error type which is returned from the APIs of this …","","","","","","","","","","The architecture-independent boot module, which provides a …","","","","","","This module provides some advanced collections.","","CPU.","Defines a CPU-local variable.","","","","","","Returns the argument unchanged.","Initialize the framework.","Calls <code>U::from(self)</code>.","","","Virtual memory (VM).","Get the offset of a field within a type as a pointer.","Panic support.","The prelude.","","Tasks are the unit of code execution.","","","","","","User space.","Get the offset of a field within an object as a pointer.","","The x86 boot module defines the entrypoints of Asterinas …","","Device-related APIs. This module mainly contains the APIs …","","Providing the ability to exit QEMU and return a value as …","Reads the current value of the processor’s time-stamp …","","","","Return the frequency of TSC. The unit is Hz.","","","Receives a byte on the serial port. non-blocking","","Sends a byte on the serial port.","","","A port-mapped UART. Copied from uart_16550.","","","","An I/O port, representing a specific address in the I/O …","A marker trait for access types which allow reading port …","A marker trait for access types which allow writing port …","A helper trait that implements the read port operation.","A helper trait that implements the write port operation.","An access marker type indicating that a port is only …","An access marker type indicating that a port is allowed to …","An access marker type indicating that a port is only …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create an I/O port.","","Reads a <code>Self</code> value from the given port.","","","","","","","","","","","","","","Writes a <code>Self</code> value to the given port.","A serial port.","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Create a serial port.","","","","The page table used by iommu maps the device address space …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","The exit code of x86 QEMU isa debug device. In …","","","","","","","","Exit QEMU with the given exit code.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Jiffies is a term used to denote the units of time …","The timer frequency (Hz). Here we choose 1000Hz since …","Gets the <code>Duration</code> calculated from the jiffies counts.","Gets the number of jiffies.","","","","","","Returns the elapsed time since the system boots up.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new instance.","Register a function that will be executed during the …","","","","","Returns true if this function is called within the context …","ACPI information from the bootloader.","The framebuffer arguments.","The bootloader does not provide one, a manual search is …","Physical address of the RSDP.","Address of RSDT provided in RSDP v1.","Address of XSDT provided in RSDP v2+.","Macro generated public getter API.","","Macro generated public getter API.","","","","","Bits per pixel of the buffer.","Call the framework-user defined entrypoint of the actual …","","","","","","","","","Macro generated public getter API.","Returns the argument unchanged.","Returns the argument unchanged.","","The initialization method of the boot module.","Macro generated public getter API.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The module to parse kernel command-line arguments.","Macro generated public getter API.","Information of memory regions in the boot phase.","Macro generated public getter API.","The macro generated boot init callbacks registering …","","","","","","","","","","","The struct to store the parsed kernel command-line …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get the argument vector(argv) of the initprocess.","Get the environment vector(envp) of the initprocess.","Get the path of the initprocess.","Get the argument vector of a kernel module.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Maybe points to an unplugged DIMM module. It’s bad …","The memory region provided as the framebuffer.","The place where kernel sections are loaded.","The information of initial memory regions that are needed …","The type of initial memory regions that are needed for the …","The place where kernel modules (e.g. initrd) are loaded, …","In ACPI spec, this area needs to be preserved when …","Once used in the boot phase. Kernel can reclaim it after …","Reserved by BIOS or bootloader, do not use.","Directly usable by the frame allocator.","The physical address of the base of the region.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Construct a memory region where kernel sections are loaded.","The length in bytes of the region.","Construct a valid memory region.","Truncate regions, resulting in a set of regions that does …","","","","","Remove range t from self, resulting in 0, 1 or 2 truncated …","","","","","The type of the region.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Virtio over MMIO","","PCI bus","","","","","","","","MMIO bus","","MMIO device driver.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Probe an unclaimed mmio device.","","","","","","MMIO Common device. TODO: Implement universal access to …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator that enumerates all possible PCI …","","","","","","","","","","","","","","","","Max 31","","","","By encoding bus, device, and function into u32, user can …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Max 7","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The page table of all devices is the same. So we can use …","The PCI bus used to register PCI devices. If a component …","","PCI device driver, PCI bus will pass the device through …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Probe an unclaimed PCI device.","","","","","Id:0x13, PCI Advanced Features","Id:0x02, Accelerated Graphics Part","Id:0x0R, AGP Target PCI-PCI bridge","","","Id:0x0B, CompactPCI Central Resource Control","Id:0x06, CompactPCI HotSwap","Id:0x0A, Debug port","Id:0x14, Enhanced Allocation","Id:0x10, PCI Express","Id:0x08, HyperTransport","Id:0x05, Message Signalled Interrupts","Id:0x11, MSI-X","Id:0x07, PCI-X","Id:0x01, Power Management","Id:0x12, SATA Data/Index Conf","Id:0x0F, Secure Device","Id:0x0C, PCI Standard Hot-Plug Controller","Id:0x04, Slot Identification","Id:0x0D, Bridge subsystem vendor/device ID","Id:?, Unknown","Id:0x09, Vendor-Specific","Id:0x03, Vital Product Data","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","MSI-X capability. It will set the BAR space it uses to be …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Vendor specific capability. Users can access this …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Whether this BAR is 64bit address or 32bit address","","BAR space in PCI common config space.","","","","","","","","","","","","","","","PCI device common config space command register.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PCI device common config space status register.","","","","","","","Memory BAR bits type","Returns the set containing all flags.","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","PCI common device, Contains a range of information and …","Gain access to the BAR space and return None if that BAR …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","This module introduces the xarray crate and provides …","A <code>Cursor</code> can traverse in the <code>XArray</code> by setting or …","A <code>CursorMut</code> can traverse in the <code>XArray</code> by setting or …","","","","<code>XArray</code> is an abstract data type functioning like an …","The mark type used in the <code>XArray</code>.","","","","","","","","","Clones the <code>XArray</code> with the COW mechanism.","","Creates a <code>Cursor</code> to perform read-related operations in the …","Creates a <code>CursorMut</code> to perform read- and write-related …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the target index of the cursor.","Returns the target index of the cursor.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the target item is marked with the input …","Checks whether the target item is marked with the input …","Checks whether the <code>XArray</code> is marked with the input <code>mark</code>.","Loads the item at the target index.","Loads the item at the target index.","Loads the <code>index</code>-th item.","Makes a new, empty <code>XArray</code>.","Increases the target index of the cursor by one.","Increases the target index of the cursor by one.","Creates a <code>Range</code> which can be immutably iterated over the …","Removes the item at the target index, and returns the …","Removes the <code>XEntry</code> in the <code>XArray</code> at the target index, and …","Resets the target index to <code>index</code>.","Resets the target index to <code>index</code>.","Sets the input <code>mark</code> for the item at the target index if …","Marks the <code>XArray</code> with the input <code>mark</code>.","Stores a new <code>item</code> at the target index, and returns the old …","Stores the provided item in the <code>XArray</code> at the target …","","","","","","","","","","","","","","Unsets the input <code>mark</code> for the item at the target index if …","Unsets the input <code>mark</code> for the <code>XArray</code>.","Unsets the input <code>mark</code> for all of the items in the <code>XArray</code>.","","","","","","","","","","As Osdev Wiki defines(https://wiki.osdev.org/Exceptions): …","CPU-local objects.","","","","","","","","The floating-point state of CPU.","","General registers","1 if there is no translation for the linear address using …","","1 if the access was an instruction fetch.","","","","","","","","0 if no translation for the linear address.","1 if the access was a data access to a linear address with …","Page Fault error code. Following the Intel Architectures …","1 if there is no translation for the linear address …","","","","","","","","","","","","1 if the exception is unrelated to paging and resulted …","1 if the access was a shadow-stack access.","","","","1 if the access was a user-mode access.","Cpu context, including both general-purpose registers and …","","","","1 if the access was a write.","","","","","Returns the set containing all flags.","Returns the floating point state as a slice.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Borrow an immutable reference to the underlying value and …","","Clear the state of the instance.","","","","","","","","","","","","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","","Returns <code>true</code> if no flags are currently stored.","Returns whether the instance can contains data in valid …","","","","Initialize CPU-local object Developer cannot construct a …","Create a new instance.","","","Returns the complement of this set of flags.","Returns the number of CPUs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","","Restore CPU’s CPU floating pointer states from this …","","","","","","","","","Save CPU’s current floating pointer states into this …","Save the floating state given by a slice of u8.","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the ID of this CPU.","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","FIXME: The logs should be able to be read from files in …","Has the memory page been read or written.","","A type to control the cacheability of the main memory.","Has the memory page been written.","If a device performs DMA to read or write system memory, …","A coherent (or consistent) DMA mapping, which guarantees …","<code>DmaDirection</code> limits the data flow direction of <code>DmaStream</code> …","A streaming DMA mapping. Users must synchronize data …","A slice of streaming DMA mapping.","","","","","","","","Get physical address trait","The maximum virtual address of user space (non inclusive).","","Physical addresses.","Page protection permissions and access status.","The property of a mapped virtual memory page.","The level of a page table node or a frame.","Readable.","Readable + writable.","Readable + writable + executable.","Readable + execuable.","","","Uncacheable (UC).","Virtual addresses.","A trait that enables reading/writing data from/to a VM …","Options for mapping physical memory pages into a VM …","VmReader is a reader for reading data from a contiguous …","Virtual memory space.","VmWriter is a writer for writing data to a contiguous …","Writable.","Write-Combining (WC).","Write-Protect (WP).","Writeback (WB).","Writethrough (WT).","Executable.","Sets the address of the new mapping.","Sets the alignment of the address of the mapping.","Returns the set containing all flags.","Returns the number of bytes for the available space.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Sets whether the mapping can overwrite any existing …","clear all mappings","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the cursor pointer, which refers to the address of …","Returns the cursor pointer, which refers to the address of …","Get the base address of the mapping in the device address …","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","Returns an empty set of flags.","","","","","","Fills the available space by repeating <code>value</code>.","Sets the permissions of the mapping, which affects whether …","","","","","","","","","","","","","","","To fork a new VM space with copy-on-write semantics.","Untyped physical memory management.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Constructs a VmReader from a pointer and a length.","Constructs a VmWriter from a pointer and a length.","Returns if it has avaliable space to write.","Returns if it has remaining data to read.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Limits the length of remaining data.","Limits the length of available space.","Create a coherent DMA mapping backed by <code>vm_segment</code>.","Establish DMA stream mapping for a given <code>Segment</code>.","Maps some physical memory pages into the VM space …","","Returns the number of bytes.","Constructs a <code>DmaStreamSlice</code> from the <code>DmaStream</code>.","Create a new <code>PageProperty</code> with the given flags and cache …","Creates a new VM address space.","Creates the default options.","Create a page property that implies an invalid page …","","Returns the complement of this set of flags.","","","","","","Update the VM protection permissions within the VM address …","Query about the mapping information about a byte in …","Query about a range of virtual memory. You will get a …","Reads all data into the writer until one of the two …","Read a specified number of bytes at a specified offset …","","Read data into the buffer.","","Read a slice of a specified type at a specified offset.","Read a slice of a specified type at a specified offset.","Read a value of a specified type at a specified offset.","Read a value of a specified type at a specified offset.","Read a value of <code>Pod</code> type.","Returns a reader to read data from it.","Returns a reader to read data from it.","Returns the number of bytes for the remaining data.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Skips the first <code>nbytes</code> bytes of data. The length of …","Skips the first <code>nbytes</code> bytes of data. The length of …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Synchronize the streaming DMA mapping with the device.","Synchronizes the slice of streaming DMA mapping with the …","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unmaps the physical memory pages within the VM address …","Get the underlying VM segment.","Writes data from the reader until one of the two …","Write a specified number of bytes from a given buffer at a …","","Write data from the buffer.","","Write a slice of a specified type at a specified offset.","Write a slice of a specified type at a specified offset.","Write a value of a specified type at a specified offset.","Write a value of a specified type at a specified offset.","Write a sequence of values given by an iterator (<code>iter</code>) …","Write a sequence of values given by an iterator (<code>iter</code>) …","Returns a writer to write data into it.","Returns a writer to write data into it.","A handle to a physical memory page of untyped memory.","<code>FrameRef</code> is a struct that can work as <code>&amp;&#39;a Frame</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns a reader to read data from it.","","","Returns the physical address of the page frame.","","","","","","","","","Returns a writer to write data into it.","A collection of base page frames (regular physical memory …","An iterator for frames.","Append some frames.","","","","","","","","","returns an empty Frame vec","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether the frame collection is empty.","Returns an iterator","Returns the number of frames.","Returns the number of bytes.","","","","Pop a frame from the collection.","Pushs a new frame to the collection.","","Removes a frame at a position.","","Truncate some frames.","","","","","","","","Options for allocating physical memory pages (or frames).","Allocate a collection of page frames according to the …","Allocate a contiguous range of page frames according to …","Allocate a single page frame according to the given …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Sets whether the allocated frames should be contiguous.","Creates new options for allocating the specified number of …","","","","Sets whether the allocated frames should be uninitialized.","A handle to a contiguous range of page frames (physical …","","","","","","","","Returns the end physical address.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the number of bytes.","Returns the number of page frames.","","Returns a part of the <code>Segment</code>.","","Returns a reader to read data from it.","Returns the start physical address.","","","","","","Returns a writer to write data into it.","","The panic handler must be defined in the binary crate or …","Contains the error value","Contains the success value","","","","","","","","","","","","","","","","A fixed number of bits taht can be safely shared between …","A mutex with waitqueue.","","Spin-based Read-write Lock","","","","A mutex that provides data access to either one writer or …","","","","A spin lock.","","A wait queue.","A waiter that can put the current thread to sleep until it …","A waker that can wake up the associated <code>Waiter</code>.","","","","","","","","","","","","","","","","","Clear all the bits.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the bit at a given position.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Are all bits zeroes.","Are all bits ones.","Get an iterator for the bits.","Get an iterator that gives the positions of all 1s in the …","Get an iterator that gives the positions of all 0s in the …","Returns the length in bits.","Acquire the mutex.","Acquire the spin lock without disabling local IRQs.","Acquire the mutex through an <code>Arc</code>.","Acquire the spin lock through an <code>Arc</code>.","Acquire the spin lock with disabling the local IRQs. This …","Create a new mutex.","Creates a new spin-based read-write lock with an initial …","Creates a new read-write mutex with an initial value.","Creates a new spin lock.","Creates a new, empty wait queue.","Create a given number of bit 1s.","Creates a waiter and its associated <code>Waker</code>.","Create a given number of bit 0s.","Acquire a read lock and spin-wait until it can be acquired.","Acquire a read mutex and sleep until it can be acquired.","Acquire a read lock through an <code>Arc</code>.","Acquire a read lock while disabling the local IRQs and …","Set the bit at a given position.","","","","","","","","","","","","","","","","","","Try Acquire the mutex immedidately.","Try acquiring the spin lock immedidately without disabling …","Try acquire the mutex through an <code>Arc</code>.","Try acquiring the spin lock immedidately with disabling …","Attempt to acquire a read lock.","Attempt to acquire a read mutex.","Attempt to acquire an read lock through an <code>Arc</code>.","Attempt to acquire a read lock while disabling local IRQs.","Attempt to acquire an upread lock.","Attempt to acquire a upread mutex.","Attempt to acquire an upgradeable read lock through an <code>Arc</code>.","Attempt to acquire a upread lock while disabling local …","Attempt to acquire a write lock.","Attempt to acquire a write mutex.","Attempt to acquire a write lock while disabling local IRQs.","","","","","","","","","Acquire an upreader and spin-wait until it can be acquired.","Acquire a upread mutex and sleep until it can be acquired.","Acquire an upgradeable read lock through an <code>Arc</code>.","Acquire an upgradeable reader (upreader) while disabling …","Waits until the waiter is woken up by calling …","Waits until some condition is met.","Wakes up all waiting threads, returning the number of …","Wakes up one waiting thread, if there is one at the point …","Wakes up the associated <code>Waiter</code>.","Gets the associated <code>Waker</code> of the current waiter.","Acquire a write lock and spin-wait until it can be …","Acquire a write mutex and sleep until it can be acquired.","Acquire a write lock through an <code>Arc</code>.","Acquire a write lock while disabling the local IRQs and …","a guard for disable preempt.","The task has exited.","A simple FIFO (First-In-First-Out) task scheduler.","","The priority of a task. Similar to Linux, a larger value …","The task is runnable.","A scheduler for tasks.","The task is sleeping in the background.","The task is running in the foreground but will sleep when …","A task that executes a function to the end.","","","Options to create or spawn a new task.","The status of a task.","","","","","","","","","","","","","","","","Build a new task without running it immediately.","","","","","","","","","Gets the current task.","","Returns the task data.","","","","","Dequeues a task from the front of the queue, if any.","","","","","","","","","","","Enqueues a task to the end of the queue.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Get instruction pointer","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a new instance of <code>FifoScheduler</code>.","Creates a set of options for a task.","","","","","","","Sets the priority of the task.","Runs the task.","call this function to switch to other task by using …","","Set instruction pointer","Set the global task scheduler.","Set stack pointer","Tells whether the given task should be preempted by other …","In this simple implementation, task preemption is not …","Build a new task and run it immediately.","Get stack pointer","Returns the task status.","","","","Transfer this guard to a new guard. This guard must be …","","","","","","","","","","","","","","","","","","","","","","Returns the user space of this task, if it has.","Sets the user space associated with the task.","Yields execution so that another task may be scheduled.","A guard for disabled local IRQs.","","An Interrupt ReQuest(IRQ) line. User can use <code>alloc</code> or …","","Trap frame of kernel interrupt","","","","","","","","","","","","","","","","Disable all IRQs on the current CPU (i.e., locally).","","","","","","FIXME: The reason we need to add this API is that …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns whether we are in the interrupt context.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get the IRQ number.","Register a callback that will be invoked when the IRQ is …","","","","","","","","","","","","","","","","","","","","","","Transfer the saved IRQ status of this guard to a new guard.","","","","","","","","","","","A representation of a software interrupt (softirq) line.","","","","Enables a softirq line by registering its callback.","Returns the argument unchanged.","Gets a softirq line.","Gets the ID of this softirq line.","Calls <code>U::from(self)</code>.","Returns whether this softirq line is enabled.","Raises the softirq, marking it as pending.","","","","A kernel event is pending","A reason as to why the control of the CPU is returned from …","The common interface that every CPU architecture-specific …","A CPU exception is triggered by the user space.","Code execution in the user mode.","A user space.","A system call is issued by the user space.","","","","","","","","Returns an immutable reference the user-mode CPU context.","Returns a mutable reference the user-mode CPU context.","","","","","Starts executing in the user mode. Make sure current task …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get instruction pointer","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new instance.","","","Set instruction pointer","Set stack pointer","Get stack pointer","Get the trap error code of this interrupt.","Get the trap number of this interrupt.","","","","","","","","","","Returns the user mode that is bound to the current task …","Returns the VM address space."],"i":[1,0,0,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,0,0,0,0,1,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,14,16,17,19,14,16,17,19,14,16,17,14,16,17,19,14,16,17,19,14,16,17,19,19,20,19,14,16,17,19,14,16,17,19,14,16,17,19,22,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,26,26,25,26,25,26,25,25,25,26,25,26,25,26,25,26,25,25,26,25,26,25,26,27,0,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,30,30,30,30,30,30,30,30,30,30,30,30,0,30,30,30,30,0,0,0,35,35,35,35,0,37,0,35,37,35,37,37,0,35,37,35,37,35,37,35,37,0,35,37,37,0,0,35,37,0,0,0,0,0,35,37,35,37,35,37,35,37,37,42,0,42,0,42,39,42,39,42,42,42,39,42,42,39,42,39,39,39,39,39,39,42,39,42,42,39,42,39,42,39,46,46,46,0,0,46,46,46,46,46,40,46,40,46,40,46,40,46,40,46,40,46,40,46,40,46,40,46,46,46,40,46,40,40,40,40,40,0,46,40,46,40,40,46,40,46,40,40,46,40,0,50,50,50,50,50,50,50,50,50,0,50,0,50,0,50,50,50,0,0,0,0,0,0,0,56,56,51,56,56,56,53,56,56,56,56,58,0,58,0,54,54,58,54,58,58,58,58,54,54,58,58,54,58,54,58,54,58,54,54,54,58,58,54,58,58,54,58,54,58,54,62,62,62,62,62,62,0,0,0,62,64,62,64,62,0,62,0,0,64,64,62,64,62,62,0,62,64,64,62,62,64,62,64,62,64,62,62,64,62,62,64,64,64,64,64,64,62,64,62,64,62,64,62,64,62,0,0,0,68,68,65,68,68,68,66,68,68,68,68,70,70,70,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,69,70,69,70,69,70,70,69,70,69,70,69,70,69,70,0,70,69,70,69,70,69,70,0,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,76,0,173,173,173,173,173,173,173,75,75,77,173,173,173,173,0,173,77,77,77,173,77,76,173,76,77,76,173,173,79,0,173,77,76,77,76,173,79,0,173,76,0,77,77,173,76,77,77,76,76,0,173,173,173,76,173,173,74,76,77,74,78,76,77,76,77,76,77,76,77,76,77,76,77,76,77,173,76,77,79,74,75,78,173,76,77,79,74,75,78,76,77,79,74,75,78,76,77,79,74,75,78,76,77,76,77,76,77,76,77,173,76,77,79,74,75,78,76,77,76,77,75,76,77,76,76,76,76,76,77,77,77,77,77,79,74,75,78,173,76,77,79,74,75,78,76,77,76,77,76,77,76,77,76,77,76,77,76,77,76,77,173,76,77,79,74,75,78,74,76,77,76,77,76,77,76,77,74,78,76,77,76,77,74,78,76,77,76,77,76,77,76,77,79,74,75,78,76,77,173,76,77,79,74,75,78,173,76,77,79,74,75,78,173,76,77,79,74,75,78,76,77,78,0,0,82,67,67,82,67,82,67,67,67,67,82,67,82,67,82,67,82,67,67,67,67,82,67,82,67,82,0,0,0,86,86,86,0,0,88,89,86,83,88,89,86,83,83,83,83,83,89,88,89,86,83,88,89,86,83,88,89,88,89,86,83,88,89,83,88,89,83,83,88,89,83,89,83,88,89,89,83,89,83,83,88,89,86,83,88,89,86,83,88,89,86,83,89,83,83,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,101,101,0,0,0,93,0,93,0,0,101,0,0,0,0,93,93,0,93,0,0,0,0,0,0,0,0,101,0,0,93,93,0,0,101,93,0,0,0,0,93,0,92,92,92,93,94,93,93,93,93,93,93,93,98,105,95,92,99,100,101,102,93,94,98,105,95,92,99,100,101,102,93,94,95,92,94,98,99,100,93,94,98,99,100,93,94,93,93,92,93,98,92,99,100,94,95,93,98,105,95,92,99,100,101,102,93,94,93,98,101,102,93,100,93,98,99,100,101,102,93,93,93,93,93,94,99,99,98,105,95,92,99,100,101,102,93,94,93,93,93,93,99,98,99,99,99,98,93,100,93,99,93,93,98,105,95,92,99,100,101,102,93,94,93,102,93,94,92,105,105,95,94,92,92,93,0,102,100,93,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,92,93,92,94,99,98,99,98,99,98,99,98,94,94,93,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,93,93,93,0,102,98,99,100,93,94,93,99,99,99,98,105,95,92,99,100,101,102,93,94,98,105,95,92,99,100,101,102,93,94,102,98,105,95,92,99,100,101,102,93,94,93,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,109,114,0,109,0,0,0,0,0,0,0,0,0,0,114,0,0,0,0,0,0,0,0,109,109,109,109,0,114,116,0,0,0,0,0,0,109,116,116,116,116,109,107,107,109,110,109,109,109,109,109,109,109,117,110,112,113,114,120,115,116,109,111,107,117,110,112,113,114,120,115,116,109,111,107,115,107,111,112,113,114,115,116,109,107,112,113,114,115,116,109,107,109,109,109,117,110,118,112,113,120,111,107,112,109,117,110,112,113,114,120,115,116,109,111,107,109,114,115,116,109,109,110,107,115,112,113,114,120,115,116,109,109,109,109,109,111,107,111,0,117,117,110,110,112,113,114,120,115,116,109,111,107,109,109,109,109,117,110,110,117,109,109,109,109,117,110,112,113,114,120,115,116,109,111,107,109,109,0,117,110,112,113,111,113,120,120,115,111,107,115,113,109,123,112,113,120,109,111,111,111,117,125,112,113,120,125,125,125,125,117,112,113,117,109,109,117,110,109,109,109,113,120,112,113,114,115,116,109,107,109,117,110,112,113,114,120,115,116,109,111,107,117,110,112,113,114,120,115,116,109,111,107,117,110,112,113,114,120,115,116,109,111,107,109,111,113,110,125,112,113,120,125,125,125,125,125,125,112,113,0,0,0,0,0,126,126,127,126,127,126,126,126,126,127,127,126,126,126,0,127,126,126,127,126,126,0,126,126,126,126,0,126,126,126,127,126,127,126,127,126,126,126,0,0,122,129,122,129,122,122,122,129,122,122,122,129,122,122,122,129,122,129,122,122,122,122,122,129,122,129,122,122,122,122,122,122,129,122,129,122,129,122,122,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,0,0,73,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,134,137,138,139,144,133,145,132,134,137,138,139,144,133,145,132,132,132,133,132,134,137,138,139,144,133,145,132,134,137,138,139,132,134,137,138,139,144,133,145,132,132,134,137,138,139,144,133,145,132,132,132,132,132,132,134,139,134,139,139,134,137,138,139,144,132,133,132,137,138,137,137,132,132,132,134,137,138,139,144,133,145,132,134,137,138,139,144,133,145,134,139,134,139,137,138,137,137,137,138,137,137,137,138,137,132,134,137,138,139,144,133,145,137,138,137,137,133,144,144,144,145,133,137,138,137,137,0,159,0,158,0,159,0,159,159,0,0,0,0,0,0,164,162,155,156,157,158,159,164,162,155,156,157,158,159,156,157,158,159,157,158,159,159,156,155,0,155,156,162,158,163,162,0,164,164,162,155,156,157,158,159,163,162,159,159,164,162,155,156,157,158,159,156,157,158,158,157,157,165,164,162,155,156,157,158,159,155,157,158,158,157,157,162,156,157,158,157,159,158,0,156,155,0,157,165,0,165,163,162,156,165,155,157,158,159,164,164,162,155,156,157,158,159,164,162,155,156,157,158,159,164,162,155,156,157,158,159,155,156,155,0,0,0,0,0,167,60,60,167,168,60,167,168,60,167,60,167,60,167,167,0,168,60,167,168,60,0,167,167,60,167,168,60,0,167,168,60,60,60,60,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,167,60,168,167,167,168,60,167,168,60,167,168,60,0,169,169,169,169,169,169,169,169,169,169,169,169,169,170,0,0,170,0,0,170,166,171,170,166,171,170,170,171,171,166,171,170,170,171,170,166,171,170,172,166,171,170,166,171,170,172,172,172,172,172,166,171,170,166,171,170,166,171,170,166,166],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[[-1,-2],2,[],[]],0,0,0,0,[3],0,0,[[1,1],4],[[1,5],6],[-1,-1,[]],[[],2],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,[[],9],0,0,0,[[],9],0,[10,2],[[],[[12,[11]]]],[13,2],[11,2],0,0,0,0,0,[[],[[12,[11]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3],[3],[3],[3],[[14,5],[[7,[2,15]]]],[[16,5],[[7,[2,15]]]],[[17,5],[[7,[2,15]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,[[19,[-1,-2]]],[],[]],[[[19,[-1,-2]]],-1,20,21],[18,20],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[[19,[-1,-2]],-1],2,22,23],[[18,22],2],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[3],0,[-1,-1,[]],[24,2],0,[-1,-2,[],[]],0,0,0,0,[18,24],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[[-1,-2],2,[],[]],[3],[3],[[25,5],6],[[26,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[27,27],[[-1,-2],2,[],[]],[3],[[27,27],4],[27,28],[[27,5],6],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[[-1,-2],2,[],[]],[[],29],[3],[[29,5],6],[-1,-1,[]],[-1,-2,[],[]],[[],29],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,[30,31],[30,9],[-1,-2,[],[]],[-1,-2,[],[]],[30,30],[[-1,-2],2,[],[]],[3],[[],30],[[30,5],6],[-1,-1,[]],[-1,-2,[],[]],[9,30],[-1,2,[32,33,34]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[],4],0,0,0,0,0,0,[[],35],0,[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],28],[35,35],[37,37],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[3],[3],[[35,5],6],[[37,5],6],[[],37],[-1,-1,[]],[-1,-1,[]],0,[[],2],[[],[[38,[11]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],39],0,[[],[[41,[40]]]],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[[-1,-2],2,[],[]],[3],[3],[[42,42],4],[[42,5],6],[[39,5],6],[-1,-1,[]],[-1,-1,[]],[43,39],[39,[[41,[44]]]],[39,[[41,[44]]]],[39,[[12,[43]]]],[[39,43],[[12,[[41,[42]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,[40,45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[40,40],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[46,46],47],[[40,40],47],[3],[3],[[46,46],4],[[40,40],4],[[46,5],6],[[40,5],6],[48,46],[-1,-1,[]],[49,46],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,4],[[],40],[40,45],[[45,45,46],40],[[[38,[40]]],[[41,[40]]]],[[46,46],[[12,[47]]]],[[40,40],[[12,[47]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[40,40],[[41,[40]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[40,46],[-1,8,[]],[-1,8,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[50,50],47],[3],[[50,50],4],[[50,5],6],[-1,-1,[]],[[],2],[-1,-2,[],[]],0,[[50,50],[[12,[47]]]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,[[],2],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[51,52],[3],[-1,-1,[]],[-1,-2,[],[]],[[53,54],[[7,[[55,[51]],[2,[50,54]]]]]],[[56,[55,[53]]],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,[54,57],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[[-1,-2],2,[],[]],[[58,58],47],[54,52],[3],[3],[[58,58],4],[[54,5],6],[[58,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[54,59],[54,60],[54,60],[[58,58],[[12,[47]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[52,[[7,[58,-1]]],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[54,58],0,0,0,0,0,0,0,0,0,[[],[[0,[[63,[],[[61,[62]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[64,64],[62,62],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[62,62],47],0,0,0,[3],[3],[62,52],[[64,64],4],[[62,62],4],[[64,5],6],[[62,5],6],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[62,62],[[12,[47]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,[[],62],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[65,64],[3],[-1,-1,[]],[-1,-2,[],[]],[[66,67],[[7,[[55,[65]],[2,[50,67]]]]]],[[68,[55,[66]]],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,70],[70,70],[[-1,-2],2,[],[]],[3],[3],[[69,5],6],[[70,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[71,71],[[-1,-2],2,[],[]],[3],[[71,5],6],[-1,-1,[]],[-1,-2,[],[]],[[71,45],[[12,[60]]]],[[71,60,18],2],[71,18],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[[-1,-2],2,[],[]],[3],[[72,72],4],[[72,5],6],[-1,-1,[]],[-1,-2,[],[]],[72,4],[72,18],[[72,18],[[73,[18]]]],[[72,18],[[73,[52]]]],[[72,18],[[73,[11]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[72,18,18],[[73,[2]]]],[[72,18,52],[[73,[2]]]],[[72,18,11],[[73,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[74,75],[[],76],[[],77],[74,9],[78,52],[[76,76],76],[[77,77],77],[[76,76],2],[[77,77],2],[[76,76],76],[[77,77],77],[[76,76],2],[[77,77],2],[76,18],[77,18],[[76,76],76],[[77,77],77],[[76,76],2],[[77,77],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,76],[77,77],[79,79],[74,74],[75,75],[78,78],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[76,76],47],[[77,77],47],[76,76],[77,77],[[76,76],4],[[77,77],4],[[76,76],76],[[77,77],77],[3],[3],[3],[3],[3],[3],[3],[[],76],[[],77],[[76,76],4],[[77,77],4],[[75,75],4],[[76,-1],2,[[80,[],[[61,[76]]]]]],[[77,-1],2,[[80,[],[[61,[77]]]]]],[[76,5],6],[[76,5],6],[[76,5],6],[[76,5],6],[[76,5],6],[[77,5],6],[[77,5],6],[[77,5],6],[[77,5],6],[[77,5],6],[[79,5],6],[[74,5],6],[[75,5],6],[[78,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[12,[76]]]],[18,[[12,[77]]]],[18,76],[18,77],[18,76],[18,77],[-1,76,[[80,[],[[61,[76]]]]]],[-1,77,[[80,[],[[61,[77]]]]]],[[76,-1],2,81],[[77,-1],2,81],[[76,76],2],[[77,77],2],[[76,76],76],[[77,77],77],[[76,76],4],[[77,77],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,59],[76,4],[77,4],[76,4],[77,4],[76,76],[77,77],[[76,76],[[12,[47]]]],[[77,77],[[12,[47]]]],[74,4],[[78,52],[[73,[-1]]],20],[[76,76],2],[[77,77],2],[[76,76,4],2],[[77,77,4],2],[74,52],[78,52],[[76,76],76],[[77,77],77],[[76,76],2],[[77,77],2],[[76,76],76],[[77,77],77],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[76,76],2],[[77,77],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[76,76],76],[[77,77],77],[[78,52,-1],[[73,[2]]],22],0,0,[[82,11],[[12,[79]]]],[67,82],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[67,[[41,[69]]]],[67,76],[67,64],[3],[3],[[67,5],6],[[82,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[67,62],[[67,76],2],[67,77],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[83,[-1,-2]]],[[83,[-1,-2]]],[84,85],[[87,[86]]]],[[-1,-2],2,[],[]],[[[83,[-1,-2]],9],[[88,[-1,-2]]],84,[[87,[86]]]],[[[83,[-1,-2]],9],[[89,[-1,-2]]],84,[[87,[86]]]],[[[89,[-1,-2]]],2,84,[[87,[86]]]],[3],[3],[3],[3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[88,[-1,-2]]],9,84,[[87,[86]]]],[[[89,[-1,-2]]],9,84,[[87,[86]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[88,[-1,-2]],-2],4,84,[[87,[86]]]],[[[89,[-1,-2]],-2],4,84,[[87,[86]]]],[[[83,[-1,-2]],-2],4,84,[[87,[86]]]],[[[88,[-1,-2]]],12,84,[[87,[86]]]],[[[89,[-1,-2]]],12,84,[[87,[86]]]],[[[83,[-1,-2]],9],12,84,[[87,[86]]]],[[],[[83,[-1,-2]]],84,[[87,[86]]]],[[[88,[-1,-2]]],2,84,[[87,[86]]]],[[[89,[-1,-2]]],2,84,[[87,[86]]]],[[[83,[-1,-2]],[90,[9]]],[[91,[-1,-2]]],84,[[87,[86]]]],[[[89,[-1,-2]]],[[12,[-1]]],84,[[87,[86]]]],[[[83,[-1,-2]],9],[[12,[-1]]],84,[[87,[86]]]],[[[88,[-1,-2]],9],2,84,[[87,[86]]]],[[[89,[-1,-2]],9],2,84,[[87,[86]]]],[[[89,[-1,-2]],-2],[[7,[2,2]]],84,[[87,[86]]]],[[[83,[-1,-2]],-2],2,84,[[87,[86]]]],[[[89,[-1,-2]],-1],[[12,[-1]]],84,[[87,[86]]]],[[[83,[-1,-2]],9,-1],[[12,[-1]]],84,[[87,[86]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[[89,[-1,-2]],-2],[[7,[2,2]]],84,[[87,[86]]]],[[[83,[-1,-2]],-2],2,84,[[87,[86]]]],[[[83,[-1,-2]],-2],2,84,[[87,[86]]]],[10,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[92,52],2],[92,2],[[92,[41,[52]]],2],[[],93],[94,[[38,[11]]]],[[93,93],93],[[93,93],2],[[93,93],93],[[93,93],2],[93,45],[[93,93],93],[[93,93],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[95,[-1]],-3],-2,[],[],[[97,[-1],[[96,[-2]]]]]],[92,2],[94,2],[98,98],[99,99],[100,100],[93,93],[94,94],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[93,93],47],[93,93],[[92,52],4],[[93,93],4],[[],98],[[],92],[[],99],[[],100],[[],94],[[[95,[-1]]],-1,33],[[93,93],93],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[],93],[[98,98],4],[[101,101],4],[[102,102],4],[[93,93],4],0,[[93,-1],2,[[80,[],[[61,[93]]]]]],[[98,5],[[7,[2,15]]]],[[99,5],6],[[100,5],6],[[101,5],6],[[102,5],6],[[93,5],6],[[93,5],6],[[93,5],6],[[93,5],6],[[93,5],6],[[94,5],6],[99,94],[99,94],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,[[12,[93]]]],[45,93],[45,93],[-1,93,[[80,[],[[61,[93]]]]]],[99,45],0,[99,98],[99,98],[99,45],0,[[93,-1],2,81],0,[[93,93],2],[99,45],[[93,93],93],[[93,93],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[93,4],[18,4],[93,4],[94,4],[92,[[104,[45,103]]]],[105,2],[[],105],[-1,[[95,[-1]]],[]],[[],94],[[],92],[[],92],[93,93],[[],52],0,0,[[93,93],[[12,[47]]]],[99,45],0,[99,45],0,[99,45],0,[99,45],0,[99,45],0,[99,45],0,[99,45],0,[99,45],0,[99,45],0,[99,45],0,[99,45],0,[99,45],0,[99,45],0,[99,45],0,[[92,52],2],[[93,93],2],[[92,[41,[52]]],2],[94,2],[99,45],0,[99,45],0,[99,45],0,[99,45],0,[94,2],[[94,[38,[11]]],2],[[93,93,4],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[[99,45],2],[99,45],[[93,93],93],[[93,93],2],[[93,93],93],[[],52],[18,[[12,[102]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[93,93],2],[99,45],[99,100],[99,45],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[93,93],93],0,[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[[-1,-2],2,[],[]],[3],[[59,5],6],[-1,-1,[]],[-1,-2,[],[]],[59,45],[59,57],[59,57],[[59,45,[38,[11]]],[[73,[2]]]],[[59,45],[[73,[-1]]],106],[[59,[90,[57]]],[[73,[2]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[59,45,[38,[11]]],[[73,[2]]]],[[59,45,-1],[[73,[2]]],106],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[107,[12,[108]]],107],[[107,45],107],[[],109],[110,45],[[109,109],109],[[109,109],2],[[109,109],109],[[109,109],2],[109,11],[[109,109],109],[[109,109],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[107,4],107],[111,2],[112,112],[113,113],[114,114],[115,115],[116,116],[109,109],[107,107],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[109,109],47],[109,109],[[109,109],4],[117,11],[110,11],[118,119],[112,119],[113,119],[120,119],[[],111],[[],107],[112,-1,[]],[[109,109],109],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[],109],[[114,114],4],[[115,115],4],[[116,116],4],[[109,109],4],[[109,-1],2,[[80,[],[[61,[109]]]]]],[[110,-1],45,106],[[107,109],107],0,[[112,5],6],[[113,5],6],[[114,5],6],[[120,5],6],[[115,5],6],[[116,5],6],[[109,5],6],[[109,5],6],[[109,5],6],[[109,5],6],[[109,5],6],[[111,5],6],[[107,5],6],[111,111],0,[-1,-1,[]],[[[38,[11]]],117],[[[38,[11]]],110],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[12,[109]]]],[11,109],[11,109],[-1,109,[[80,[],[[61,[109]]]]]],[[11,45],117],[[11,45],110],[110,4],[117,4],[[109,-1],2,81],[[109,109],2],[[109,109],109],[[109,109],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[109,4],[109,4],[45,4],[[117,45],117],[[110,45],110],[[121,4],[[7,[112,0]]]],[[121,114,4],[[7,[113,0]]]],[[111,122,107],[[73,[108]]]],[113,45],[120,45],[[113,45,45],120],[[109,116],115],[[],111],[[],107],[[],115],[113,45],[109,109],[123,57],[112,57],[113,57],[120,57],[[109,109],[[12,[47]]]],[[111,[90,[108]],-1],[[73,[2]]],[[124,[115]]]],[[111,108],[[73,[[12,[115]]]]]],[[111,[90,[108]]],[[73,[0]]]],[[117,110],45],[[125,45,[38,[11]]],[[73,[2]]]],[[112,45,[38,[11]]],[[73,[2]]]],[[113,45,[38,[11]]],[[7,[2,1]]]],[[120,45,[38,[11]]],[[7,[2,1]]]],[[125,45,[38,[-1]]],[[73,[2]]],106],[[125,45,[38,[-1]]],[[73,[2]]],106],[[125,45],[[73,[-1]]],106],[[125,45],[[73,[-1]]],106],[117,-1,106],[112,117],[113,[[7,[117,1]]]],[117,45],[[109,109],2],[[109,109,4],2],[[117,45],117],[[110,45],110],[[109,109],109],[[109,109],2],[[109,109],109],[[113,[90,[45]]],[[7,[2,1]]]],[120,[[7,[2,1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[109,109],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[109,109],109],[[111,[90,[108]]],[[73,[2]]]],[113,121],[[110,117],45],[[125,45,[38,[11]]],[[73,[2]]]],[[112,45,[38,[11]]],[[73,[2]]]],[[113,45,[38,[11]]],[[7,[2,1]]]],[[120,45,[38,[11]]],[[7,[2,1]]]],[[125,45,[38,[-1]]],[[73,[2]]],106],[[125,45,[38,[-1]]],[[73,[2]]],106],[[125,45,-1],[[73,[2]]],106],[[125,45,-1],[[73,[2]]],106],[[125,45,-2,45],[[73,[45]]],106,[[63,[],[[61,[-1]]]]]],[[125,45,-2,45],[[73,[45]]],106,[[63,[],[[61,[-1]]]]]],[112,110],[113,[[7,[110,1]]]],0,0,0,0,0,[126,11],[126,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[126,126],[[-1,-2],2,[],[]],[[126,126],2],[127,-1,[]],[3],[3],[126,57],[[126,5],6],0,[-1,-1,[]],[-1,-1,[]],[2,126],[-1,-2,[],[]],[-1,-2,[],[]],[126,2],0,[126,57],[2,-1,[]],[[126,45,[38,[11]]],[[73,[2]]]],[126,117],0,[126,45],[126,57],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[[126,45,[38,[11]]],[[73,[2]]]],[126,110],0,0,[[122,122],[[73,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[122,122],[[-1,-2],2,[],[]],[3],[3],[[],122],[[122,5],6],[-1,-1,[]],[-1,-1,[]],[126,122],[[122,45],[[12,[126]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[122,-1,[]],[122,4],[122,[[128,[126]]]],[122,45],[122,45],[122,129],[45,122],[129,[[12,[-1]]],[]],[122,[[12,[126]]]],[[122,126],2],[[122,45,[38,[11]]],[[73,[2]]]],[[122,45],126],[-1,-2,[],[]],[[122,45],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[[122,45,[38,[11]]],[[73,[2]]]],0,[130,[[73,[122]]]],[130,[[73,[121]]]],[130,[[73,[126]]]],[-1,-2,[],[]],[-1,-2,[],[]],[3],[-1,-1,[]],[-1,-2,[],[]],[[130,4],130],[45,130],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[130,4],130],0,[121,11],[121,11],[-1,-2,[],[]],[-1,-2,[],[]],[121,121],[[-1,-2],2,[],[]],[3],[121,57],[[121,5],6],[126,121],[-1,-1,[]],[-1,-2,[],[]],[121,45],[121,45],[121,57],[[121,[90,[45]]],121],[[121,45,[38,[11]]],[[73,[2]]]],[121,117],[121,57],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[121,45,[38,[11]]],[[73,[2]]]],[121,110],[[],28],[131,28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,2],[132,132],[[-1,-2],2,[],[]],[133,2],[3],[3],[3],[3],[3],[3],[3],[3],[[132,5],6],[[[134,[-1]],5],6,[135,136]],[[[137,[-1]],5],6,[135,136]],[[[138,[-1]],5],6,[135,136]],[[[139,[-1]],5],6,[135,136]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[132,45],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,4],[132,4],0,0,0,[132,45],[[[134,[-1]]],[[140,[-1]]],135],[[[139,[-1]]],[[141,[-1]]],135],[[[55,[[134,[-1]]]]],[[142,[-1]]],135],[[[55,[[139,[-1]]]]],[[143,[-1]]],135],[[[139,[-1]]],[[141,[-1]]],135],[-1,[[134,[-1]]],[]],[-1,[[137,[-1]]],[]],[-1,[[138,[-1]]],[]],[-1,[[139,[-1]]],[]],[[],144],[45,132],[[],[[2,[133,[55,[145]]]]]],[45,132],[[[137,[-1]]],[[146,[-1]]],135],[[[138,[-1]]],[[147,[-1]]],135],[[[55,[[137,[-1]]]]],[[148,[-1]]],135],[[[137,[-1]]],[[146,[-1]]],135],[[132,45,4],2],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[134,[-1]]],[[12,[[140,[-1]]]]],135],[[[139,[-1]]],[[12,[[141,[-1]]]]],135],[[[55,[[134,[-1]]]]],[[12,[[142,[-1]]]]],135],[[[139,[-1]]],[[12,[[141,[-1]]]]],135],[[[137,[-1]]],[[12,[[146,[-1]]]]],135],[[[138,[-1]]],[[12,[[147,[-1]]]]],135],[[[55,[[137,[-1]]]]],[[12,[[148,[-1]]]]],135],[[[137,[-1]]],[[12,[[146,[-1]]]]],135],[[[137,[-1]]],[[12,[[149,[-1]]]]],135],[[[138,[-1]]],[[12,[[150,[-1]]]]],135],[[[55,[[137,[-1]]]]],[[12,[[151,[-1]]]]],135],[[[137,[-1]]],[[12,[[149,[-1]]]]],135],[[[137,[-1]]],[[12,[[152,[-1]]]]],135],[[[138,[-1]]],[[12,[[153,[-1]]]]],135],[[[137,[-1]]],[[12,[[152,[-1]]]]],135],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[[137,[-1]]],[[149,[-1]]],135],[[[138,[-1]]],[[150,[-1]]],135],[[[55,[[137,[-1]]]]],[[151,[-1]]],135],[[[137,[-1]]],[[149,[-1]]],135],[133,2],[[144,-2],-1,[],[[124,[],[[96,[[12,[-1]]]]]]]],[144,45],[144,4],[145,4],[133,[[55,[145]]]],[[[137,[-1]]],[[152,[-1]]],135],[[[138,[-1]]],[[153,[-1]]],135],[[[55,[[137,[-1]]]]],[[154,[-1]]],135],[[[137,[-1]]],[[152,[-1]]],135],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[55,[155]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[156,[[73,[[55,[155]]]]]],[157,157],[158,158],[159,159],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[159,159],47],[[156,92],156],[[],[[55,[155]]]],[[],[[12,[[55,[155]]]]]],[155,[[161,[160]]]],[[156,-1],156,[160,34,33]],[[],162],[[],158],[163,[[12,[[55,[155]]]]]],[162,[[12,[[55,[155]]]]]],[[],164],[164,2],[3],[3],[3],[3],[3],[3],[3],[[163,[55,[155]]],2],[[162,[55,[155]]],2],[[159,159],4],[[159,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[156,-1],156,[32,34,33]],[157,18],[158],[158],[[],157],[[],157],[165,45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[155,4],[157,4],[158,-1,[]],[158,-1,[]],[[],157],[[],157],[[],162],[-1,156,[32,34,33]],[18,157],[[],158],[[],157],[[159,159],[[12,[47]]]],[158,-1,[]],[[[55,[155]]],2],[[156,157],156],[[[55,[155]]],2],[[],2],[[157,18],2],[[165,45],2],[163,2],[[165,45],2],[[163,[55,[155]]],4],[[162,[55,[155]]],4],[156,[[73,[[55,[155]]]]]],[165,45],[155,159],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[164,164],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[155,[[12,[[55,[166]]]]]],[[156,[12,[[55,[166]]]]],156],[[],2],0,0,0,0,0,0,[[],[[73,[60]]]],[11,[[73,[60]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[167,167],[60,60],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],167],[[],168],[168,2],[60,2],[3],[3],[3],[[],2],0,[[167,5],[[7,[2,15]]]],[[60,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,4],[60,11],[[60,-1],2,[[32,[167]],33,34]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[168,168],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[3],[[169,-1],2,[32,33,34]],[-1,-1,[]],[11,169],[169,11],[-1,-2,[],[]],[169,4],[169,2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[170,170],47],[171,99],[171,99],[3],[3],[3],[[170,170],4],[[171,-1],170,[[124,[],[[96,[4]]]]]],[[170,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[172,45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[111]],99],166],[[[55,[166]]],171],[[170,170],[[12,[47]]]],[[172,45],2],[[172,45],2],[172,45],[172,45],[172,45],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[166,171],[166,111]],"c":[],"p":[[6,"Error",0],[1,"tuple"],[5,"Tag",2056],[1,"bool"],[5,"Formatter",2057],[8,"Result",2057],[6,"Result",2058],[5,"TypeId",2059],[1,"u64"],[5,"Arguments",2057],[1,"u8"],[6,"Option",2060],[8,"InputCallback",56],[5,"ReadOnlyAccess",67],[5,"Error",2057],[5,"WriteOnlyAccess",67],[5,"ReadWriteAccess",67],[1,"u16"],[5,"IoPort",67],[10,"PortRead",67],[10,"IoPortReadAccess",67],[10,"PortWrite",67],[10,"IoPortWriteAccess",67],[5,"SerialPort",115],[5,"DeviceMode",133],[6,"IommuError",133],[6,"QemuExitCode",158],[1,"never"],[5,"CalleeRegs",175],[5,"Jiffies",197],[5,"Duration",2061],[10,"Fn",2062],[10,"Sync",2063],[10,"Send",2063],[6,"BootloaderAcpiArg",217],[5,"String",2064],[5,"BootloaderFramebufferArg",217],[1,"slice"],[5,"KCmdlineArg",262],[5,"MemoryRegion",293],[5,"Vec",2065],[6,"ModuleArg",262],[1,"str"],[5,"CString",2066],[1,"usize"],[6,"MemoryRegionType",293],[6,"Ordering",2067],[6,"E820Type",2068],[6,"MemoryAreaType",2069],[6,"BusProbeError",343],[10,"MmioDevice",365],[1,"u32"],[10,"MmioDriver",365],[5,"MmioCommonDevice",379],[5,"Arc",2070],[5,"MmioBus",365],[8,"Paddr",1220],[6,"VirtioMmioVersion",379],[5,"IoMem",1198],[5,"IrqLine",1922],[17,"Item"],[5,"PciDeviceLocation",414],[10,"Iterator",2071],[5,"PciDeviceId",414],[10,"PciDevice",469],[10,"PciDriver",469],[5,"PciCommonDevice",793],[5,"PciBus",469],[5,"Capability",483],[6,"CapabilityData",483],[5,"CapabilityMsixData",530],[5,"CapabilityVndrData",546],[8,"Result",1627],[5,"MemoryBar",568],[6,"AddrLen",568],[5,"Command",568],[5,"Status",568],[5,"IoBar",568],[6,"Bar",568],[10,"IntoIterator",2072],[10,"Hasher",2073],[5,"BarManager",793],[5,"XArray",822],[10,"ItemEntry",2074],[10,"Clone",2075],[6,"XMark",822],[10,"Into",2076],[5,"Cursor",822],[5,"CursorMut",822],[5,"Range",2077],[5,"Range",2078],[5,"CpuSet",891],[5,"PageFaultErrorCode",891],[5,"FpRegs",891],[5,"CpuLocal",891],[17,"Output"],[10,"FnOnce",2062],[5,"GeneralRegs",891],[5,"UserContext",891],[5,"CpuExceptionInfo",891],[6,"CpuExceptionType",891],[5,"CpuException",891],[5,"Lsb0",2079],[5,"IterOnes",2080],[5,"UserPreemption",891],[10,"Pod",2081],[5,"VmMapOptions",1220],[8,"Vaddr",1220],[5,"PageFlags",1220],[5,"VmWriter",1220],[5,"VmSpace",1220],[5,"DmaCoherent",1220],[5,"DmaStream",1220],[6,"DmaDirection",1220],[5,"PageProperty",1220],[6,"CachePolicy",1220],[5,"VmReader",1220],[10,"HasDaddr",1220],[8,"Daddr",1220],[5,"DmaStreamSlice",1220],[5,"Segment",1599],[5,"FrameVec",1543],[10,"HasPaddr",1220],[10,"FnMut",2062],[10,"VmIo",1220],[5,"Frame",1500],[5,"FrameRef",1500],[5,"Iter",2082],[5,"FrameVecIter",1543],[5,"FrameAllocOptions",1584],[5,"PanicInfo",2083],[5,"AtomicBits",1636],[5,"Waiter",1636],[5,"Mutex",1636],[10,"Sized",2063],[10,"Debug",2057],[5,"RwLock",1636],[5,"RwMutex",1636],[5,"SpinLock",1636],[8,"MutexGuard",1636],[8,"SpinLockGuard",1636],[8,"ArcMutexGuard",1636],[8,"ArcSpinLockGuard",1636],[5,"WaitQueue",1636],[5,"Waker",1636],[8,"RwLockReadGuard",1636],[8,"RwMutexReadGuard",1636],[8,"ArcRwLockReadGuard",1636],[8,"RwLockUpgradeableGuard",1636],[8,"RwMutexUpgradeableGuard",1636],[8,"ArcRwLockUpgradeableGuard",1636],[8,"RwLockWriteGuard",1636],[8,"RwMutexWriteGuard",1636],[8,"ArcRwLockWriteGuard",1636],[5,"Task",1788],[5,"TaskOptions",1788],[5,"Priority",1788],[5,"TaskAdapter",1788],[6,"TaskStatus",1788],[10,"Any",2059],[5,"Box",2084],[5,"FifoScheduler",1788],[10,"Scheduler",1788],[5,"DisablePreemptGuard",1788],[10,"TaskContextApi",1788],[5,"UserSpace",2008],[5,"TrapFrame",1922],[5,"DisabledLocalIrqGuard",1922],[5,"SoftIrqLine",1994],[6,"ReturnReason",2008],[5,"UserMode",2008],[10,"UserContextApi",2008],[6,"PciDeviceCommonCfgOffset",568]],"b":[[320,"impl-From%3CE820Type%3E-for-MemoryRegionType"],[322,"impl-From%3CMemoryAreaType%3E-for-MemoryRegionType"],[694,"impl-Debug-for-Command"],[695,"impl-Octal-for-Command"],[696,"impl-Binary-for-Command"],[697,"impl-UpperHex-for-Command"],[698,"impl-LowerHex-for-Command"],[699,"impl-Octal-for-Status"],[700,"impl-LowerHex-for-Status"],[701,"impl-UpperHex-for-Status"],[702,"impl-Debug-for-Status"],[703,"impl-Binary-for-Status"],[1026,"impl-Binary-for-PageFaultErrorCode"],[1027,"impl-UpperHex-for-PageFaultErrorCode"],[1028,"impl-Debug-for-PageFaultErrorCode"],[1029,"impl-Octal-for-PageFaultErrorCode"],[1030,"impl-LowerHex-for-PageFaultErrorCode"],[1208,"impl-HasPaddr-for-IoMem"],[1209,"impl-IoMem"],[1351,"impl-LowerHex-for-PageFlags"],[1352,"impl-UpperHex-for-PageFlags"],[1353,"impl-Octal-for-PageFlags"],[1354,"impl-Debug-for-PageFlags"],[1355,"impl-Binary-for-PageFlags"]]}],\
["bit_field",{"doc":"Provides the abstraction of a bit field, which allows for …","t":"TKKMMMMMMMMM","n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":[[0,"bit_field"],[12,"core::ops::range"]],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[3,0,0,1,3,1,3,1,3,1,3,1],"f":[0,0,0,[1,2],[[3,2],4],[[1,2],4],[[3,-1],3,[[5,[2]]]],[[1,-1],-2,[[5,[2]]],3],[[3,2,4],3],[[1,2,4],6],[[3,-1,3],3,[[5,[2]]]],[[1,-1,-2],6,[[5,[2]]],3]],"c":[],"p":[[10,"BitArray",0],[1,"usize"],[10,"BitField",0],[1,"bool"],[10,"RangeBounds",12],[1,"tuple"]],"b":[]}],\
["bitflags",{"doc":"Generate types for C-style flags with ergonomic APIs.","t":"TEKRTTFKNNQMNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNCNNNNNNCNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNFKKNNNNNNHNNNMHNNNM","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","is_named","is_unnamed","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","into","invalid_hex_flag","invalid_named_flag","parse_hex","to_writer","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[65,"bitflags::iter"],[86,"bitflags::parser"],[105,"core::option"],[106,"core::result"],[107,"core::any"],[108,"core::fmt"],[109,"core::fmt"]],"d":["A value with all bits set.","","A bits type that can be used as storage for a flags type.","The underlying bits type.","A value with all bits unset.","The set of defined flags.","A defined flags value that may be named or unnamed.","A set of defined flags using a bits type as storage.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Generate a flags type.","Get the underlying bits value.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether the flag is named.","Whether the flag is unnamed.","Yield the bits of a source flags value in a set of …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the name of this flag.","Define a flag.","Parsing flags from text.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the flags value of this flag.","An iterator over flags values.","An iterator over flags values.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get a flags value of any remaining bits that haven’t …","","","","","","","An error encountered while parsing flags from text.","Parse a value from a hex string.","Encode a value as a hex string.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a flags value from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","Write a flags value as text.","","","","Write the value as hex."],"i":[3,0,0,2,3,2,0,0,2,2,0,2,8,8,2,2,2,2,2,2,2,2,8,2,2,2,2,2,2,2,2,2,2,2,2,2,8,2,2,2,2,8,8,0,2,2,2,2,8,8,0,2,2,2,2,2,2,2,2,8,8,8,2,2,8,0,0,9,10,9,10,9,10,9,10,9,10,9,10,10,9,10,9,10,9,10,0,0,0,13,13,13,13,13,13,0,13,13,13,17,0,13,13,13,20],"f":[0,0,0,0,0,0,0,0,[[],[[2,[],[[1,[-1]]]]],3],[[],[[2,[],[[1,[-1]]]]],3],0,[[[2,[],[[1,[-1]]]]],-1,3],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[],[[2,[],[[1,[-1]]]]],3],[[],[[2,[],[[1,[-1]]]]],3],[-1,-1,[]],[-1,[[5,[[2,[],[[1,[-1]]]]]]],3],[-1,[[5,[[2,[],[[1,[-1]]]]]]],3],[-1,[[2,[],[[1,[-1]]]]],3],[-1,[[2,[],[[1,[-1]]]]],3],[-1,[[2,[],[[1,[-1]]]]],3],[6,[[5,[[2,[],[[1,[-1]]]]]]],3],[6,[[5,[[2,[],[[1,[-1]]]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],4,3],[-1,-2,[],[]],[[[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]]],4,3],[[[8,[-1]]],4,[]],[[[8,[-1]]],4,[]],0,[[[2,[],[[1,[-1]]]]],[[9,[[2,[],[[1,[-1]]]]]]],3],[[[2,[],[[1,[-1]]]]],[[9,[[2,[],[[1,[-1]]]]]]],3],[[[2,[],[[1,[-1]]]]],[[10,[[2,[],[[1,[-1]]]]]]],3],[[[2,[],[[1,[-1]]]]],[[10,[[2,[],[[1,[-1]]]]]]],3],[[[8,[-1]]],6,[]],[[6,-1],[[8,[-1]]],[]],0,[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]],4],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]],4],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[8,[-1]]],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[5,[-2]]],2,[]],[[[10,[-1]]],[[5,[-2]]],2,[]],[[[10,[-1]]],-1,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[13,14],15],[[13,14],15],[-1,-1,[]],[6,[[11,[-1,13]]],2],[-1,-2,[],[]],[-1,13,16],[-1,13,16],[6,[[11,[17,13]]]],[[-1,-2],[[11,[7,18]]],2,19],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[[20,-1],15,19]],"c":[],"p":[[17,"Bits"],[10,"Flags",0],[10,"Bits",0],[1,"bool"],[6,"Option",105],[1,"str"],[1,"tuple"],[5,"Flag",0],[5,"Iter",65],[5,"IterNames",65],[6,"Result",106],[5,"TypeId",107],[5,"ParseError",86],[5,"Formatter",108],[8,"Result",108],[10,"Display",108],[10,"ParseHex",86],[5,"Error",108],[10,"Write",108],[10,"WriteHex",86]],"b":[[92,"impl-Display-for-ParseError"],[93,"impl-Debug-for-ParseError"]]}],\
["bitvec",{"doc":"<code>bitvec</code>","t":"QCCQQQQCCCCCCCCCCCCCKKFFFFFRRTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFTONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGGPPFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOKNMMNMMTFFFFFFTTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTKTTHHKEFFMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHEEQEEEEEEEEEEEEEEEQQQQFGFFGTFTTFPPFKPPTTTPPNNNNNNNNHHNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNHNNHNNNNNNNNNHNONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNHNHNHNHNNNNHHONNHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHHHNHNIFKFFFFFFFRFFFFFTTRFFFFFFFFFFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNMNMNMNMNNMNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTRRKRRTNMMMFFTEFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKKKRTMMMMNMMMMMM","n":["BitArr","access","array","bitarr","bitbox","bits","bitvec","boxed","domain","field","index","macros","mem","order","prelude","ptr","slice","store","vec","view","BitAccess","BitSafe","BitSafeU16","BitSafeU32","BitSafeU64","BitSafeU8","BitSafeUsize","Mem","Rad","ZERO","as_raw_mut_slice","as_raw_mut_slice","as_raw_mut_slice","as_raw_mut_slice","as_raw_mut_slice","as_raw_slice","as_raw_slice","as_raw_slice","as_raw_slice","as_raw_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_bits","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_writers","into","into","into","into","into","invert_bits","load","load","load","load","load","load","load_value","load_value","load_value","load_value","load_value","new","new","new","new","new","set_bits","store_value","store_value","store_value","store_value","store_value","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_view_bits","try_view_bits","try_view_bits","try_view_bits","try_view_bits","try_view_bits_mut","try_view_bits_mut","try_view_bits_mut","try_view_bits_mut","try_view_bits_mut","type_id","type_id","type_id","type_id","type_id","view_bits","view_bits","view_bits","view_bits","view_bits","view_bits_mut","view_bits_mut","view_bits_mut","view_bits_mut","view_bits_mut","write_bit","BitArray","IntoIter","ZERO","_ord","as_bitslice","as_bitslice","as_mut","as_mut_bitslice","as_mut_bitslice","as_mut_slice","as_mut_slice","as_raw_mut_slice","as_raw_slice","as_ref","as_slice","as_slice","bitand","bitand_assign","bitor","bitor_assign","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","count","data","default","deref","deref_mut","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","hash","index","index_mut","into","into","into_inner","into_iter","into_iter","into_iter","into_iter","is_empty","last","len","len","load_be","load_le","new","new","next","next_back","not","nth","nth_back","partial_cmp","size_hint","store_be","store_le","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","BitBox","IntoIter","as_bitslice","as_bitslice","as_mut","as_mut_bitslice","as_mut_bitslice","as_raw_mut_slice","as_raw_slice","as_ref","as_ref","bitand","bitand_assign","bitor","bitor_assign","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","count","default","deref","deref_mut","drop","eq","fill_uninitialized","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_align","from","from","from","from","from","from","from","from_bitslice","from_boxed_slice","from_iter","from_raw","hash","index","index_mut","into","into","into_bitvec","into_boxed_slice","into_iter","into_iter","into_raw","last","leak","len","load_be","load_le","next","next_back","not","nth","nth_back","partial_cmp","size_hint","store_be","store_le","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from_boxed_slice","try_into","try_into","type_id","type_id","BitDomain","Domain","Enclave","Enclave","PartialElement","Region","Region","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","enclave","enclave","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","hash","head","into","into","into","into_bit_domain","into_bitslice","into_iter","invert","len","load_value","mask","next","next_back","region","region","set","store_value","store_value_aliased","tail","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","body","head","tail","body","head","tail","BitField","load","load_be","load_le","store","store_be","store_le","ALL","BitEnd","BitIdx","BitIdxError","BitMask","BitPos","BitSel","MAX","MAX","MAX","MIN","MIN","MIN","ZERO","bitand","bitor","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","combine","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","insert","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","mask","mask","mask","new","new","new","new","new","new_unchecked","new_unchecked","new_unchecked","next","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","position","prev","range","range_all","range_all","range_from","select","select","sum","test","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ALL","BitRegister","INDX","MASK","bits_of","elts","BitOrder","LocalBits","Lsb0","Msb0","at","at","at","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","hash","hash","into","into","mask","mask","mask","partial_cmp","partial_cmp","select","select","select","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify_for_type","AsBits","AsMutBits","BitArr","BitArray","BitBox","BitOrder","BitPtr","BitPtrRange","BitRef","BitSlice","BitStore","BitVec","LocalBits","Lsb0","Msb0","_","_","_","bitarr","bitbox","bits","bitvec","BitPtr","BitPtrError","BitPtrRange","BitRef","BitSpanError","CONTAINS_MUTABILITY","Const","DANGLING","EMPTY","MisalignError","Misaligned","Misaligned","Mut","Mutability","Null","Null","PEANO_NUMBER","RENDER","SELF","TooHigh","TooLong","add","address","align_offset","as_mut","as_mut","as_ref","as_ref","bit","bitslice_from_raw_parts","bitslice_from_raw_parts_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","check_alignment","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","commit","contains","copy","copy_from","copy_from_nonoverlapping","copy_nonoverlapping","copy_to","copy_to_nonoverlapping","count","default","default","default","deref","deref_mut","drop","drop_in_place","drop_in_place","end","end_bound","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bitptr","from_mut","from_mut_slice","from_range","from_ref","from_slice","from_slice_mut","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into_bitptr","into_iter","into_range","is_empty","is_null","last","len","new","new_unchecked","next","next_back","not","nth","nth_back","null","null_mut","offset","offset_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pointer","pointer","raw_parts","read","read","read_unaligned","read_unaligned","read_volatile","read_volatile","replace","replace","replace","set","size_hint","slice_from_raw_parts","slice_from_raw_parts_mut","start","start_bound","sub","swap","swap","swap","swap_nonoverlapping","thaw","to_const","to_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw_parts","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wrapping_add","wrapping_offset","wrapping_sub","write","write","write_bits","write_bytes","write_unaligned","write_unaligned","write_volatile","write_volatile","BitRefIter","BitSlice","BitSliceIndex","BitValIter","Chunks","ChunksExact","ChunksExactMut","ChunksExactMutNoAlias","ChunksMut","ChunksMutNoAlias","Immut","Iter","IterMut","IterMutNoAlias","IterOnes","IterZeros","MAX_BITS","MAX_ELTS","Mut","RChunks","RChunksExact","RChunksExactMut","RChunksExactMutNoAlias","RChunksMut","RChunksMutNoAlias","RSplit","RSplitMut","RSplitMutNoAlias","RSplitN","RSplitNMut","RSplitNMutNoAlias","Split","SplitInclusive","SplitInclusiveMut","SplitInclusiveMutNoAlias","SplitMut","SplitMutNoAlias","SplitN","SplitNMut","SplitNMutNoAlias","Windows","align_to","align_to_mut","all","any","as_bitptr","as_bitptr_range","as_bitslice","as_bitslice","as_mut","as_mut_bitptr","as_mut_bitptr_range","as_mut_ptr","as_mut_ptr_range","as_ptr","as_ptr_range","as_ref","as_ref","as_ref","as_slice","as_slice","bit_domain","bit_domain_mut","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_refs","by_vals","chunks","chunks_exact","chunks_exact_mut","chunks_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from_bitslice","clone_from_slice","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","contains","copied","copy_from_bitslice","copy_from_slice","copy_within","copy_within_unchecked","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count_ones","count_zeros","default","default","default","default","domain","domain_mut","empty","empty_mut","ends_with","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fill","fill_with","first","first_mut","first_one","first_zero","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_element","from_element_mut","from_mut","from_raw_parts","from_raw_parts_mut","from_raw_parts_unchecked","from_raw_parts_unchecked_mut","from_ref","from_slice","from_slice_mut","from_slice_unchecked","from_slice_unchecked_mut","get","get","get_mut","get_mut","get_unchecked","get_unchecked","get_unchecked_mut","get_unchecked_mut","hash","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bitslice","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_remainder","into_remainder","into_remainder","into_remainder","into_slice","is_empty","iter","iter_mut","iter_ones","iter_zeros","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last_mut","last_one","last_zero","leading_ones","leading_zeros","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","load_be","load_be","load_le","load_le","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","not","not_all","not_any","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","rchunks","rchunks_exact","rchunks_exact_mut","rchunks_mut","remainder","remainder","remove_alias","remove_alias","remove_alias","remove_alias","remove_alias","remove_alias","remove_alias","remove_alias","remove_alias","remove_alias","repeat","replace","replace_unchecked","reverse","rotate_left","rotate_right","rsplit","rsplit_mut","rsplitn","rsplitn_mut","set","set_aliased","set_aliased_unchecked","set_unchecked","shift_left","shift_right","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","some","split","split_at","split_at_mut","split_at_unchecked","split_at_unchecked_mut","split_first","split_first_mut","split_inclusive","split_inclusive_mut","split_last","split_last_mut","split_mut","splitn","splitn_mut","starts_with","store_be","store_be","store_le","store_le","strip_prefix","strip_suffix","swap","swap_unchecked","swap_with_bitslice","swap_with_slice","take_remainder","take_remainder","take_remainder","take_remainder","to_bitvec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_vec","trailing_ones","trailing_zeros","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_slice","try_from_slice_mut","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","windows","ALIAS_WIDTH","ALIGNED_TO_SIZE","Access","Alias","BitStore","Mem","Unalias","ZERO","get_bit","load_value","new","store_value","BitVec","Drain","EMPTY","IntoIter","Splice","append","as_bitptr","as_bitslice","as_bitslice","as_mut","as_mut","as_mut_bitptr","as_mut_bitslice","as_mut_ptr","as_mut_slice","as_ptr","as_raw_mut_slice","as_raw_slice","as_ref","as_ref","as_ref","as_slice","as_slice","bitand","bitand_assign","bitor","bitor_assign","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone_into","cmp","count","count","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend","extend","extend","extend","extend_from_bitslice","extend_from_raw_slice","extend_from_slice","extend_from_within","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_align","from","from","from","from","from","from","from","from","from_bitslice","from_element","from_iter","from_iter","from_iter","from_iter","from_iter","from_raw_parts","from_slice","from_vec","hash","index","index_mut","insert","into","into","into","into_boxed_bitslice","into_boxed_slice","into_iter","into_iter","into_iter","into_iter","into_iter","into_raw_parts","into_vec","is_empty","last","last","leak","len","len","len","load_be","load_le","new","next","next","next_back","next_back","not","nth","nth_back","nth_back","partial_cmp","pop","push","remove","repeat","reserve","reserve_exact","resize","resize_with","retain","set_elements","set_len","set_uninitialized","shrink_to_fit","size_hint","size_hint","splice","split_off","store_be","store_le","swap_remove","to_owned","to_string","truncate","try_from","try_from","try_from","try_from","try_from_slice","try_from_vec","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity","AsBits","AsMutBits","BitView","BitViewSized","Store","ZERO","as_bits","as_mut_bits","as_raw_mut_slice","as_raw_slice","into_bitarray","try_as_bits","try_as_mut_bits","try_view_bits","try_view_bits_mut","view_bits","view_bits_mut"],"q":[[0,"bitvec"],[20,"bitvec::access"],[126,"bitvec::array"],[214,"bitvec::boxed"],[304,"bitvec::domain"],[373,"bitvec::domain::BitDomain"],[376,"bitvec::domain::Domain"],[379,"bitvec::field"],[386,"bitvec::index"],[546,"bitvec::mem"],[552,"bitvec::order"],[599,"bitvec::prelude"],[621,"bitvec::ptr"],[880,"bitvec::slice"],[1722,"bitvec::store"],[1734,"bitvec::vec"],[1894,"bitvec::view"],[1911,"core::fmt"],[1912,"core::fmt"],[1913,"core::result"],[1914,"core::any"],[1915,"core::clone"],[1916,"core::cmp"],[1917,"core::marker"],[1918,"core::hash"],[1919,"core::option"],[1920,"funty"],[1921,"alloc::string"],[1922,"core::cmp"],[1923,"alloc::borrow"],[1924,"core::iter::traits::collect"],[1925,"core::cmp"],[1926,"core::cmp"],[1927,"core::hash"],[1928,"core::iter::traits::double_ended"],[1929,"core::iter::traits::exact_size"],[1930,"core::iter::traits::marker"],[1931,"core::convert"],[1932,"wyz::comu"],[1933,"core::fmt"],[1934,"wyz::range"],[1935,"core::ops::range"]],"d":["Bit-Array Type Definition","Memory Bus Access Management","Statically-Allocated, Fixed-Size, Bit Buffer","Bit-Array Value Constructor","Boxed Bit-Slice Constructor","Bit-Slice Region Constructor","Bit-Vector Constructor","Heap-Allocated, Fixed-Size, Bit Buffer","Memory Region Description","Bit-Field Memory Slots","Bit Indices","Constructor Macros","Memory Element Descriptions","In-Element Bit Ordering","Symbol Export","Raw Pointer Implementation","Bit-Addressable Memory Regions","Storage Memory Description","Dynamically-Allocated, Adjustable-Size, Bit Buffer","Bit View Adapters","Bit-Level Access Instructions","Read-Only Semivolatile Handle","Read-Only Shared-Mutable Handle","Read-Only Shared-Mutable Handle","Read-Only Shared-Mutable Handle","Read-Only Shared-Mutable Handle","Read-Only Shared-Mutable Handle","The element type being guarded against improper mutation.","The memory-access type this guards.","The zero constant.","","","","","","","","","","","","","","","","","","","","","Clears bits within a memory element to <code>0</code>.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the function that will write <code>value</code> into all bits …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Inverts bits within a memory element.","Loads the value from memory, allowing for the possibility …","","","","","","","","","","","","","","","","Sets bits within a memory element to <code>1</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes a value to one bit in a memory element, returning …","Bit-Precision Array Immediate","Bit-Array Iteration","A bit-array with all bits initialized to zero.","The ordering of bits within an <code>A::Store</code> element.","Explicitly views the bit-array as a bit-slice.","Views the remaining unyielded bits in the iterator.","","Explicitly views the bit-array as a mutable bit-slice.","Mutably views the remaining unyielded bits in the iterator.","Returns a mutable bit-slice containing the entire …","","Views the bit-array as a mutable slice of its underlying …","Views the bit-array as a slice of its underlying memory …","","Returns a bit-slice containing the entire bit-array. …","","","","","","","","","","","","","","","","","","","","The wrapped data buffer.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Removes the bit-array wrapper, returning the contained …","","","","","Tests whether the array is empty.","","Gets the length (in bits) of the bit-array.","","","","Wraps an existing buffer as a bit-array.","Converts a bit-array into its iterator.","","","","","","","","","","","","","","","","","","","","","","Fixed-Size, Heap-Allocated, Bit Slice","An iterator over a <code>BitBox</code>.","Views the remaining unyielded bits as a bit-slice.","Explicitly views the bit-box as a bit-slice.","","Views the remaining unyielded bits as a mutable bit-slice.","Explicitly views the bit-box as a mutable bit-slice.","Views the bit-box as a mutable slice of its underlying …","Views the bit-box as a slice of its underlying memory …","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the unused bits outside the <code>BitBox</code> buffer to a fixed …","","","","","","","","","Ensures that the allocated buffer has no dead bits between …","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Copies a bit-slice region into a new bit-box allocation.","Converts a <code>Box&lt;[T]&gt;</code> into a <code>BitBox&lt;T, O&gt;</code>, in place.","","Constructs a bit-box from a raw bit-slice pointer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the bit-box into a bit-vector.","Converts the bit-box back into an ordinary boxed element …","","","Consumes the bit-box, returning a raw bit-slice pointer.","","Deliberately leaks the allocated memory, returning an …","","","","","","","","","","","","","","","","","","","Attempts to convert an ordinary boxed slice into a boxed …","","","","","Bit-Slice Partitioning","Bit-Slice Element Partitioning","Indicates that a bit-slice’s contents are entirely in …","Indicates that a bit-slice’s contents are entirely in …","Partially-Owned Memory Element","Indicates that a bit-slice’s contents touch an element …","Indicates that a bit-slice’s contents touch an element …","","","","","","","Gets the semantic head and tail indices that constrain …","Clears all bits governed by the partial-element to <code>0</code>.","","","","","","","","","Attempts to unpack the bit-domain as an <code>Enclave</code> variant. …","Attempts to unpack the bit-domain as an <code>Enclave</code> variant. …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets the starting index of the live bits in the element.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the element-wise <code>Domain</code> into the equivalent …","Converts the partial element into a bit-slice over its …","","Inverts the value of each bit governed by the …","","Fetches the value stored through <code>self</code> and masks away extra …","Gets the bit-mask over all accessible bits.","","","Attempts to unpack the bit-domain as a <code>Region</code> variant. …","Attempts to unpack the bit-domain as a <code>Region</code> variant. …","Sets all bits governed by the partial-element to <code>1</code>.","Stores a value through <code>self</code> after masking away extra bits.","Performs a store operation on a partial-element whose bits …","Gets the ending index of the live bits in the element.","","","","","","","","","","","","","","Any bits that wholly-fill elements in the interior of the …","Any bits that partially-fill the first element of the …","Any bits that partially-fill the last element of the …","All fully-used elements in the bit-slice’s underlying …","The first element in the bit-slice’s underlying storage, …","The last element in the bit-slice’s underlying storage, …","C-Style Bit-Field Access","Integer Loading","Big-Endian Integer Loading","Little-Endian Integer Loading","Integer Storing","Big-Endian Integer Storing","Little-Endian Integer Storing","A full bit-mask with every bit set.","One-Bit-After Tail Index","Semantic Bit Index","Bit Index Error","Multi-Bit Selection Mask","Bit Position","One-Hot Bit Selection Mask","The inclusive maximum index within an <code>R</code> element.","The inclusive maximum tail within (or after) an <code>R</code> element.","The position value of the most significant bit in an <code>R</code> …","The inclusive minimum index within an <code>R</code> element.","The inclusive minimum tail within (or after) an <code>R</code> element.","The position value of the least significant bit in an <code>R</code> …","An empty bit-mask with every bit cleared.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new mask with a selector bit activated.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Inserts a selector bit into a mask.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Removes the index wrapper, leaving the internal counter.","Removes the error wrapper, leaving the internal counter.","Removes the tail wrapper, leaving the internal counter.","Removes the position wrapper, leaving the internal counter.","Removes the one-hot selection wrapper, leaving the …","Removes the mask wrapper, leaving the internal value.","Computes the bit selector for <code>self</code> as an accessor mask.","Computes the bit selector for <code>self</code> as an accessor mask.","Computes a bit-mask for <code>self</code>. This is a type-cast.","Wraps a counter value as a known-good index into an <code>R</code> …","Wraps a counter value as a known-good tail of an <code>R</code> …","Wraps a counter value as a known-good position within an <code>R</code> …","Wraps a selector value as a known-good selection in an <code>R</code> …","Wraps any <code>R</code> value as a bit-mask.","Wraps a counter value as an assumed-good index into an <code>R</code> …","Wraps a counter value as an assumed-good position within …","Wraps a selector value as an assumed-good selection in an <code>R</code>…","Increments an index counter, wrapping at the back edge of …","","","","","","","","Computes the bit position corresponding to <code>self</code> under some …","Decrements an index counter, wrapping at the front edge of …","Iterates over all indices between an inclusive start and …","Iterates over all possible index values.","Iterates over all possible selector values.","Iterates over all tail indices at and after an inclusive …","Computes the bit selector corresponding to <code>self</code> under an …","Computes the bit selector corresponding to <code>self</code>.","","Tests if a mask contains a given selector bit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The literal <code>!0</code>.","Register Descriptions","The number of bits required to store an index in the range …","A mask over all bits that can be used as an index within …","Counts the number of bits in a value of type <code>T</code>.","Bit Storage Calculator","In-Element Bit Ordering","C-Compatible Bit Ordering","Least-Significant-First Bit Traversal","Most-Significant-First Bit Traversal","Translates a semantic bit index into a real bit position.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Produces a multi-bit selection mask from a range of …","","","","","Produces a single-bit selection mask from a bit-index.","","","","","","","","","","","Complete <code>BitOrder</code> Verification","Single-Type <code>BitOrder</code> Verification","","","Bit-Array Type Definition","","","","","","","","","","","","","","","","Bit-Array Value Constructor","Boxed Bit-Slice Constructor","Bit-Slice Region Constructor","Bit-Vector Constructor","Single-Bit Pointer","Errors produced by invalid bit-pointer components.","Bit-Pointer Range","Proxy Bit-Reference","An error produced when creating <code>BitSpan</code> encoded references.","Marks whether this type contains mutability permissions …","A basic <code>const</code> marker.","The canonical dangling pointer. This selects the starting …","The canonical empty range. All ranges with zero length …","The error produced when an address is insufficiently …","Attempted to construct a bit-pointer with an address not …","The base element pointer is not aligned.","A basic <code>mut</code> marker.","Generalized mutability permissions.","Attempted to construct a bit-pointer with the null element …","A null pointer was provided.","Counts the layers of <code>Frozen&lt;&gt;</code> wrapping around a base <code>Const</code> …","One of <code>*const</code> or <code>*mut</code>.","Allow instances to be constructed generically.","The requested address is too high, and wraps to zero.","The requested length exceeds the <code>BitSpan</code> length ceiling.","Adjusts a bit-pointer upwards in memory. This is …","Gets the address of the base storage element.","Computes the offset (in bits) that needs to be applied to …","","Produces a proxy reference to the referent bit.","","Produces a proxy reference to the referent bit.","Gets the <code>BitIdx</code> that selects the bit within the memory …","Bit-Slice Pointer Construction","Bit-Slice Pointer Construction","","","","","","","","","","","","","","","","","Casts to a <code>BitPtr</code> with a different storage parameter.","Ensures that an address is well-aligned to its referent …","","","","","","","","","","","","","","","","","","","","","","","","Commits a bit into the proxied location.","Tests if a given bit-pointer is contained within the range.","Bit-wise <code>memcpy</code>","Copies <code>count</code> bits from the region starting at <code>src</code> to the …","Copies <code>count</code> bits from the region starting at <code>src</code> to the …","Bit-wise <code>memcpy</code>","Copies <code>count</code> bits from <code>self</code> to <code>dest</code>. The source and …","Copies <code>count</code> bits from <code>self</code> to <code>dest</code>. The source and …","","","","","","","","Remote Destructor","Runs the destructor of the referent value.","The higher, exclusive, bound of the range. The bit to …","","Bit-Pointer Equality","","","","","","","","","","","","","","","","","","","","","","","","","Freeze this type, wrapping it in a <code>const</code> marker that may …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Converts a bit-pointer into a proxy bit-reference.","Constructs a mutable <code>BitPtr</code> to the zeroth bit in a single …","Constructs a <code>BitPtr</code> to the zeroth bit in the zeroth …","Explicitly converts a <code>Range&lt;BitPtr&gt;</code> into a <code>BitPtrRange</code>.","Constructs a <code>BitPtr</code> to the zeroth bit in a single element.","Constructs a <code>BitPtr</code> to the zeroth bit in the zeroth …","Constructs a mutable <code>BitPtr</code> to the zeroth bit in the …","Bit-Pointer Hashing","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Decays the bit-reference to an ordinary bit-pointer.","","Explicitly converts a <code>BitPtrRange</code> into a <code>Range&lt;BitPtr&gt;</code>.","Tests if the range is empty (the distance between …","Tests if a bit-pointer is the null value.","","","Tries to construct a <code>BitPtr</code> from a memory location and a …","Constructs a <code>BitPtr</code> from an address and head index, …","","","","","","Bit-Pointer Sentinel Value","Bit-Pointer Sentinel Value","Creates a new bit-pointer at a specified offset from the …","Calculates the distance (in bits) between two bit-pointers.","","","","","","","","","","Gets a raw pointer to the memory element containing the …","Gets a raw pointer to the memory location containing the …","Decomposes a bit-pointer into its element address and bit …","Single-Bit Read","Reads the bit from <code>*self</code>.","Single-Bit Unaligned Read","Reads the bit from <code>*self</code> using an unaligned memory access.","Single-Bit Volatile Read","Reads the bit from <code>*self</code> using a volatile load.","Single-Bit Replacement","Moves <code>src</code> into the referenced bit, returning the previous …","Replaces the bit at <code>*self</code> with a new value, returning the …","Writes <code>value</code> into the proxy.","","Raw Bit-Slice Pointer Construction","Raw Bit-Slice Pointer Construction","The lower, inclusive, bound of the range. The bit to which …","","Adjusts a bit-pointer downwards in memory. This is …","Bit Swap","Swaps the bit values of two proxies.","Swaps the bits at two mutable locations.","Many-Bit Swap","Thaw a previously-frozen type, removing its <code>Frozen</code> marker …","Removes write permissions from a bit-pointer.","Adds write permissions to a bit-pointer.","","","","","","","","","Decomposes a bit-pointer into its address and head-index …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adjusts a bit-pointer upwards in memory, using wrapping …","Creates a new bit-pointer at a specified offset from the …","Adjusts a bit-pointer downwards in memory, using wrapping …","Single-Bit Write","Writes a new bit into the given location.","Bit-wise <code>memset</code>","Bit-wise <code>memset</code>","Single-Bit Unaligned Write","Writes a bit into memory, tolerating unaligned addresses.","Single-Bit Volatile Write","Writes a new bit using volatile I/O operations.","An iterator over <code>BitSlice</code> that yields <code>&amp;bool</code> directly.","Bit-Addressable Memory","Bit-Slice Indexing","An iterator over <code>BitSlice</code> that yields <code>bool</code> directly.","Shared Bit-Slice Chunking","Shared Bit-Slice Exact Chunking","Exclusive Bit-Slice Exact Chunking","Anti-Aliasing Iterator Adapter","Exclusive Bit-Slice Chunking","Anti-Aliasing Iterator Adapter","The output type of immutable access.","Shared Bit-Slice Iteration","Exclusive Bit-Slice Iteration","Anti-Aliasing Iterator Adapter","Bit Seeking","Bit Seeking","The inclusive maximum length of a <code>BitSlice&lt;_, T&gt;</code>.","The inclusive maximum length that a <code>[T]</code> slice can be for …","The output type of mutable access.","Shared Bit-Slice Reverse Chunking","Shared Bit-Slice Reverse Exact Chunking","Exclusive Bit-Slice Reverse Exact Chunking","Anti-Aliasing Iterator Adapter","Exclusive Bit-Slice Chunking","Anti-Aliasing Iterator Adapter","Shared Bit-Slice Reverse Splitting","Exclusive Bit-Slice Reverse Splitting","Anti-Aliasing Iterator Adapter","Shared Bit-Slice Reverse Splitting","Exclusive Bit-Slice Reverse Splitting","Anti-Aliasing Iterator Adapter","Shared Bit-Slice Splitting","Shared Bit-Slice Splitting","Exclusive Bit-Slice Splitting","Anti-Aliasing Iterator Adapter","Exclusive Bit-Slice Splitting","Anti-Aliasing Iterator Adapter","Shared Bit-Slice Splitting","Exclusive Bit-Slice Splitting","Anti-Aliasing Iterator Adapter","Bit-Slice Windowing","Produces bit-slice view(s) with different underlying …","Produces bit-slice view(s) with different underlying …","Tests if every bit is set to <code>1</code> in the bit-slice.","Tests if there is at least one bit set to <code>1</code> in the …","Gets a raw pointer to the zeroth bit of the bit-slice.","Views the bit-slice as a half-open range of bit-pointers, …","Views the currently unyielded bit-slice.","Views the remaining bit-slice that has not yet been …","","Gets a raw, write-capable pointer to the zeroth bit of the …","Views the bit-slice as a half-open range of write-capable …","","Produces a range of mutable bit-pointers to each bit in …","","Produces a range of bit-pointers to each bit in the …","","","","","","Partitions a bit-slice into maybe-contended and …","Partitions a mutable bit-slice into maybe-contended and …","Boolean Arithmetic","","","","","","","","","Boolean Arithmetic","","","","","","","","","Boolean Arithmetic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapts the iterator to yield regular <code>&amp;bool</code> references …","Adapts the iterator to yield <code>bool</code> values rather than the …","Iterates over non-overlapping subslices of a bit-slice.","Iterates over non-overlapping subslices of a bit-slice.","Iterates over non-overlapping mutable subslices of a …","Iterates over non-overlapping mutable subslices of a …","","","","","","","","","","","","","","Copies the bits from <code>src</code> into <code>self</code>.","","","","","","","","","","","","","","","","","","Tests if the bit-slice contains the given sequence …","Yields <code>bool</code> values directly, rather than proxy references.","Copies all bits from <code>src</code> into <code>self</code>, using batched …","","Copies a span of bits to another location in the bit-slice.","Copies bits from one region of the bit-slice to another …","","","","","","","","","","","","","","","","","","","","","","","","","Counts the number of bits set to <code>1</code> in the bit-slice …","Counts the number of bits cleared to <code>0</code> in the bit-slice …","","","","","Views the underlying memory of a bit-slice, removing alias …","Views the underlying memory of a bit-slice, removing alias …","Produces an empty bit-slice with an arbitrary lifetime.","Produces an empty bit-slice with an arbitrary lifetime.","Tests if the bit-slice ends with the given sequence.","","","","","","","","","","","","","","","Fills the bit-slice with a given bit.","Fills the bit-slice with bits produced by a generator …","Gets a reference to the first bit of the bit-slice, or <code>None</code>…","Gets a mutable reference to the first bit of the …","Finds the index of the first bit in the bit-slice set to <code>1</code>.","Finds the index of the first bit in the bit-slice cleared …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a shared <code>&amp;BitSlice</code> reference over a shared …","Constructs an exclusive <code>&amp;mut BitSlice</code> reference over an …","","Raw Bit-Slice Construction","Raw Bit-Slice Construction","Raw Bit-Slice Construction","Raw Bit-Slice Construction","","Constructs a shared <code>&amp;BitSlice</code> reference over a slice of …","Constructs an exclusive <code>&amp;mut BitSlice</code> reference over a …","Constructs a shared <code>&amp;BitSlice</code> over an element slice, …","Constructs an exclusive <code>&amp;mut BitSlice</code> over an element …","Immutably indexes into a bit-slice, returning <code>None</code> if <code>self</code> …","Gets a reference to a single bit or a subsection of the …","Mutably indexes into a bit-slice, returning <code>None</code> if <code>self</code> …","Gets a mutable reference to a single bit or a subsection …","Immutably indexes into a bit-slice without doing any …","Gets a reference to a single bit or to a subsection of the …","Mutably indexes into a bit-slice without doing any bounds …","Gets a mutable reference to a single bit or a subsection …","","Immutably indexes into a bit-slice, panicking if <code>self</code> is …","","","","","Looks up a single bit by its semantic index.","","","Mutably indexes into a bit-slice, panicking if <code>self</code> is out …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Views the underlying bit-slice as a subslice of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the iterator, returning the remnant bit-slice …","Consumes the iterator, returning the remnant bit-slice …","See <code>ChunksExactMut::into_remainder()</code>.","See <code>RChunksExactMut::into_remainder()</code>","","Tests if the bit-slice is empty (length zero).","Produces an iterator over each bit in the bit-slice.","Produces a mutable iterator over each bit in the bit-slice.","Enumerates the index of each bit in a bit-slice set to <code>1</code>.","Enumerates the index of each bit in a bit-slice cleared to …","","","","Gets a reference to the last bit of the bit-slice, or <code>None</code> …","","","","","","","","","","","","","","","","","","","","","","Gets a mutable reference to the last bit of the bit-slice, …","Finds the index of the last bit in the bit-slice set to <code>1</code>.","Finds the index of the last bit in the bit-slice cleared …","Counts the number of bits from the start of the bit-slice …","Counts the number of bits from the start of the bit-slice …","","","","Gets the number of bits in the bit-slice.","","","","","","","","","","","","","","","","","","","","","","<code>Msb0</code> Big-Endian Integer Loading","<code>Lsb0</code> Big-Endian Integer Loading","<code>Msb0</code> Little-Endian Integer Loading","<code>Lsb0</code> Little-Endian Integer Loading","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tests if at least one bit is cleared to <code>0</code> in the bit-slice.","Tests if every bit is cleared to <code>0</code> in the bit-slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates over non-overlapping subslices of a bit-slice, …","Iterates over non-overlapping subslices of a bit-slice, …","Iterates over non-overlapping mutable subslices of a …","Iterates over non-overlapping mutable subslices of a …","Gets the remnant bit-slice that the iterator will not …","Gets the remnant bit-slice that the iterator will not …","Removes a layer of <code>::Alias</code> tainting from the yielded item.","Removes a layer of <code>::Alias</code> tainting from the yielded item.","Removes a layer of <code>::Alias</code> tainting from the yielded item.","Removes a layer of <code>::Alias</code> tainting from the yielded item.","Removes a layer of <code>::Alias</code> tainting from the yielded item.","Removes a layer of <code>::Alias</code> tainting from the yielded item.","Removes a layer of <code>::Alias</code> tainting from the yielded item.","Removes a layer of <code>::Alias</code> tainting from the yielded item.","Removes a layer of <code>::Alias</code> tainting from the yielded item.","Removes a layer of <code>::Alias</code> tainting from the yielded item.","Creates a bit-vector by repeating a bit-slice <code>n</code> times.","Writes a new value into a bit, and returns its previous …","Writes a new value into a bit, returning the previous …","Reverses the order of bits in a bit-slice.","Rotates the contents of a bit-slice to the left (towards …","Rotates the contents of a bit-slice to the right (away …","Iterates over subslices separated by bits that match a …","Iterates over mutable subslices separated by bits that …","Iterates over mutable subslices separated by bits that …","Iterates over mutable subslices separated by bits that …","Writes a new value into a single bit.","Writes a new value into a single bit, using alias-safe …","Writes a new value into a single bit, using alias-safe …","Writes a new value into a single bit, without bounds …","Shifts the contents of a bit-slice “left” (towards the …","Shifts the contents of a bit-slice “right” (away from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tests if at least one bit is set to <code>1</code>, and at least one …","Iterates over subslices separated by bits that match a …","Splits a bit-slice in two parts at an index.","Splits a mutable bit-slice in two parts at an index.","Splits a bit-slice at an index, without bounds checking.","Splits a mutable bit-slice at an index, without bounds …","Splits the bit-slice into a reference to its first bit, …","Splits the bit-slice into mutable references of its first …","Iterates over subslices separated by bits that match a …","Iterates over mutable subslices separated by bits that …","Splits the bit-slice into a reference to its last bit, and …","Splits the bit-slice into mutable references to its last …","Iterates over mutable subslices separated by bits that …","Iterates over subslices separated by bits that match a …","Iterates over mutable subslices separated by bits that …","Tests if the bit-slice begins with the given sequence.","<code>Lsb0</code> Big-Endian Integer Storing","<code>Msb0</code> Big-Endian Integer Storing","<code>Msb0</code> Little-Endian Integer Storing","<code>Lsb0</code> Little-Endian Integer Storing","Removes a prefix bit-slice, if present.","Removes a suffix bit-slice, if present.","Exchanges the bit values at two indices.","Swaps two bits in a bit-slice, without bounds checking.","Swaps the contents of two bit-slices.","","Takes the remnant bit-slice out of the iterator.","Takes the remnant bit-slice out of the iterator.","See <code>ChunksExactMut::take_remainder()</code>","See <code>RChunksExactMut::take_remainder()</code>","Copies a bit-slice into an owned bit-vector.","","","","","","","","","","","","","","","","","Counts the number of bits from the end of the bit-slice to …","Counts the number of bits from the end of the bit-slice to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to construct a shared <code>&amp;BitSlice</code> reference over a …","Attempts to construct an exclusive <code>&amp;mut BitSlice</code> reference …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates over consecutive windowing subslices in a …","All implementors are required to have <code>Self</code> and <code>Self::Alias</code> …","All implementors are required to have their alignment …","A type that selects the appropriate load/store …","A sibling <code>BitStore</code> implementor that is known to be …","Bit Storage","The element type used in the memory region underlying a …","The inverse of <code>::Alias</code>. It is used when a <code>BitSlice</code> removes …","The zero constant.","Reads a single bit out of the memory system according to …","Loads a value out of the memory system according to the …","Wraps a raw memory value as a <code>BitStore</code> type.","Stores a value into the memory system. This is only called …","Bit-Precision Dynamic Array","Draining Iteration","An empty bit-vector with no backing allocation.","","Splicing Iteration","Moves all the bits out of <code>other</code> into the back of <code>self</code>.","Creates an unsafe shared bit-pointer to the start of the …","Views the unyielded bits remaining in the drain.","Explicitly views the bit-vector as a bit-slice.","","","Creates an unsafe writable bit-pointer to the start of the …","Explicitly views the bit-vector as a mutable bit-slice.","","","","Views the bit-vector as a mutable slice of its underlying …","Views the bit-vector as a slice of its underlying memory …","","","","","","","","","","","","","","","","","","","","Gets the allocation capacity, measured in bits.","Empties the bit-vector.","","","","","","","","","Iterates over a portion of the bit-vector, <em>removing</em> all …","","","","","","","","","","Appends the contents of a bit-slice to a bit-vector.","Appends a slice of <code>T</code> elements to a bit-vector.","","Extends <code>self</code> by copying an internal range of its bit-slice …","","","","","","","","","","Ensures that the live region of the bit-vector’s …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Copies the contents of a bit-slice into a new heap …","Constructs a new bit-vector from a single element.","","","","","","Constructs a bit-vector handle from its constituent fields.","Constructs a new bit-vector from a slice of memory …","Converts a regular vector in-place into a bit-vector.","","","","Inserts a bit at a given position, shifting all bits after …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a bit-vector into a boxed bit-slice.","","","","","","","Decomposes a bit-vector into its constituent member fields.","Converts a bit-vector into a <code>Vec</code> of its underlying storage.","Tests if the bit-vector is empty.","","","Destroys the <code>BitVec</code> handle without destroying the …","","Gets the length of the bit-vector.","","","","Constructs a new, empty, bit-vector.","","","","","","","","","","Attempts to remove the trailing bit from the bit-vector.","Appends a single bit to the vector.","Removes a bit at a given position, shifting all bits after …","Creates a new bit-vector by repeating a bit for the …","Ensures that the bit-vector has allocation capacity for <em>at </em>…","Ensures that the bit-vector has allocation capacity for <em>at </em>…","Resizes the bit-vector to a new length. New bits are …","Resizes the bit-vector to a new length, using a function …","Retains only the bits that the predicate allows.","Overwrites each element (visible in <code>.as_raw_mut_slice()</code>) …","Resizes a bit-vector to a new length.","Sets the uninitialized bits of a bit-vector to a known …","Releases excess capacity back to the allocator.","","","Modifies <code>self.drain()</code> so that the removed bit-slice is …","Splits the bit-vector in half at an index, moving …","","","Takes a bit out of the bit-vector.","","","Shortens the bit-vector, keeping the first <code>new_len</code> bits …","","","","","Fallibly constructs a new bit-vector from a slice of …","Attempts to convert a regular vector in-place into a …","","","","","","","Allocates a new, empty, bit-vector with space for at least …","Immutable Bit View","Mutable Bit View","Bit View","Helper trait for scalars and arrays, but not slices.","The underlying element type.","The zero constant.","Views <code>self</code> as an immutable bit-slice region with the <code>O</code> …","Views <code>self</code> as a mutable bit-slice region with the <code>O</code> …","Views the type as a mutable slice of its elements.","Views the type as a slice of its elements.","Wraps <code>self</code> in a <code>BitArray</code>.","Attempts to view <code>self</code> as an immutable bit-slice region …","Attempts to view <code>self</code> as a mutable bit-slice region with …","Attempts to view a memory region as an immutable bit-slice.","Attempts to view a memory region as a mutable bit-slice.","Views a memory region as an immutable bit-slice.","Views a memory region as a mutable bit-slice."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,4,7,8,9,10,4,7,8,9,10,4,7,8,9,10,4,7,8,9,10,2,4,7,8,9,10,4,7,8,9,10,2,4,7,8,9,10,2,14,4,7,8,9,10,4,7,8,9,10,4,7,8,9,10,2,4,7,8,9,10,4,7,8,9,10,4,7,8,9,10,4,7,8,9,10,4,7,8,9,10,4,7,8,9,10,4,7,8,9,10,4,7,8,9,10,2,0,0,25,25,25,27,25,25,27,25,27,25,25,25,25,27,25,25,25,25,25,25,25,25,27,25,25,27,25,27,25,27,25,27,25,25,25,25,25,25,25,25,25,25,25,27,25,25,27,25,25,25,25,27,25,25,25,25,27,25,27,25,27,25,25,25,27,27,27,25,27,27,25,27,25,25,25,27,25,25,25,25,25,27,25,27,25,27,0,0,36,38,38,36,38,38,38,36,38,38,38,38,38,38,38,36,38,38,36,38,38,36,38,36,38,38,36,38,38,38,38,38,38,36,38,38,38,38,38,38,38,38,36,38,38,38,38,38,38,38,38,38,38,38,38,38,36,38,38,38,36,38,38,36,38,36,38,38,36,36,38,36,36,38,36,38,38,36,38,38,36,38,38,38,36,38,36,38,0,0,50,51,0,50,51,50,51,45,50,51,45,45,45,50,51,45,50,51,45,50,51,50,51,50,51,51,51,51,51,51,45,50,51,45,45,45,50,51,45,51,45,51,45,51,45,45,51,51,50,51,45,45,45,45,50,51,45,51,50,51,45,50,51,45,50,51,45,138,138,138,139,139,139,0,53,53,53,53,53,53,3,0,0,0,0,0,0,24,46,55,24,46,55,3,3,3,24,54,46,55,56,3,24,54,46,55,56,3,24,54,46,55,56,3,24,54,46,55,56,3,24,54,46,55,56,3,3,24,54,46,55,56,3,24,54,46,55,56,3,24,24,24,54,54,46,46,46,55,55,55,56,56,56,3,3,3,24,54,46,55,56,3,24,54,46,55,56,3,3,24,54,46,55,56,3,24,54,46,55,56,3,24,55,56,24,46,55,56,3,24,55,56,24,3,24,54,46,55,56,3,24,24,24,24,56,46,24,55,3,3,24,54,46,55,56,3,24,54,46,55,56,3,24,54,46,55,56,3,24,54,46,55,56,3,24,54,46,55,56,3,15,0,15,15,0,0,0,0,0,0,22,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,22,65,66,65,66,22,65,66,65,66,65,66,65,66,65,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,0,68,72,0,73,21,0,0,73,21,47,47,47,21,21,68,68,68,70,68,70,68,68,0,0,49,48,70,72,68,71,73,21,49,48,70,72,68,71,73,21,68,0,49,48,70,72,68,71,73,21,49,48,70,72,68,71,73,21,49,48,70,68,71,73,21,70,72,0,68,68,0,68,68,72,49,48,72,70,70,70,0,68,72,72,0,49,48,70,70,70,72,68,71,73,21,49,48,70,70,70,72,68,68,71,71,73,73,21,21,47,49,48,70,72,72,68,68,68,71,73,73,73,21,21,21,70,68,68,72,68,68,68,0,49,48,70,72,68,71,73,21,49,48,70,72,68,71,73,21,70,72,72,72,68,72,72,68,68,72,72,70,72,72,0,0,68,68,49,48,70,70,70,68,71,73,21,68,68,68,0,68,0,68,0,68,0,70,68,70,72,0,0,72,72,68,0,70,68,0,47,68,68,49,48,70,72,68,71,73,21,68,70,71,73,21,49,48,70,72,68,68,68,71,73,21,49,48,70,72,68,71,73,21,49,48,70,72,68,71,73,21,68,68,68,0,68,0,0,0,68,0,68,0,0,0,0,0,0,0,0,0,0,121,0,0,0,0,0,20,20,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,81,82,20,20,20,20,20,20,20,81,82,20,81,82,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,81,82,84,114,115,116,117,118,20,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,81,82,84,114,115,116,117,118,20,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,81,81,20,20,20,20,81,89,85,86,90,91,92,95,96,97,98,99,100,20,20,81,89,85,86,90,91,92,95,96,97,98,99,100,20,99,100,20,81,20,20,20,20,81,82,84,89,85,88,86,87,90,102,91,103,99,100,104,105,106,107,108,109,110,111,112,113,20,20,20,20,99,100,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,99,100,20,20,20,20,20,20,81,82,114,115,116,117,118,20,20,20,20,20,20,20,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,81,82,84,114,115,116,117,118,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,20,20,0,0,0,0,0,0,20,20,20,20,121,20,121,20,121,20,121,20,20,121,20,20,20,20,20,20,20,121,20,20,20,20,20,20,81,82,84,114,115,116,117,118,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,82,81,82,84,114,115,116,117,118,20,20,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,87,103,106,108,82,20,20,20,20,20,81,82,84,20,89,85,88,86,87,90,102,91,103,99,100,104,105,106,107,108,109,110,111,112,113,20,20,20,20,20,81,82,84,20,89,85,88,86,87,90,102,91,103,99,100,104,105,106,107,108,109,110,111,112,113,20,20,20,20,81,82,84,114,115,116,117,118,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,81,82,84,114,115,116,89,85,88,86,87,90,102,91,103,92,95,96,99,100,104,105,106,107,108,109,110,111,112,113,20,20,20,81,82,84,89,85,88,86,87,90,102,91,103,104,105,106,107,108,109,110,111,112,113,81,82,84,89,85,88,86,87,90,102,91,103,104,105,106,107,108,109,110,111,112,113,20,20,20,20,20,20,20,20,20,20,20,20,20,20,99,100,20,20,20,20,86,91,82,114,115,116,117,118,88,87,102,103,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,81,82,84,114,115,116,117,118,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,87,103,106,108,20,81,20,89,85,86,90,91,92,95,96,97,98,99,100,20,20,20,20,81,82,84,114,115,116,117,118,20,20,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,20,20,81,82,84,114,115,116,117,118,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,81,82,84,114,115,116,117,118,20,89,85,88,86,87,90,102,91,103,92,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,20,37,37,37,37,0,37,37,37,37,37,37,37,0,0,40,0,0,40,40,130,40,40,40,40,40,40,40,40,40,40,130,40,40,130,40,40,40,40,40,40,40,130,40,40,131,130,40,40,131,40,40,40,40,40,130,131,40,40,40,40,130,40,131,40,40,40,40,40,40,40,40,40,40,130,40,40,40,40,40,40,40,131,40,130,40,40,40,40,40,40,131,40,40,40,40,40,40,40,40,40,40,40,40,40,40,130,40,131,40,40,130,40,40,40,131,40,40,40,130,131,40,130,40,131,40,40,40,130,131,130,131,40,130,130,131,40,40,40,40,40,40,40,40,40,40,40,40,40,40,130,131,40,40,40,40,40,40,40,40,130,40,40,131,40,40,130,40,131,130,40,131,40,0,0,0,0,137,26,134,135,26,26,26,134,135,137,137,137,137],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,[3,[-1]]],-1,[]],[[4,5],6],[[7,5],6],[[8,5],6],[[9,5],6],[[10,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,[3,[-1]]],-1,[]],[[[14,[],[[12,[-1]],[13,[-2]]]]],-1,15,[[17,[],[[16,[-1]]]]]],[4,-1,[]],[7,-1,[]],[8,-1,[]],[9,-1,[]],[10,-1,[]],[4,-1,[]],[7,-1,[]],[8,-1,[]],[9,-1,[]],[10,-1,[]],[-1,4,[]],[-1,7,[]],[-1,8,[]],[-1,9,[]],[-1,10,[]],[[2,[3,[-1]]],-1,[]],[[4,-1],18,[]],[[7,-1],18,[]],[[8,-1],18,[]],[[9,-1],18,[]],[[10,-1],18,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[[20,[-2,-3]],[21,[-2]]]]],[],[],22],[-1,[[19,[[20,[-2,-3]],[21,[-2]]]]],[],[],22],[-1,[[19,[[20,[-2,-3]],[21,[-2]]]]],[],[],22],[-1,[[19,[[20,[-2,-3]],[21,[-2]]]]],[],[],22],[-1,[[19,[[20,[-2,-3]],[21,[-2]]]]],[],[],22],[-1,[[19,[[20,[-2,-3]],[21,[-2]]]]],[],[],22],[-1,[[19,[[20,[-2,-3]],[21,[-2]]]]],[],[],22],[-1,[[19,[[20,[-2,-3]],[21,[-2]]]]],[],[],22],[-1,[[19,[[20,[-2,-3]],[21,[-2]]]]],[],[],22],[-1,[[19,[[20,[-2,-3]],[21,[-2]]]]],[],[],22],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,[[20,[-2,-3]]],[],[],22],[-1,[[20,[-2,-3]]],[],[],22],[-1,[[20,[-2,-3]]],[],[],22],[-1,[[20,[-2,-3]]],[],[],22],[-1,[[20,[-2,-3]]],[],[],22],[-1,[[20,[-2,-3]]],[],[],22],[-1,[[20,[-2,-3]]],[],[],22],[-1,[[20,[-2,-3]]],[],[],22],[-1,[[20,[-2,-3]]],[],[],22],[-1,[[20,[-2,-3]]],[],[],22],[[2,[24,[-1]],11],11,[]],0,0,0,0,[[[25,[-1,-2]]],[[20,[-2]]],26,22],[[[27,[-1,-2]]],[[20,[-2]]],26,22],[[[25,[-1,-2]]],[[20,[-2]]],26,22],[[[25,[-1,-2]]],[[20,[-2]]],26,22],[[[27,[-1,-2]]],[[20,[-2]]],26,22],[[[25,[-1,-2]]],[[20,[-2]]],26,22],[[[27,[-1,-2]]],[[20,[-2]]],26,22],[[[25,[-1,-2]]],1,26,22],[[[25,[-1,-2]]],1,26,22],[[[25,[-1,-2]]],[[20,[-2]]],26,22],[[[25,[-1,-2]]],[[20,[-2]]],26,22],[[[27,[-1,-2]]],[[20,[-2]]],26,22],[[[25,[-1,-2]],-3],-4,26,22,[],[]],[[[25,[-1,-2]],-3],18,26,22,[]],[[[25,[-1,-2]],-3],-4,26,22,[],[]],[[[25,[-1,-2]],-3],18,26,22,[]],[[[25,[-1,-2]],-3],-4,26,22,[],[]],[[[25,[-1,-2]],-3],18,26,22,[]],[-1,-2,[],[]],[[[25,[-1,-2]]],[[20,[-2]]],26,22],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,-2]]],[[20,[-2]]],26,22],[-1,-2,[],[]],[[[25,[-1,-2]]],[[25,[-1,-2]]],26,22],[[[27,[-1,-2]]],[[27,[-1,-2]]],[26,28],[22,28]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[[25,[-1,-2]],[25,[-1,-2]]],29,26,22],[[[27,[-1,-2]]],30,26,22],0,[[],[[25,[-1,-2]]],26,22],[[[25,[-1,-2]]],-3,26,22,[]],[[[25,[-1,-2]]],-3,26,22,[]],[[[25,[-1,-2]],-3],11,26,22,31],[[[25,[-1,-2]],5],6,26,22],[[[25,[-1,-2]],5],6,26,22],[[[25,[-1,-2]],5],6,26,22],[[[25,[-1,-2]],5],6,26,22],[[[25,[-1,-2]],5],6,26,22],[[[25,[-1,-2]],5],6,26,22],[[[27,[-1,-2]],5],6,26,22],[-1,[[25,[-1,-2]]],26,22],[-1,-1,[]],[-1,-1,[]],[[[25,[-1,-2]],-3],18,26,22,32],[[[25,[-1,-2]],-3],-4,26,22,[],[]],[[[25,[-1,-2]],-3],-4,26,22,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,-2]]],-1,26,22],[[[25,[-1,-2]]],-3,26,22,[]],[[[25,[-1,-2]]],-3,26,22,[]],[[[25,[-1,-2]]],-3,26,22,[]],[-1,-2,[],[]],[[[25,[-1,-2]]],11,26,22],[[[27,[-1,-2]]],[[33,[-3]]],26,22,[]],[[[25,[-1,-2]]],30,26,22],[[[27,[-1,-2]]],30,26,22],[[[25,[-1,-2]]],-3,26,22,34],[[[25,[-1,-2]]],-3,26,22,34],[-1,[[25,[-1,-2]]],26,22],[[[25,[-1,-2]]],[[27,[-1,-2]]],26,22],[[[27,[-1,-2]]],[[33,[-3]]],26,22,[]],[[[27,[-1,-2]]],[[33,[-3]]],26,22,[]],[[[25,[-1,-2]]],-3,26,22,[]],[[[27,[-1,-2]],30],[[33,[-3]]],26,22,[]],[[[27,[-1,-2]],30],[[33,[-3]]],26,22,[]],[[[25,[-1,-2]],-3],[[33,[29]]],26,22,31],[[[27,[-1,-2]]],[[18,[30,[33,[30]]]]],26,22],[[[25,[-1,-2]],-3],18,26,22,34],[[[25,[-1,-2]],-3],18,26,22,34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[[[20,[-1]]],[[19,[[25,[-2,-1]],-3]]],22,26,[]],[[[20,[-1]]],[[19,[[25,[-2,-1]],-3]]],22,26,[]],[[[20,[-1]]],[[19,[[25,[-2,-1]],-3]]],22,26,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,0,[[[36,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[38,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[38,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[36,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[38,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[38,[-1,-2]]],[[1,[-1]]],37,22],[[[38,[-1,-2]]],[[1,[-1]]],37,22],[[[36,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[38,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[38,[-1,-2]],-3],-4,37,22,[],[]],[[[38,[-1,-2]],-3],18,37,22,[]],[[[38,[-1,-2]],-3],-4,37,22,[],[]],[[[38,[-1,-2]],-3],18,37,22,[]],[[[38,[-1,-2]],-3],-4,37,22,[],[]],[[[38,[-1,-2]],-3],18,37,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1,-2]]],[[20,[-1,-2]]],37,22],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[36,[-1,-2]]],[[36,[-1,-2]]],37,22],[[[38,[-1,-2]]],[[38,[-1,-2]]],37,22],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[[38,[-1,-2]],[38,[-1,-2]]],29,37,22],[[[36,[-1,-2]]],30,37,22],[[],[[38,[-1,-2]]],37,22],[[[38,[-1,-2]]],-3,37,22,[]],[[[38,[-1,-2]]],-3,37,22,[]],[[[38,[-1,-2]]],18,37,22],[[[38,[-1,-2]],-3],11,37,22,[31,[39,[[20,[-1,-2]]]]]],[[[38,[-1,-2]],11],18,37,22],[[[36,[-1,-2]],5],6,37,22],[[[38,[-1,-2]],5],6,37,22],[[[38,[-1,-2]],5],6,37,22],[[[38,[-1,-2]],5],6,37,22],[[[38,[-1,-2]],5],6,37,22],[[[38,[-1,-2]],5],6,37,22],[[[38,[-1,-2]],5],6,37,22],[[[38,[-1,-2]],5],6,37,22],[[[38,[-1,-2]]],18,37,22],[-1,-1,[]],[[[20,[-1,-2]]],[[38,[-1,-2]]],37,22],[-1,-1,[]],[[[40,[-1,-2]]],[[38,[-1,-2]]],37,22],[[[25,[-1,-2]]],[[38,[-2]]],26,22],[[[41,[-1]]],[[38,[-1,-2]]],37,22],[[[42,[[20,[-1,-2]]]]],[[38,[-1,-2]]],37,22],[[[20,[-1,-2]]],[[38,[-1,-2]]],37,22],[[[41,[[1,[-1]]]]],[[38,[-1,-2]]],37,22],[-2,[[38,[-3,-4]]],[],[[43,[],[[16,[-1]]]]],37,22],[20,[[38,[-1,-2]]],37,22],[[[38,[-1,-2]],-3],18,37,22,32],[[[38,[-1,-2]],-3],-4,37,22,[],[]],[[[38,[-1,-2]],-3],-4,37,22,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1,-2]]],[[40,[-1,-2]]],37,22],[[[38,[-1,-2]]],[[41,[[1,[-1]]]]],37,22],[-1,-2,[],[]],[[[38,[-1,-2]]],-3,37,22,[]],[[[38,[-1,-2]]],20,37,22],[[[36,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[38,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[36,[-1,-2]]],30,37,22],[[[38,[-1,-2]]],-3,37,22,34],[[[38,[-1,-2]]],-3,37,22,34],[[[36,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[36,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[38,[-1,-2]]],-3,37,22,[]],[[[36,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[36,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[38,[-1,-2]],-3],[[33,[29]]],37,22,[31,[44,[[20,[-1,-2]]]]]],[[[36,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[38,[-1,-2]],-3],18,37,22,34],[[[38,[-1,-2]],-3],18,37,22,34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[41,[[1,[-1]]]]],[[19,[[38,[-1,-2]],-3]]],37,22,[]],[[[41,[[1,[-1]]]]],[[19,[[38,[-1,-2]],[41,[[1,[-1]]]]]]],37,22],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[45,[-1,-2,-3]]],[[18,[24,46]]],47,37,22],[[[45,[48,-1,-2]]],[],37,22],[[[50,[49,-1,-2]]],[[50,[49,-1,-2]]],37,22],[[[51,[49,-1,-2]]],[[51,[49,-1,-2]]],37,22],[[[45,[49,-1,-2]]],[[45,[49,-1,-2]]],37,22],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[],[[50,[-1,-2,-3]]],47,37,22],[[],[[51,[-1,-2,-3]]],47,37,22],[[[50,[-1,-2,-3]]],[[33,[[52,[-1,[20,[-2,-3]]]]]]],47,37,22],[[[51,[-1,-2,-3]]],[[33,[[45,[-1,-2,-3]]]]],47,37,22],[[[50,[-1,-2,-3]],5],6,47,37,22],[[[51,[49,-1,-2]],5],6,37,22],[[[51,[-1,-2,-3]],5],6,47,37,22],[[[51,[49,-1,-2]],5],6,37,22],[[[51,[49,-1,-2]],5],6,37,22],[[[51,[49,-1,-2]],5],6,37,22],[[[51,[49,-1,-2]],5],6,37,22],[[[45,[-1,-2,-3]],5],6,47,37,22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[45,[-1,-2,-3]],-4],18,47,37,22,32],[[[45,[-1,-2,-3]]],24,47,37,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[51,[-1,-2,-3]]],[[50,[-1,-2,-3]]],47,37,22],[[[45,[-1,-2,-3]]],[[52,[-1,[20,[-2,-3]]]]],47,37,22],[-1,-2,[],[]],[[[45,[48,-1,-2]]],[],37,22],[[[51,[49,-1,-2]]],30,37,22],[[[45,[-1,-2,-3]]],[],47,37,22],[[[45,[-1,-2,-3]]],3,47,37,22],[[[51,[49,-1,-2]]],[[33,[-3]]],37,22,[]],[[[51,[49,-1,-2]]],[[33,[-3]]],37,22,[]],[[[50,[-1,-2,-3]]],[[33,[[18,[[52,[-1,[20,[-2,-3]]]],[52,[-1,[20,[-3]]]],[52,[-1,[20,[-2,-3]]]]]]]]],47,37,22],[[[51,[-1,-2,-3]]],[[33,[[18,[[33,[[45,[-1,-2,-3]]]],[52,[-1,1]],[33,[[45,[-1,-2,-3]]]]]]]]],47,37,22],[[[45,[48,-1,-2]]],[],37,22],[[[45,[48,-1,-2]]],[],37,22],[[[45,[-1,-2,-3]]],[],47,[37,17],22],[[[45,[-1,-2,-3]]],46,47,37,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,0,0,0,0,[53,-1,34],[53,-1,34],[53,-1,34],[[53,-1],18,34],[[53,-1],18,34],[[53,-1],18,34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[-1]],-1],-2,15,[]],[[[3,[-1]],-1],-2,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1]]],[[24,[-1]]],[15,28]],[[[54,[-1]]],[[54,[-1]]],[15,28]],[[[46,[-1]]],[[46,[-1]]],[15,28]],[[[55,[-1]]],[[55,[-1]]],[15,28]],[[[56,[-1]]],[[56,[-1]]],[15,28]],[[[3,[-1]]],[[3,[-1]]],[15,28]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[[24,[-1]],[24,[-1]]],29,[15,57]],[[[54,[-1]],[54,[-1]]],29,[15,57]],[[[46,[-1]],[46,[-1]]],29,[15,57]],[[[55,[-1]],[55,[-1]]],29,[15,57]],[[[56,[-1]],[56,[-1]]],29,[15,57]],[[[3,[-1]],[3,[-1]]],29,[15,57]],[[[3,[-1]],[56,[-1]]],[[3,[-1]]],15],[[],[[24,[-1]]],[15,58]],[[],[[54,[-1]]],[15,58]],[[],[[46,[-1]]],[15,58]],[[],[[55,[-1]]],[15,58]],[[],[[56,[-1]]],[15,58]],[[],[[3,[-1]]],[15,58]],[[[24,[-1]],[24,[-1]]],11,[15,39]],[[[54,[-1]],[54,[-1]]],11,[15,39]],[[[46,[-1]],[46,[-1]]],11,[15,39]],[[[55,[-1]],[55,[-1]]],11,[15,39]],[[[56,[-1]],[56,[-1]]],11,[15,39]],[[[3,[-1]],[3,[-1]]],11,[15,39]],[[[24,[-1]],5],6,15],[[[24,[-1]],5],6,15],[[[24,[-1]],5],6,15],[[[54,[-1]],5],6,15],[[[54,[-1]],5],6,15],[[[46,[-1]],5],6,15],[[[46,[-1]],5],6,15],[[[46,[-1]],5],6,15],[[[55,[-1]],5],6,15],[[[55,[-1]],5],6,15],[[[55,[-1]],5],6,15],[[[56,[-1]],5],6,15],[[[56,[-1]],5],6,15],[[[56,[-1]],5],6,15],[[[3,[-1]],5],6,15],[[[3,[-1]],5],6,15],[[[3,[-1]],5],6,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[24,[-1]],-2],18,[15,59],32],[[[54,[-1]],-2],18,[15,59],32],[[[46,[-1]],-2],18,[15,59],32],[[[55,[-1]],-2],18,[15,59],32],[[[56,[-1]],-2],18,[15,59],32],[[[3,[-1]],-2],18,[15,59],32],[[[3,[-1]],[56,[-1]]],18,15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1]]],60,15],[[[54,[-1]]],60,15],[[[46,[-1]]],60,15],[[[55,[-1]]],60,15],[[[56,[-1]]],-1,15],[[[3,[-1]]],-1,15],[[[24,[-1]]],[[3,[-1]]],15],[[[55,[-1]]],[[3,[-1]]],15],[[[56,[-1]]],[[3,[-1]]],15],[60,[[19,[[24,[-1]],[54,[-1]]]]],15],[60,[[33,[[46,[-1]]]]],15],[60,[[33,[[55,[-1]]]]],15],[-1,[[33,[[56,[-1]]]]],15],[-1,[[3,[-1]]],15],[60,[[24,[-1]]],15],[60,[[55,[-1]]],15],[-1,[[56,[-1]]],15],[[[24,[-1]]],[[18,[[24,[-1]],11]]],15],[[[3,[-1]]],-2,15,[]],[[[24,[-1]],[24,[-1]]],[[33,[29]]],[15,44]],[[[54,[-1]],[54,[-1]]],[[33,[29]]],[15,44]],[[[46,[-1]],[46,[-1]]],[[33,[29]]],[15,44]],[[[55,[-1]],[55,[-1]]],[[33,[29]]],[15,44]],[[[56,[-1]],[56,[-1]]],[[33,[29]]],[15,44]],[[[3,[-1]],[3,[-1]]],[[33,[29]]],[15,44]],[[[24,[-1]]],[[55,[-1]]],15],[[[24,[-1]]],[[18,[[24,[-1]],11]]],15],[[[24,[-1]],[46,[-1]]],[[0,[[61,[],[[16,[[24,[-1]]]]]],62,63,64]]],15],[[],[[0,[[61,[],[[16,[[24,[-1]]]]]],62,63,64]]],15],[[],[[0,[[61,[],[[16,[[56,[-1]]]]]],62,63,64]]],15],[[[24,[-1]]],[[0,[[61,[],[[16,[[46,[-1]]]]]],62,63,64]]],15],[[[24,[-1]]],[[56,[-1]]],15],[[[55,[-1]]],[[56,[-1]]],15],[-2,[[3,[-1]]],15,[[61,[],[[16,[[56,[-1]]]]]]]],[[[3,[-1]],[56,[-1]]],11,15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,0,[[],30],[30,30],0,0,0,0,[[[24,[-1]]],[[55,[-1]]],15],[[[24,[-1]]],[[55,[-1]]],15],[[[24,[-1]]],[[55,[-1]]],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[65,65],[66,66],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[65,65],29],[[66,66],29],[[],65],[[],66],[[65,65],11],[[66,66],11],[[65,5],6],[[66,5],6],[-1,-1,[]],[-1,-1,[]],[[65,-1],18,32],[[66,-1],18,32],[-1,-2,[],[]],[-1,-2,[],[]],[[-2,-3],[[3,[-1]]],15,[[67,[[33,[[24,[-1]]]]]]],[[67,[[33,[[46,[-1]]]]]]]],[[-2,-3],[[3,[-1]]],15,[[67,[[33,[[24,[-1]]]]]]],[[67,[[33,[[46,[-1]]]]]]]],[[-2,-3],[[3,[-1]]],15,[[67,[[33,[[24,[-1]]]]]]],[[67,[[33,[[46,[-1]]]]]]]],[[65,65],[[33,[29]]]],[[66,66],[[33,[29]]]],[[[24,[-1]]],[[56,[-1]]],15],[[[24,[-1]]],[[56,[-1]]],15],[[[24,[-1]]],[[56,[-1]]],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[11,18],[11,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[68,[-1,-2,-3]],30],[[68,[-1,-2,-3]]],47,37,22],[[[68,[-1,-2,-3]]],[[69,[-1,-2]]],47,37,22],[[[68,[-1,-2,-3]],30],30,47,37,22],[[[70,[48,-1,-2]]],11,37,22],[[[68,[48,-1,-2]]],[[33,[[70,[48,-1,-2]]]]],37,22],[[[70,[-1,-2,-3]]],11,47,37,22],[[[68,[-1,-2,-3]]],[[33,[[70,[49,-2,-3]]]]],47,37,22],[[[68,[-1,-2,-3]]],24,47,37,22],[[[68,[49,-1,-2]],30],20,37,22],[[[68,[48,-1,-2]],30],20,37,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[68,[-1,-2,-3]]],[[68,[-1,-4,-3]]],47,37,22,37],[[[69,[-1,-2]]],[[19,[[69,[-1,-2]],[71,[-2]]]]],47,[]],[49,49],[48,48],[[[70,[49,-1,-2]]],[[70,[49,-1,-2]]],37,22],[[[72,[-1,-2,-3]]],[[72,[-1,-2,-3]]],47,37,22],[[[68,[-1,-2,-3]]],[[68,[-1,-2,-3]]],47,37,22],[[[71,[-1]]],[[71,[-1]]],28],[[[73,[-1]]],[[73,[-1]]],[37,28]],[[[21,[-1]]],[[21,[-1]]],[37,28]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[49,49],29],[[48,48],29],[[[70,[-1,-2,-3]],[70,[-1,-2,-3]]],29,47,37,22],[[[68,[-1,-2,-3]],[68,[-1,-2,-3]]],29,47,37,22],[[[71,[-1]],[71,[-1]]],29,57],[[[73,[-1]],[73,[-1]]],29,[37,57]],[[[21,[-1]],[21,[-1]]],29,[37,57]],[[[70,[48,-1,-2]],11],18,37,22],[[[72,[-1,-2,-3]],[68,[-4,-5,-3]]],11,47,37,22,47,37],[[[68,[49,-1,-2]],[68,[48,-3,-4]],30],18,37,22,37,22],[[[68,[48,-1,-2]],[68,[49,-3,-4]],30],18,37,22,37,22],[[[68,[48,-1,-2]],[68,[49,-3,-4]],30],18,37,22,37,22],[[[68,[49,-1,-2]],[68,[48,-3,-4]],30],18,37,22,37,22],[[[68,[-1,-2,-3]],[68,[48,-4,-5]],30],18,47,37,22,37,22],[[[68,[-1,-2,-3]],[68,[48,-4,-5]],30],18,47,37,22,37,22],[[[72,[-1,-2,-3]]],30,47,37,22],[[],49],[[],48],[[],[[72,[-1,-2,-3]]],47,37,22],[[[70,[-1,-2,-3]]],-4,47,37,22,[]],[[[70,[48,-1,-2]]],-3,37,22,[]],[[[70,[-1,-2,-3]]],18,47,37,22],[[[68,[48,-1,-2]]],18,37,22],[[[68,[48,-1,-2]]],18,37,22],0,[[[72,[-1,-2,-3]]],[[74,[[68,[-1,-2,-3]]]]],47,37,22],[[[68,[49,-1,-2]],[68,[49,-3,-2]]],11,37,22,37],[[49,49],11],[[48,48],11],[[[70,[-1,-2,-3]],[70,[-4,-5,-6]]],11,47,37,22,47,37,22],[[[70,[-1,-2,-3]],11],11,47,37,22],[[[70,[-1,-2,-3]],11],11,47,37,22],[[[72,[-1,-2,-3]],[72,[-4,-5,-3]]],11,47,37,22,47,37],[[[68,[-1,-2,-3]],[68,[-4,-5,-3]]],11,47,37,22,47,37],[[[71,[-1]],[71,[-1]]],11,39],[[[73,[-1]],[73,[-1]]],11,[37,39]],[[[21,[-1]],[21,[-1]]],11,[37,39]],[[49,5],[[19,[18,75]]]],[[48,5],[[19,[18,75]]]],[[[70,[-1,-2,-3]],5],6,47,37,22],[[[70,[-1,-2,-3]],5],6,47,37,22],[[[70,[-1,-2,-3]],5],6,47,37,22],[[[72,[-1,-2,-3]],5],6,47,37,22],[[[68,[-1,-2,-3]],5],6,47,37,22],[[[68,[-1,-2,-3]],5],6,47,37,22],[[[71,[-1]],5],6,[]],[[[71,[-1]],5],6,[]],[[[73,[-1]],5],6,[37,76]],[[[73,[-1]],5],6,37],[[[21,[-1]],5],6,37],[[[21,[-1]],5],6,37],[47,[[77,[47]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[78,[[68,[-1,-2,-3]]]]],[[72,[-1,-2,-3]]],47,37,22],[-1,-1,[]],[-1,[[68,[48,-1,-2]]],37,22],[-1,[[68,[49,-1,-2]]],37,22],[-1,-1,[]],[[[71,[-1]]],[[73,[-1]]],37],[-1,-1,[]],[79,[[73,[-1]]],37],[[[71,[-1]]],[[21,[-1]]],37],[-1,-1,[]],[[[73,[-1]]],[[21,[-1]]],37],[[[68,[-1,-2,-3]]],[[70,[-1,-2,-3]]],47,37,22],[-1,[[68,[48,-1,-2]]],37,22],[[[1,[-1]]],[[68,[48,-1,-2]]],37,22],[[[78,[[68,[-1,-2,-3]]]]],[[72,[-1,-2,-3]]],47,37,22],[-1,[[68,[49,-1,-2]]],37,22],[[[1,[-1]]],[[68,[49,-1,-2]]],37,22],[[[1,[-1]]],[[68,[48,-1,-2]]],37,22],[[[68,[49,-1,-2]],-3],18,37,22,32],[[49,-1],18,32],[[48,-1],18,32],[[[70,[-1,-2,-3]],-4],18,47,37,22,32],[[[72,[-1,-2,-3]],-4],18,47,37,22,32],[[[68,[-1,-2,-3]],-4],18,47,37,22,32],[[[71,[-1]],-2],18,59,32],[[[73,[-1]],-2],18,[37,59],32],[[[21,[-1]],-2],18,[37,59],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[70,[-1,-2,-3]]],[[68,[-1,-2,-3]]],47,37,22],[-1,-2,[],[]],[[[72,[-1,-2,-3]]],[[78,[[68,[-1,-2,-3]]]]],47,37,22],[[[72,[-1,-2,-3]]],11,47,37,22],[[[68,[-1,-2,-3]]],11,47,37,22],[[[72,[-1,-2,-3]]],[[33,[-4]]],47,37,22,[]],[[[72,[-1,-2,-3]]],30,47,37,22],[[[69,[-1,-2]],24],[[19,[[68,[-1,-2,-3]],[71,[-2]]]]],47,37,22],[[[69,[-1,-2]],24],[[68,[-1,-2,-3]]],47,37,22],[[[72,[-1,-2,-3]]],[[33,[-4]]],47,37,22,[]],[[[72,[-1,-2,-3]]],[[33,[-4]]],47,37,22,[]],[[[70,[-1,-2,-3]]],-4,47,37,22,[]],[[[72,[-1,-2,-3]],30],[[33,[-4]]],47,37,22,[]],[[[72,[-1,-2,-3]],30],[[33,[-4]]],47,37,22,[]],[[],[[68,[49,-1,-2]]],37,22],[[],[[68,[48,-1,-2]]],37,22],[[[68,[-1,-2,-3]],80],[[68,[-1,-2,-3]]],47,37,22],[[[68,[-1,-2,-3]],[68,[-1,-4,-3]]],80,47,37,22,[[37,[],[[12,[]]]]]],[[49,49],[[33,[29]]]],[[48,48],[[33,[29]]]],[[[70,[-1,-2,-3]],[70,[-4,-5,-6]]],[[33,[29]]],47,37,22,47,37,22],[[[70,[-1,-2,-3]],11],[[33,[29]]],47,37,22],[[[70,[-1,-2,-3]],11],[[33,[29]]],47,37,22],[[[68,[-1,-2,-3]],[68,[-4,-5,-3]]],[[33,[29]]],47,37,22,47,37],[[[71,[-1]],[71,[-1]]],[[33,[29]]],44],[[[73,[-1]],[73,[-1]]],[[33,[29]]],[37,44]],[[[21,[-1]],[21,[-1]]],[[33,[29]]],[37,44]],[[[68,[49,-1,-2]]],[],37,22],[[[68,[48,-1,-2]]],[],37,22],[[[68,[-1,-2,-3]]],[[18,[[69,[-1,-2]],24]]],47,37,22],[[[68,[49,-1,-2]]],11,37,22],[[[68,[-1,-2,-3]]],11,47,37,22],[[[68,[49,-1,-2]]],11,37,22],[[[68,[-1,-2,-3]]],11,47,37,22],[[[68,[49,-1,-2]]],11,37,22],[[[68,[-1,-2,-3]]],11,47,37,22],[[[68,[48,-1,-2]],11],11,37,22],[[[70,[48,-1,-2]],11],11,37,22],[[[68,[48,-1,-2]],11],11,37,22],[[[70,[48,-1,-2]],11],18,37,22],[[[72,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],47,37,22],[[[68,[49,-1,-2]],30],20,37,22],[[[68,[48,-1,-2]],30],20,37,22],0,[[[72,[-1,-2,-3]]],[[74,[[68,[-1,-2,-3]]]]],47,37,22],[[[68,[-1,-2,-3]],30],[[68,[-1,-2,-3]]],47,37,22],[[[68,[48,-1,-2]],[68,[48,-3,-4]]],18,37,22,37,22],[[[70,[48,-1,-2]],[70,[48,-3,-4]]],18,37,22,37,22],[[[68,[48,-1,-2]],[68,[48,-3,-4]]],18,37,22,37,22],[[[68,[48,-1,-2]],[68,[48,-3,-4]],30],18,37,22,37,22],[[[77,[47]]],47],[[[68,[-1,-2,-3]]],[[68,[49,-2,-3]]],47,37,22],[[[68,[-1,-2,-3]]],[[68,[48,-2,-3]]],47,37,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[68,[-1,-2,-3]]],[[18,[[69,[-1,-2]],24]]],47,37,22],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[],[[19,[[68,[49,-1,-2]],-3]]],37,22,[]],[[],[[19,[[68,[48,-1,-2]],-3]]],37,22,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[[68,[-1,-2,-3]],30],[[68,[-1,-2,-3]]],47,37,22],[[[68,[-1,-2,-3]],80],[[68,[-1,-2,-3]]],47,37,22],[[[68,[-1,-2,-3]],30],[[68,[-1,-2,-3]]],47,37,22],[[[68,[48,-1,-2]],11],18,37,22],[[[68,[48,-1,-2]],11],18,37,22],[[[68,[48,-1,-2]],11,30],18,37,22],[[[68,[48,-1,-2]],11,30],18,37,22],[[[68,[48,-1,-2]],11],18,37,22],[[[68,[48,-1,-2]],11],18,37,22],[[[68,[48,-1,-2]],11],18,37,22],[[[68,[48,-1,-2]],11],18,37,22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[20,[-1,-2]]],[[18,[[20,[-1,-2]],[20,[-3,-2]],[20,[-1,-2]]]]],37,22,37],[[[20,[-1,-2]]],[[18,[[20,[-1,-2]],[20,[-3,-2]],[20,[-1,-2]]]]],37,22,37],[[[20,[-1,-2]]],11,37,22],[[[20,[-1,-2]]],11,37,22],[[[20,[-1,-2]]],[[68,[49,-1,-2]]],37,22],[[[20,[-1,-2]]],[[72,[49,-1,-2]]],37,22],[[[81,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[82,[-1,-2]]],[[20,[-2]]],37,22],[[[20,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[20,[-1,-2]]],[[68,[48,-1,-2]]],37,22],[[[20,[-1,-2]]],[[72,[48,-1,-2]]],37,22],[[[20,[-1,-2]]],[[68,[48,-1,-2]]],37,22],[[[20,[-1,-2]]],[[78,[[68,[48,-1,-2]]]]],37,22],[[[20,[-1,-2]]],[[68,[49,-1,-2]]],37,22],[[[20,[-1,-2]]],[[78,[[68,[49,-1,-2]]]]],37,22],[[[81,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[82,[-1,-2]]],[[20,[-2]]],37,22],[[[20,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[81,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[82,[-1,-2]]],[[20,[-2]]],37,22],[[[20,[-1,-2]]],[[50,[49,-1,-2]]],37,22],[[[20,[-1,-2]]],[[50,[48,-1,-2]]],37,22],[[[20,[-1,-2]],[20,[-3,-4]]],18,37,22,37,22],[[[20,[-1,-2]],[38,[-1,-2]]],18,37,22],[[[20,[-1]],[25,[-2,-1]]],18,22,26],[[[20,[-1]],[25,[-2,-1]]],18,22,26],[[[20,[-1,-2]],[38,[-1,-2]]],18,37,22],[[[20,[-1,-2]],[40,[-1,-2]]],18,37,22],[[[20,[-1,-2]],[40,[-1,-2]]],18,37,22],[[[20,[-1,-2]],[40,[-1,-2]]],18,37,22],[[[20,[-1,-2]],[40,[-1,-2]]],18,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],18,37,22,37,22],[[[20,[-1]],[25,[-2,-1]]],18,22,26],[[[20,[-1]],[25,[-2,-1]]],18,22,26],[[[20,[-1,-2]],[38,[-1,-2]]],18,37,22],[[[20,[-1,-2]],[38,[-1,-2]]],18,37,22],[[[20,[-1]],[25,[-2,-1]]],18,22,26],[[[20,[-1,-2]],[40,[-1,-2]]],18,37,22],[[[20,[-1,-2]],[38,[-1,-2]]],18,37,22],[[[20,[-1,-2]],[38,[-1,-2]]],18,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],18,37,22,37,22],[[[20,[-1]],[25,[-2,-1]]],18,22,26],[[[20,[-1,-2]],[40,[-1,-2]]],18,37,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[81,[-1,-2]]],[[83,[-1,-2]]],37,22],[[[81,[-1,-2]]],[[84,[-1,-2]]],37,22],[[[20,[-1,-2]],30],[[85,[-1,-2]]],37,22],[[[20,[-1,-2]],30],[[86,[-1,-2]]],37,22],[[[20,[-1,-2]],30],[[87,[-1,-2]]],37,22],[[[20,[-1,-2]],30],[[88,[-1,-2]]],37,22],[[[81,[-1,-2]]],[[81,[-1,-2]]],37,22],[[[89,[-1,-2]]],[[89,[-1,-2]]],[37,28],[22,28]],[[[85,[-1,-2]]],[[85,[-1,-2]]],[37,28],[22,28]],[[[86,[-1,-2]]],[[86,[-1,-2]]],[37,28],[22,28]],[[[90,[-1,-2]]],[[90,[-1,-2]]],[37,28],[22,28]],[[[91,[-1,-2]]],[[91,[-1,-2]]],[37,28],[22,28]],[[[92,[-1,-2,-3]]],[[92,[-1,-2,-3]]],[37,28],[22,28],[[94,[30,11],[[93,[11]]]],28]],[[[95,[-1,-2,-3]]],[[95,[-1,-2,-3]]],[37,28],[22,28],[[94,[30,11],[[93,[11]]]],28]],[[[96,[-1,-2,-3]]],[[96,[-1,-2,-3]]],[37,28],[22,28],[[94,[30,11],[[93,[11]]]],28]],[[[97,[-1,-2,-3]]],[[97,[-1,-2,-3]]],[37,28],[22,28],[[94,[30,11],[[93,[11]]]],28]],[[[98,[-1,-2,-3]]],[[98,[-1,-2,-3]]],[37,28],[22,28],[[94,[30,11],[[93,[11]]]],28]],[[[99,[-1,-2]]],[[99,[-1,-2]]],[37,28],[22,28]],[[[100,[-1,-2]]],[[100,[-1,-2]]],[37,28],[22,28]],[[[20,[-1,-2]],[20,[-3,-4]]],18,37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],18,37,22,37,22],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[[20,[-1,-2]],[20,[-1,-2]]],29,37,22],[[[99,[-1,-2]],[99,[-1,-2]]],29,[37,57],[22,57]],[[[100,[-1,-2]],[100,[-1,-2]]],29,[37,57],[22,57]],[[[20,[-1,-2]],[20,[-3,-4]]],11,37,22,37,22],[[[81,[-1,-2]]],[[84,[-1,-2]]],37,22],[[[20,[-1,-2]],[20,[-1,-2]]],18,37,22],[[[20,[-1,-2]],[20,[-1,-2]]],18,37,22],[[[20,[-1,-2]],-3,30],18,37,22,[[101,[30]]]],[[[20,[-1,-2]],-3,30],18,37,22,[[101,[30]]]],[[[81,[-1,-2]]],30,37,22],[[[82,[-1,-2]]],30,37,22],[[[84,[-1,-2]]],30,37,22],[[[89,[-1,-2]]],30,37,22],[[[85,[-1,-2]]],30,37,22],[[[88,[-1,-2]]],30,37,22],[[[86,[-1,-2]]],30,37,22],[[[87,[-1,-2]]],30,37,22],[[[90,[-1,-2]]],30,37,22],[[[102,[-1,-2]]],30,37,22],[[[91,[-1,-2]]],30,37,22],[[[103,[-1,-2]]],30,37,22],[[[99,[-1,-2]]],30,37,22],[[[100,[-1,-2]]],30,37,22],[[[104,[-1,-2]]],30,37,22],[[[105,[-1,-2]]],30,37,22],[[[106,[-1,-2]]],30,37,22],[[[107,[-1,-2]]],30,37,22],[[[108,[-1,-2]]],30,37,22],[[[109,[-1,-2,-3]]],30,37,22,[[94,[30,11],[[93,[11]]]]]],[[[110,[-1,-2,-3]]],30,37,22,[[94,[30,11],[[93,[11]]]]]],[[[111,[-1,-2,-3]]],30,37,22,[[94,[30,11],[[93,[11]]]]]],[[[112,[-1,-2,-3]]],30,37,22,[[94,[30,11],[[93,[11]]]]]],[[[113,[-1,-2,-3]]],30,37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]]],30,37,22],[[[20,[-1,-2]]],30,37,22],[[],[[20,[-1,-2]]],37,22],[[],[[20,[-1,-2]]],37,22],[[],[[99,[-1,-2]]],37,22],[[],[[100,[-1,-2]]],37,22],[[[20,[-1,-2]]],[[51,[49,-1,-2]]],37,22],[[[20,[-1,-2]]],[[51,[48,-1,-2]]],37,22],[[],[[20,[-1,-2]]],37,22],[[],[[20,[-1,-2]]],37,22],[[[20,[-1,-2]],[20,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[38,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[40,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[40,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[38,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[25,[-3,-4]]],11,37,22,26,22],[[[20,[-1,-2]],[40,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[38,[-3,-4]]],11,37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],11,37,22,37,22],[[[99,[-1,-2]],[99,[-1,-2]]],11,[37,39],[22,39]],[[[100,[-1,-2]],[100,[-1,-2]]],11,[37,39],[22,39]],[[[20,[-1,-2]],11],18,37,22],[[[20,[-1,-2]],-3],18,37,22,[[94,[30],[[93,[11]]]]]],[[[20,[-1,-2]]],[[33,[[70,[49,-1,-2]]]]],37,22],[[[20,[-1,-2]]],[[33,[[70,[48,-1,-2]]]]],37,22],[[[20,[-1,-2]]],[[33,[30]]],37,22],[[[20,[-1,-2]]],[[33,[30]]],37,22],[[[81,[-1,-2]],5],6,37,22],[[[82,[-1,-2]],5],6,37,22],[[[114,[-1,-2,-3]],5],6,37,22,[[94,[30,11],[[93,[11]]]]]],[[[115,[-1,-2,-3]],5],6,37,22,[[94,[30,11],[[93,[11]]]]]],[[[116,[-1,-2,-3]],5],6,37,22,[[94,[30,11],[[93,[11]]]]]],[[[117,[-1,-2,-3]],5],6,37,22,[[94,[30,11],[[93,[11]]]]]],[[[118,[-1,-2,-3]],5],6,37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]],5],6,37,22],[[[20,[-1,-2]],5],6,37,22],[[[20,[-1,-2]],5],6,37,22],[[[20,[-1,-2]],5],6,37,22],[[[20,[-1,-2]],5],6,37,22],[[[20,[-1,-2]],5],6,37,22],[[[20,[-1,-2]],5],6,37,22],[[[89,[-1,-2]],5],6,[37,76],[22,76]],[[[85,[-1,-2]],5],6,[37,76],[22,76]],[[[88,[-1,-2]],5],6,[37,76],[22,76]],[[[86,[-1,-2]],5],6,[37,76],[22,76]],[[[87,[-1,-2]],5],6,[37,76],[22,76]],[[[90,[-1,-2]],5],6,[37,76],[22,76]],[[[102,[-1,-2]],5],6,[37,76],[22,76]],[[[91,[-1,-2]],5],6,[37,76],[22,76]],[[[103,[-1,-2]],5],6,[37,76],[22,76]],[[[92,[-1,-2,-3]],5],6,37,22,[[94,[30,11],[[93,[11]]]]]],[[[95,[-1,-2,-3]],5],6,37,22,[[94,[30,11],[[93,[11]]]]]],[[[96,[-1,-2,-3]],5],6,37,22,[[94,[30,11],[[93,[11]]]]]],[[[97,[-1,-2,-3]],5],6,37,22,[[94,[30,11],[[93,[11]]]]]],[[[98,[-1,-2,-3]],5],6,37,22,[[94,[30,11],[[93,[11]]]]]],[[[99,[-1,-2]],5],6,[37,76],[22,76]],[[[100,[-1,-2]],5],6,[37,76],[22,76]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[20,[-1,-2]]],37,22],[-1,[[20,[-1,-2]]],37,22],[-1,[[20,[-1,-2]]],37,22],[[[68,[49,-1,-2]],30],[[19,[[20,[-1,-2]],[21,[-1]]]]],37,22],[[[68,[48,-1,-2]],30],[[19,[[20,[-1,-2]],[21,[-1]]]]],37,22],[[[68,[49,-1,-2]],30],[[20,[-1,-2]]],37,22],[[[68,[48,-1,-2]],30],[[20,[-1,-2]]],37,22],[-1,[[20,[-1,-2]]],37,22],[[[1,[-1]]],[[20,[-1,-2]]],37,22],[[[1,[-1]]],[[20,[-1,-2]]],37,22],[[[1,[-1]]],[[20,[-1,-2]]],37,22],[[[1,[-1]]],[[20,[-1,-2]]],37,22],[[[121,[],[[119,[-1]],[120,[-2]]]],[20,[-3,-4]]],[[33,[-1]]],[],[],37,22],[[[20,[-1,-2]],-3],33,37,22,[[121,[-1,-2]]]],[[[121,[],[[119,[-1]],[120,[-2]]]],[20,[-3,-4]]],[[33,[-2]]],[],[],37,22],[[[20,[-1,-2]],-3],33,37,22,[[121,[-1,-2]]]],[[[121,[],[[119,[-1]],[120,[-2]]]],[20,[-3,-4]]],-1,[],[],37,22],[[[20,[-1,-2]],-3],[],37,22,[[121,[-1,-2]]]],[[[121,[],[[119,[-1]],[120,[-2]]]],[20,[-3,-4]]],-2,[],[],37,22],[[[20,[-1,-2]],-3],[],37,22,[[121,[-1,-2]]]],[[[20,[-1,-2]],-3],18,37,22,32],[[[121,[],[[119,[-1]],[120,[-2]]]],[20,[-3,-4]]],-1,[],[],37,22],[[[20,[-1,-2]],[122,[30]]],-3,37,22,[]],[[[20,[-1,-2]],[123,[30]]],-3,37,22,[]],[[[20,[-1,-2]],[78,[30]]],-3,37,22,[]],[[[20,[-1,-2]],[124,[30]]],-3,37,22,[]],[[[20,[-1,-2]],30],-3,37,22,[]],[[[20,[-1,-2]],125],-3,37,22,[]],[[[20,[-1,-2]],[126,[30]]],-3,37,22,[]],[[[121,[],[[119,[-1]],[120,[-2]]]],[20,[-3,-4]]],-2,[],[],37,22],[[[20,[-1,-2]],125],-3,37,22,[]],[[[20,[-1,-2]],[126,[30]]],-3,37,22,[]],[[[20,[-1,-2]],[78,[30]]],-3,37,22,[]],[[[20,[-1,-2]],[123,[30]]],-3,37,22,[]],[[[20,[-1,-2]],[124,[30]]],-3,37,22,[]],[[[20,[-1,-2]],[122,[30]]],-3,37,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[82,[-1,-2]]],[[20,[-2]]],37,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1,-2]]],-3,37,22,[]],[[[20,[-1,-2]]],-3,37,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[87,[-1,-2]]],[[20,[-2]]],37,22],[[[103,[-1,-2]]],[[20,[-2]]],37,22],[[[106,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[108,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[82,[-1,-2]]],[[20,[-2]]],37,22],[[[20,[-1,-2]]],11,37,22],[[[20,[-1,-2]]],[[81,[-1,-2]]],37,22],[[[20,[-1,-2]]],[[82,[-1,-2]]],37,22],[[[20,[-1,-2]]],[[99,[-1,-2]]],37,22],[[[20,[-1,-2]]],[[100,[-1,-2]]],37,22],[[[81,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[82,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[84,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[20,[-1,-2]]],[[33,[[70,[49,-1,-2]]]]],37,22],[[[89,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[85,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[88,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[86,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[87,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[90,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[102,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[91,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[103,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[99,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[100,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[104,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[105,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[106,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[107,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[108,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[109,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[110,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[111,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[112,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[113,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[20,[-1,-2]]],[[33,[[70,[48,-1,-2]]]]],37,22],[[[20,[-1,-2]]],[[33,[30]]],37,22],[[[20,[-1,-2]]],[[33,[30]]],37,22],[[[20,[-1,-2]]],30,37,22],[[[20,[-1,-2]]],30,37,22],[[[81,[-1,-2]]],30,37,22],[[[82,[-1,-2]]],30,37,22],[[[84,[-1,-2]]],30,37,22],[[[20,[-1,-2]]],30,37,22],[[[89,[-1,-2]]],30,37,22],[[[85,[-1,-2]]],30,37,22],[[[88,[-1,-2]]],30,37,22],[[[86,[-1,-2]]],30,37,22],[[[87,[-1,-2]]],30,37,22],[[[90,[-1,-2]]],30,37,22],[[[102,[-1,-2]]],30,37,22],[[[91,[-1,-2]]],30,37,22],[[[103,[-1,-2]]],30,37,22],[[[99,[-1,-2]]],30,37,22],[[[100,[-1,-2]]],30,37,22],[[[104,[-1,-2]]],30,37,22],[[[105,[-1,-2]]],30,37,22],[[[106,[-1,-2]]],30,37,22],[[[107,[-1,-2]]],30,37,22],[[[108,[-1,-2]]],30,37,22],[[[109,[-1,-2,-3]]],30,37,22,[[94,[30,11],[[93,[11]]]]]],[[[110,[-1,-2,-3]]],30,37,22,[[94,[30,11],[[93,[11]]]]]],[[[111,[-1,-2,-3]]],30,37,22,[[94,[30,11],[[93,[11]]]]]],[[[112,[-1,-2,-3]]],30,37,22,[[94,[30,11],[[93,[11]]]]]],[[[113,[-1,-2,-3]]],30,37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,66]]],-2,37,34],[[[20,[-1,65]]],-2,37,34],[[[20,[-1,66]]],-2,37,34],[[[20,[-1,65]]],-2,37,34],[[[81,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[82,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[84,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[114,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[115,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[116,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[117,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[118,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[89,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[85,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[88,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[86,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[87,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[90,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[102,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[91,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[103,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[92,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[95,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[96,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[97,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[98,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[99,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[100,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[104,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[105,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[106,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[107,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[108,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[109,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[110,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[111,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[112,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[113,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[81,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[82,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[84,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[114,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[115,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[116,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[89,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[85,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[88,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[86,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[87,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[90,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[102,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[91,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[103,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[92,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[95,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[96,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[99,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[100,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[104,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[105,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[106,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[107,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[108,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[109,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[110,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[111,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[112,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[113,[-1,-2,-3]]],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[20,[-1,-2]]],-3,37,22,[]],[[[20,[-1,-2]]],11,37,22],[[[20,[-1,-2]]],11,37,22],[[[81,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[82,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[84,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[89,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[85,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[88,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[86,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[87,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[90,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[102,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[91,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[103,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[104,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[105,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[106,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[107,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[108,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[109,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[110,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[111,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[112,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[113,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[81,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[82,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[84,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[89,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[85,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[88,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[86,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[87,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[90,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[102,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[91,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[103,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[104,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[105,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[106,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[107,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[108,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[109,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[110,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[111,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[112,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[113,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[94,[30,11],[[93,[11]]]]],[]],[[[20,[-1,-2]],[20,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[40,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[25,[-3,-2]]],[[33,[29]]],37,22,26],[[[20,[-1,-2]],[20,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[38,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[40,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[38,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[40,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[38,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],[[33,[29]]],37,22,37,22],[[[99,[-1,-2]],[99,[-1,-2]]],[[33,[29]]],[37,44],[22,44]],[[[100,[-1,-2]],[100,[-1,-2]]],[[33,[29]]],[37,44],[22,44]],[[[20,[-1,-2]],30],[[90,[-1,-2]]],37,22],[[[20,[-1,-2]],30],[[91,[-1,-2]]],37,22],[[[20,[-1,-2]],30],[[103,[-1,-2]]],37,22],[[[20,[-1,-2]],30],[[102,[-1,-2]]],37,22],[[[86,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[91,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[82,[-1,-2]]],[[104,[-1,-2]]],37,22],[[[114,[-1,-2,-3]]],[[109,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[115,[-1,-2,-3]]],[[110,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[116,[-1,-2,-3]]],[[111,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[117,[-1,-2,-3]]],[[112,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[118,[-1,-2,-3]]],[[113,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[88,[-1,-2]]],[[105,[-1,-2]]],37,22],[[[87,[-1,-2]]],[[106,[-1,-2]]],37,22],[[[102,[-1,-2]]],[[107,[-1,-2]]],37,22],[[[103,[-1,-2]]],[[108,[-1,-2]]],37,22],[[[20,[-1,-2]],30],[[40,[-2]]],37,22],[[[20,[-1,-2]],30,11],11,37,22],[[[20,[-1,-2]],30,11],11,37,22],[[[20,[-1,-2]]],18,37,22],[[[20,[-1,-2]],30],18,37,22],[[[20,[-1,-2]],30],18,37,22],[[[20,[-1,-2]],-3],[[96,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]],-3],[[116,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]],30,-3],[[98,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]],30,-3],[[118,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]],30,11],18,37,22],[[[20,[-1,-2]],30,11],18,[37,17],22],[[[20,[-1,-2]],30,11],18,[37,17],22],[[[20,[-1,-2]],30,11],18,37,22],[[[20,[-1,-2]],30],18,37,22],[[[20,[-1,-2]],30],18,37,22],[[[81,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[82,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[84,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[114,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[115,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[116,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[117,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[118,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[89,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[85,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[88,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[86,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[87,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[90,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[102,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[91,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[103,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[92,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[95,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[96,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[97,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[98,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[99,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[100,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[104,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[105,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[106,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[107,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[108,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[109,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[110,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[111,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[112,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[113,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]]],11,37,22],[[[20,[-1,-2]],-3],[[92,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]],30],[[18,[[20,[-1,-2]],[20,[-1,-2]]]]],37,22],[[[20,[-1,-2]],30],[[18,[[20,[-2]],[20,[-2]]]]],37,22],[[[20,[-1,-2]],30],[[18,[[20,[-1,-2]],[20,[-1,-2]]]]],37,22],[[[20,[-1,-2]],30],[[18,[[20,[-2]],[20,[-2]]]]],37,22],[[[20,[-1,-2]]],[[33,[[18,[[70,[49,-1,-2]],[20,[-1,-2]]]]]]],37,22],[[[20,[-1,-2]]],[[33,[[18,[[70,[48,-2]],[20,[-2]]]]]]],37,22],[[[20,[-1,-2]],-3],[[95,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]],-3],[[115,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]]],[[33,[[18,[[70,[49,-1,-2]],[20,[-1,-2]]]]]]],37,22],[[[20,[-1,-2]]],[[33,[[18,[[70,[48,-2]],[20,[-2]]]]]]],37,22],[[[20,[-1,-2]],-3],[[114,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]],30,-3],[[97,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]],30,-3],[[117,[-1,-2,-3]]],37,22,[[94,[30,11],[[93,[11]]]]]],[[[20,[-1,-2]],[20,[-3,-4]]],11,37,22,37,22],[[[20,[-1,65]],-2],18,37,34],[[[20,[-1,66]],-2],18,37,34],[[[20,[-1,66]],-2],18,37,34],[[[20,[-1,65]],-2],18,37,34],[[[20,[-1,-2]],[20,[-3,-4]]],[[33,[[20,[-1,-2]]]]],37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],[[33,[[20,[-1,-2]]]]],37,22,37,22],[[[20,[-1,-2]],30,30],18,37,22],[[[20,[-1,-2]],30,30],18,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],18,37,22,37,22],[[[20,[-1,-2]],[20,[-3,-4]]],18,37,22,37,22],[[[87,[-1,-2]]],[[20,[-2]]],37,22],[[[103,[-1,-2]]],[[20,[-2]]],37,22],[[[106,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[108,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[20,[-1,-2]]],[[40,[-2]]],37,22],[-1,-2,[],[]],[[[20,[-1,-2]]],-3,37,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[[[20,[-1,-2]]],[[40,[-2]]],37,22],[[[20,[-1,-2]]],30,37,22],[[[20,[-1,-2]]],30,37,22],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[1,[-1]]],[[19,[[20,[-1,-2]],-3]]],37,22,[]],[[[1,[-1]]],[[19,[[20,[-1,-2]],-3]]],37,22,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[1,[-1]]],[[19,[[20,[-1,-2]],[21,[-1]]]]],37,22],[[[1,[-1]]],[[19,[[20,[-1,-2]],[21,[-1]]]]],37,22],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[[20,[-1,-2]],30],[[89,[-1,-2]]],37,22],0,0,0,0,0,0,0,0,[[[37,[],[[12,[-1]],[127,[-2]],[128,[-3]],[129,[-4]]]],[24,[-1]]],11,[15,[37,[],[[12,[-1]]]]],[[2,[],[[16,[-1]]]],[37,[],[[12,[-1]]]]],[[37,[],[[12,[-1]]]]],[[37,[],[[12,[-1]]]]]],[[[37,[],[[12,[-1]],[127,[-2]],[128,[-3]],[129,[-4]]]]],-1,[15,[37,[],[[12,[-1]]]]],[[2,[],[[16,[-1]]]],[37,[],[[12,[-1]]]]],[[37,[],[[12,[-1]]]]],[[37,[],[[12,[-1]]]]]],[-1,[[37,[],[[12,[-1]],[127,[-2]],[128,[-3]],[129,[-4]]]]],[15,[37,[],[[12,[-1]]]]],[[2,[],[[16,[-1]]]],[37,[],[[12,[-1]]]]],[[37,[],[[12,[-1]]]]],[[37,[],[[12,[-1]]]]]],[[[37,[],[[12,[-1]],[127,[-2]],[128,[-3]],[129,[-4]]]],-1],18,[15,[37,[],[[12,[-1]]]]],[[2,[],[[16,[-1]]]],[37,[],[[12,[-1]]]]],[[37,[],[[12,[-1]]]]],[[37,[],[[12,[-1]]]]]],0,0,0,0,0,[[[40,[-1,-2]],[40,[-3,-4]]],18,37,22,37,22],[[[40,[-1,-2]]],[[68,[49,-1,-2]]],37,22],[[[130,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[40,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[40,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[40,[-1,-2]]],[[40,[-1,-2]]],37,22],[[[40,[-1,-2]]],[[68,[48,-1,-2]]],37,22],[[[40,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[40,[-1,-2]]],[[68,[48,-1,-2]]],37,22],[[[40,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[40,[-1,-2]]],[[68,[49,-1,-2]]],37,22],[[[40,[-1,-2]]],[[1,[-1]]],37,22],[[[40,[-1,-2]]],[[1,[-1]]],37,22],[[[130,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[40,[-1,-2]]],[[40,[-1,-2]]],37,22],[[[40,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[130,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[40,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[40,[-1,-2]],-3],-4,37,22,[],[]],[[[40,[-1,-2]],-3],18,37,22,[]],[[[40,[-1,-2]],-3],-4,37,22,[],[]],[[[40,[-1,-2]],-3],18,37,22,[]],[[[40,[-1,-2]],-3],-4,37,22,[],[]],[[[40,[-1,-2]],-3],18,37,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[40,[-1,-2]]],[[20,[-1,-2]]],37,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[40,[-1,-2]]],[[20,[-1,-2]]],37,22],[-1,-2,[],[]],[[[40,[-1,-2]]],30,37,22],[[[40,[-1,-2]]],18,37,22],[[[40,[-1,-2]]],[[40,[-1,-2]]],37,22],[[-1,-2],18,[],[]],[[[40,[-1,-2]],[40,[-1,-2]]],29,37,22],[[[130,[-1,-2]]],30,37,22],[[[131,[-1,-2,-3]]],30,37,22,[[61,[],[[16,[11]]]]]],[[],[[40,[-1,-2]]],37,22],[[[40,[-1,-2]]],-3,37,22,[]],[[[40,[-1,-2]]],-3,37,22,[]],[[[40,[-1,-2]],-3],[[130,[-1,-2]]],37,22,[[132,[30]]]],[[[130,[-1,-2]]],18,37,22],[[[40,[-1,-2]]],18,37,22],[[[131,[-1,-2,-3]]],18,37,22,[[61,[],[[16,[11]]]]]],[[[40,[-1,-2]],-3],11,37,22,[31,[39,[[20,[-1,-2]]]]]],[[[40,[-1,-2]],-3],18,37,22,[[43,[],[[16,[11]]]]]],[[[40,[-1,-2]],-3],18,37,22,[[43,[],[[16,[-1]]]]]],[[[40,[-1,-2]],-3],18,37,22,[[43,[],[[16,[-1]]]]]],[[[40,[-1,-2]],-3],18,37,22,[[43,[],[[16,[11]]]]]],[[[40,[-1,-2]],-6],18,37,22,47,37,22,[[43,[],[[16,[[70,[-3,-4,-5]]]]]]]],[[[40,[-1,-2]],[20,[-3,-4]]],18,37,22,37,22],[[[40,[-1,-2]],[1,[-1]]],18,37,22],[[[40,[-1,-2]],[20,[-3,-4]]],18,37,22,37,22],[[[40,[-1,-2]],-3],18,37,22,[[101,[30]]]],[[[130,[-1,-2]],5],6,37,22],[[[40,[-1,-2]],5],6,37,22],[[[40,[-1,-2]],5],6,37,22],[[[40,[-1,-2]],5],6,37,22],[[[40,[-1,-2]],5],6,37,22],[[[40,[-1,-2]],5],6,37,22],[[[40,[-1,-2]],5],6,37,22],[[[40,[-1,-2]],5],6,37,22],[[[131,[-1,-2,-3]],5],6,[37,76],[22,76],[[61,[],[[16,[11]]]],76]],[[[40,[-1,-2]]],18,37,22],[-1,-1,[]],[-1,-1,[]],[[[42,[[20,[-1,-2]]]]],[[40,[-1,-2]]],37,22],[[[25,[-1,-2]]],[[40,[-2]]],26,22],[[[20,[-1,-2]]],[[40,[-1,-2]]],37,22],[[[20,[-1,-2]]],[[40,[-1,-2]]],37,22],[[[38,[-1,-2]]],[[40,[-1,-2]]],37,22],[-1,-1,[]],[[[20,[-1,-2]]],[[40,[-1,-2]]],37,22],[-1,[[40,[-1,-2]]],37,22],[-1,[[40,[-2,-3]]],[[43,[],[[16,[11]]]]],37,22],[-1,[[40,[-2,-3]]],[[43,[],[[16,[11]]]]],37,22],[-2,[[40,[-1,-3]]],37,[[43,[],[[16,[-1]]]]],22],[-4,[[40,[-5,-6]]],47,37,22,[[43,[],[[16,[[70,[-1,-2,-3]]]]]]],37,22],[-2,[[40,[-1,-3]]],37,[[43,[],[[16,[-1]]]]],22],[[[68,[48,-1,-2]],30,30],[[40,[-1,-2]]],37,22],[[[1,[-1]]],[[40,[-1,-2]]],37,22],[[[133,[-1]]],[[40,[-1,-2]]],37,22],[[[40,[-1,-2]],-3],18,37,22,32],[[[40,[-1,-2]],-3],-4,37,22,[],[]],[[[40,[-1,-2]],-3],-4,37,22,[],[]],[[[40,[-1,-2]],30,11],18,37,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[40,[-1,-2]]],[[38,[-1,-2]]],37,22],[[[40,[-1,-2]]],[[38,[-1,-2]]],37,22],[-1,-2,[],[]],[[[40,[-1,-2]]],-3,37,22,[]],[[[40,[-1,-2]]],-3,37,22,[]],[[[40,[-1,-2]]],-3,37,22,[]],[-1,-2,[],[]],[[[40,[-1,-2]]],[[18,[[68,[48,-1,-2]],30,30]]],37,22],[[[40,[-1,-2]]],[[133,[-1]]],37,22],[[[40,[-1,-2]]],11,37,22],[[[130,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[131,[-1,-2,-3]]],[[33,[-4]]],37,22,[[61,[],[[16,[11]]]]],[]],[[[40,[-1,-2]]],[[20,[-1,-2]]],37,22],[[[130,[-1,-2]]],30,37,22],[[[40,[-1,-2]]],30,37,22],[[[131,[-1,-2,-3]]],30,37,22,[[61,[],[[16,[11]]]]]],[[[40,[-1,-2]]],-3,37,22,34],[[[40,[-1,-2]]],-3,37,22,34],[[],[[40,[-1,-2]]],37,22],[[[130,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[131,[-1,-2,-3]]],[[33,[-4]]],37,22,[[61,[],[[16,[11]]]]],[]],[[[130,[-1,-2]]],[[33,[-3]]],37,22,[]],[[[131,[-1,-2,-3]]],[[33,[-4]]],37,22,[[61,[],[[16,[11]]]]],[]],[[[40,[-1,-2]]],-3,37,22,[]],[[[130,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[130,[-1,-2]],30],[[33,[-3]]],37,22,[]],[[[131,[-1,-2,-3]],30],[[33,[-4]]],37,22,[[61,[],[[16,[11]]]]],[]],[[[40,[-1,-2]],-3],[[33,[29]]],37,22,[31,[44,[[20,[-1,-2]]]]]],[[[40,[-1,-2]]],[[33,[11]]],37,22],[[[40,[-1,-2]],11],18,37,22],[[[40,[-1,-2]],30],11,37,22],[[11,30],[[40,[-1,-2]]],37,22],[[[40,[-1,-2]],30],18,37,22],[[[40,[-1,-2]],30],18,37,22],[[[40,[-1,-2]],30,11],18,37,22],[[[40,[-1,-2]],30,-3],18,37,22,[[94,[30],[[93,[11]]]]]],[[[40,[-1,-2]],-3],18,37,22,[[94,[30,11],[[93,[11]]]]]],[[[40,[-1,-2]]],18,37,22],[[[40,[-1,-2]],30],18,37,22],[[[40,[-1,-2]],11],18,37,22],[[[40,[-1,-2]]],18,37,22],[[[130,[-1,-2]]],[[18,[30,[33,[30]]]]],37,22],[[[131,[-1,-2,-3]]],[[18,[30,[33,[30]]]]],37,22,[[61,[],[[16,[11]]]]]],[[[40,[-1,-2]],-3,-4],[[131,[-1,-2]]],37,22,[[132,[30]]],[[43,[],[[16,[11]]]]]],[[[40,[-1,-2]],30],[[40,[-1,-2]]],37,22],[[[40,[-1,-2]],-3],18,37,22,34],[[[40,[-1,-2]],-3],18,37,22,34],[[[40,[-1,-2]],30],11,37,22],[-1,-2,[],[]],[-1,35,[]],[[[40,[-1,-2]],30],18,37,22],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[133,[-1]]],[[19,[[40,[-1,-2]],-3]]],37,22,[]],[-1,[[19,[-2]]],[],[]],[[[1,[-1]]],[[19,[[40,[-1,-2]],[21,[-1]]]]],37,22],[[[133,[-1]]],[[19,[[40,[-1,-2]],[133,[-1]]]]],37,22],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[30,[[40,[-1,-2]]],37,22],0,0,0,0,0,0,[134,[[20,[-1,-2]]],37,22],[135,[[20,[-1,-2]]],37,22],[26,[[1,[-1]]],[]],[26,[[1,[-1]]],[]],[26,[[25,[26,-1]]],22],[134,[[19,[[20,[-1,-2]],[21,[-1]]]]],37,22],[135,[[19,[[20,[-1,-2]],[21,[-1]]]]],37,22],[[[137,[],[[136,[-1]]]]],[[19,[[20,[-1,-2]],[21,[-1]]]]],37,22],[[[137,[],[[136,[-1]]]]],[[19,[[20,[-1,-2]],[21,[-1]]]]],37,22],[[[137,[],[[136,[-1]]]]],[[20,[-1,-2]]],37,22],[[[137,[],[[136,[-1]]]]],[[20,[-1,-2]]],37,22]],"c":[135,136,140,141,708,709,781,809,810,875,876,877,932,934,939,940,1054,1072,1074,1198,1203,1307,1590,1611,1747,1748,1749,1755,1756,1793,1831],"p":[[1,"slice"],[10,"BitAccess",20],[5,"BitMask",386],[5,"BitSafeU8",20],[5,"Formatter",1911],[8,"Result",1911],[5,"BitSafeU16",20],[5,"BitSafeU32",20],[5,"BitSafeU64",20],[5,"BitSafeUsize",20],[1,"bool"],[17,"Mem"],[17,"Rad"],[10,"BitSafe",20],[10,"BitRegister",546],[17,"Item"],[10,"Radium",1912],[1,"tuple"],[6,"Result",1913],[5,"BitSlice",880],[6,"BitSpanError",621],[10,"BitOrder",552],[5,"TypeId",1914],[5,"BitIdx",386],[5,"BitArray",126],[10,"BitViewSized",1894],[5,"IntoIter",126],[10,"Clone",1915],[6,"Ordering",1916],[1,"usize"],[10,"Sized",1917],[10,"Hasher",1918],[6,"Option",1919],[10,"Integral",1920],[5,"String",1921],[5,"IntoIter",214],[10,"BitStore",1722],[5,"BitBox",214],[10,"PartialEq",1916],[5,"BitVec",1734],[5,"Box",1922],[6,"Cow",1923],[10,"IntoIterator",1924],[10,"PartialOrd",1916],[5,"PartialElement",304],[5,"BitEnd",386],[10,"Mutability",621],[5,"Mut",621],[5,"Const",621],[6,"BitDomain",304],[6,"Domain",304],[8,"Reference",1925],[10,"BitField",379],[5,"BitIdxError",386],[5,"BitPos",386],[5,"BitSel",386],[10,"Ord",1916],[10,"Default",1926],[10,"Hash",1918],[1,"u8"],[10,"Iterator",1927],[10,"DoubleEndedIterator",1928],[10,"ExactSizeIterator",1929],[10,"FusedIterator",1930],[5,"Lsb0",552],[5,"Msb0",552],[10,"Into",1931],[5,"BitPtr",621],[5,"Address",1925],[5,"BitRef",621],[5,"MisalignError",621],[5,"BitPtrRange",621],[6,"BitPtrError",621],[6,"Bound",1932],[5,"Error",1911],[10,"Debug",1911],[5,"Frozen",1925],[5,"Range",1932],[5,"NullPtrError",1925],[1,"isize"],[5,"Iter",880],[5,"IterMut",880],[8,"BitRefIter",880],[5,"BitValIter",880],[5,"Chunks",880],[5,"ChunksExact",880],[5,"ChunksExactMut",880],[5,"ChunksMut",880],[5,"Windows",880],[5,"RChunks",880],[5,"RChunksExact",880],[5,"Split",880],[17,"Output"],[10,"FnMut",1933],[5,"SplitInclusive",880],[5,"RSplit",880],[5,"SplitN",880],[5,"RSplitN",880],[5,"IterOnes",880],[5,"IterZeros",880],[10,"RangeExt",1934],[5,"RChunksMut",880],[5,"RChunksExactMut",880],[5,"IterMutNoAlias",880],[5,"ChunksMutNoAlias",880],[5,"ChunksExactMutNoAlias",880],[5,"RChunksMutNoAlias",880],[5,"RChunksExactMutNoAlias",880],[5,"SplitMutNoAlias",880],[5,"SplitInclusiveMutNoAlias",880],[5,"RSplitMutNoAlias",880],[5,"SplitNMutNoAlias",880],[5,"RSplitNMutNoAlias",880],[5,"SplitMut",880],[5,"SplitInclusiveMut",880],[5,"RSplitMut",880],[5,"SplitNMut",880],[5,"RSplitNMut",880],[17,"Immut"],[17,"Mut"],[10,"BitSliceIndex",880],[5,"RangeTo",1932],[5,"RangeFrom",1932],[5,"RangeToInclusive",1932],[5,"RangeFull",1932],[5,"RangeInclusive",1932],[17,"Access"],[17,"Alias"],[17,"Unalias"],[5,"Drain",1734],[5,"Splice",1734],[10,"RangeBounds",1932],[5,"Vec",1935],[10,"AsBits",1894],[10,"AsMutBits",1894],[17,"Store"],[10,"BitView",1894],[15,"Region",373],[15,"Region",376]],"b":[[165,"impl-LowerHex-for-BitArray%3CA,+O%3E"],[166,"impl-Octal-for-BitArray%3CA,+O%3E"],[167,"impl-UpperHex-for-BitArray%3CA,+O%3E"],[168,"impl-Debug-for-BitArray%3CA,+O%3E"],[169,"impl-Binary-for-BitArray%3CA,+O%3E"],[170,"impl-Display-for-BitArray%3CA,+O%3E"],[181,"impl-IntoIterator-for-%26BitArray%3CA,+O%3E"],[182,"impl-IntoIterator-for-%26mut+BitArray%3CA,+O%3E"],[183,"impl-IntoIterator-for-BitArray%3CA,+O%3E"],[205,"impl-TryFrom%3C%26BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-%26BitArray%3CA,+O%3E"],[206,"impl-TryFrom%3C%26BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E"],[207,"impl-TryFrom%3C%26mut+BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-%26mut+BitArray%3CA,+O%3E"],[250,"impl-UpperHex-for-BitBox%3CT,+O%3E"],[251,"impl-Display-for-BitBox%3CT,+O%3E"],[252,"impl-Pointer-for-BitBox%3CT,+O%3E"],[253,"impl-Debug-for-BitBox%3CT,+O%3E"],[254,"impl-LowerHex-for-BitBox%3CT,+O%3E"],[255,"impl-Binary-for-BitBox%3CT,+O%3E"],[256,"impl-Octal-for-BitBox%3CT,+O%3E"],[259,"impl-From%3C%26BitSlice%3CT,+O%3E%3E-for-BitBox%3CT,+O%3E"],[261,"impl-From%3CBitVec%3CT,+O%3E%3E-for-BitBox%3CT,+O%3E"],[262,"impl-From%3CBitArray%3CA,+O%3E%3E-for-BitBox%3C%3CA+as+BitView%3E::Store,+O%3E"],[263,"impl-From%3CBox%3CT%3E%3E-for-BitBox%3CT,+O%3E"],[264,"impl-From%3CCow%3C\'a,+BitSlice%3CT,+O%3E%3E%3E-for-BitBox%3CT,+O%3E"],[330,"impl-LowerHex-for-Domain%3C\'a,+Const,+T,+O%3E"],[331,"impl-Debug-for-Domain%3C\'a,+M,+T,+O%3E"],[332,"impl-Display-for-Domain%3C\'a,+Const,+T,+O%3E"],[333,"impl-UpperHex-for-Domain%3C\'a,+Const,+T,+O%3E"],[334,"impl-Octal-for-Domain%3C\'a,+Const,+T,+O%3E"],[335,"impl-Binary-for-Domain%3C\'a,+Const,+T,+O%3E"],[445,"impl-Binary-for-BitIdx%3CR%3E"],[446,"impl-Debug-for-BitIdx%3CR%3E"],[447,"impl-Display-for-BitIdx%3CR%3E"],[448,"impl-Debug-for-BitIdxError%3CR%3E"],[449,"impl-Display-for-BitIdxError%3CR%3E"],[450,"impl-Binary-for-BitEnd%3CR%3E"],[451,"impl-Display-for-BitEnd%3CR%3E"],[452,"impl-Debug-for-BitEnd%3CR%3E"],[453,"impl-Binary-for-BitPos%3CR%3E"],[454,"impl-Debug-for-BitPos%3CR%3E"],[455,"impl-Display-for-BitPos%3CR%3E"],[456,"impl-Display-for-BitSel%3CR%3E"],[457,"impl-Binary-for-BitSel%3CR%3E"],[458,"impl-Debug-for-BitSel%3CR%3E"],[459,"impl-Display-for-BitMask%3CR%3E"],[460,"impl-Debug-for-BitMask%3CR%3E"],[461,"impl-Binary-for-BitMask%3CR%3E"],[715,"impl-PartialEq%3CBitRef%3C\'_,+M2,+T2,+O2%3E%3E-for-BitRef%3C\'_,+M1,+T1,+O1%3E"],[716,"impl-PartialEq%3Cbool%3E-for-BitRef%3C\'_,+M,+T,+O%3E"],[717,"impl-PartialEq%3C%26bool%3E-for-BitRef%3C\'_,+M,+T,+O%3E"],[725,"impl-Pointer-for-BitRef%3C\'_,+M,+T,+O%3E"],[726,"impl-Debug-for-BitRef%3C\'_,+M,+T,+O%3E"],[727,"impl-Display-for-BitRef%3C\'_,+M,+T,+O%3E"],[729,"impl-Pointer-for-BitPtr%3CM,+T,+O%3E"],[730,"impl-Debug-for-BitPtr%3CM,+T,+O%3E"],[731,"impl-Debug-for-MisalignError%3CT%3E"],[732,"impl-Display-for-MisalignError%3CT%3E"],[733,"impl-Debug-for-BitPtrError%3CT%3E"],[734,"impl-Display-for-BitPtrError%3CT%3E"],[735,"impl-Debug-for-BitSpanError%3CT%3E"],[736,"impl-Display-for-BitSpanError%3CT%3E"],[744,"impl-From%3C%26mut+T%3E-for-BitPtr%3CMut,+T,+O%3E"],[745,"impl-From%3C%26T%3E-for-BitPtr%3CConst,+T,+O%3E"],[747,"impl-From%3CMisalignError%3CT%3E%3E-for-BitPtrError%3CT%3E"],[749,"impl-From%3CNullPtrError%3E-for-BitPtrError%3CT%3E"],[750,"impl-From%3CMisalignError%3CT%3E%3E-for-BitSpanError%3CT%3E"],[752,"impl-From%3CBitPtrError%3CT%3E%3E-for-BitSpanError%3CT%3E"],[797,"impl-PartialOrd%3CBitRef%3C\'_,+M2,+T2,+O2%3E%3E-for-BitRef%3C\'_,+M1,+T1,+O1%3E"],[798,"impl-PartialOrd%3Cbool%3E-for-BitRef%3C\'_,+M,+T,+O%3E"],[799,"impl-PartialOrd%3C%26bool%3E-for-BitRef%3C\'_,+M,+T,+O%3E"],[804,"impl-BitPtr%3CConst,+T,+O%3E"],[805,"impl-BitPtr%3CMut,+T,+O%3E"],[847,"impl-TryFrom%3C*const+T%3E-for-BitPtr%3CConst,+T,+O%3E"],[848,"impl-TryFrom%3C*mut+T%3E-for-BitPtr%3CMut,+T,+O%3E"],[943,"impl-BitAndAssign%3C%26BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[944,"impl-BitAndAssign%3C%26BitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[945,"impl-BitAndAssign%3CBitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[946,"impl-BitAndAssign%3C%26BitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[947,"impl-BitAndAssign%3CBitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[948,"impl-BitAndAssign%3CBitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[949,"impl-BitAndAssign%3C%26BitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[950,"impl-BitOrAssign%3C%26BitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[951,"impl-BitOrAssign%3CBitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[952,"impl-BitOrAssign%3C%26BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[953,"impl-BitOrAssign%3C%26BitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[954,"impl-BitOrAssign%3CBitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[955,"impl-BitOrAssign%3CBitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[956,"impl-BitOrAssign%3C%26BitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[957,"impl-BitXorAssign%3CBitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[958,"impl-BitXorAssign%3C%26BitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[959,"impl-BitXorAssign%3C%26BitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[960,"impl-BitXorAssign%3CBitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[961,"impl-BitXorAssign%3C%26BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[962,"impl-BitXorAssign%3C%26BitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[963,"impl-BitXorAssign%3CBitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[1103,"impl-Default-for-%26BitSlice%3CT,+O%3E"],[1104,"impl-Default-for-%26mut+BitSlice%3CT,+O%3E"],[1112,"impl-PartialEq%3CBitBox%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[1113,"impl-PartialEq%3CBitVec%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[1114,"impl-PartialEq%3C%26BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[1115,"impl-PartialEq%3CBitVec%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[1116,"impl-PartialEq%3C%26mut+BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[1117,"impl-PartialEq%3CBitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[1118,"impl-PartialEq%3CBitSlice%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[1119,"impl-PartialEq%3CBitBox%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[1120,"impl-PartialEq%3CBitArray%3CA,+O2%3E%3E-for-BitSlice%3CT,+O1%3E"],[1121,"impl-PartialEq%3CBitVec%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[1122,"impl-PartialEq%3CBitBox%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[1123,"impl-PartialEq%3CBitSlice%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[1139,"impl-UpperHex-for-BitSlice%3CT,+O%3E"],[1140,"impl-LowerHex-for-BitSlice%3CT,+O%3E"],[1141,"impl-Octal-for-BitSlice%3CT,+O%3E"],[1142,"impl-Pointer-for-BitSlice%3CT,+O%3E"],[1143,"impl-Debug-for-BitSlice%3CT,+O%3E"],[1144,"impl-Display-for-BitSlice%3CT,+O%3E"],[1145,"impl-Binary-for-BitSlice%3CT,+O%3E"],[1218,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[1219,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[1220,"impl-Index%3CRange%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[1221,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[1222,"impl-Index%3Cusize%3E-for-BitSlice%3CT,+O%3E"],[1223,"impl-Index%3CRangeFull%3E-for-BitSlice%3CT,+O%3E"],[1224,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[1226,"impl-IndexMut%3CRangeFull%3E-for-BitSlice%3CT,+O%3E"],[1227,"impl-IndexMut%3CRangeInclusive%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[1228,"impl-IndexMut%3CRange%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[1229,"impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[1230,"impl-IndexMut%3CRangeToInclusive%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[1231,"impl-IndexMut%3CRangeTo%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[1275,"impl-IntoIterator-for-%26mut+BitSlice%3CT,+O%3E"],[1276,"impl-IntoIterator-for-%26BitSlice%3CT,+O%3E"],[1368,"impl-BitField-for-BitSlice%3CT,+Msb0%3E"],[1369,"impl-BitField-for-BitSlice%3CT%3E"],[1370,"impl-BitField-for-BitSlice%3CT,+Msb0%3E"],[1371,"impl-BitField-for-BitSlice%3CT%3E"],[1483,"impl-PartialOrd%3CBitSlice%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[1484,"impl-PartialOrd%3CBitVec%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[1485,"impl-PartialOrd%3CBitArray%3CA,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[1486,"impl-PartialOrd%3CBitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[1487,"impl-PartialOrd%3C%26mut+BitSlice%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[1488,"impl-PartialOrd%3C%26BitSlice%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[1489,"impl-PartialOrd%3CBitBox%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[1490,"impl-PartialOrd%3CBitSlice%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[1491,"impl-PartialOrd%3CBitVec%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[1492,"impl-PartialOrd%3CBitBox%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[1493,"impl-PartialOrd%3CBitVec%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[1494,"impl-PartialOrd%3CBitBox%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[1495,"impl-PartialOrd%3C%26BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[1496,"impl-PartialOrd%3C%26mut+BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[1581,"impl-BitField-for-BitSlice%3CT%3E"],[1582,"impl-BitField-for-BitSlice%3CT,+Msb0%3E"],[1583,"impl-BitField-for-BitSlice%3CT,+Msb0%3E"],[1584,"impl-BitField-for-BitSlice%3CT%3E"],[1622,"impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%26mut+BitSlice%3CT,+O%3E"],[1623,"impl-TryFrom%3C%26%5BT%5D%3E-for-%26BitSlice%3CT,+O%3E"],[1743,"impl-AsMut%3CBitSlice%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[1744,"impl-AsMut%3CBitVec%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[1753,"impl-AsRef%3CBitVec%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[1754,"impl-AsRef%3CBitSlice%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[1786,"impl-Extend%3C%26bool%3E-for-BitVec%3CT,+O%3E"],[1787,"impl-Extend%3CT%3E-for-BitVec%3CT,+O%3E"],[1788,"impl-Extend%3C%26T%3E-for-BitVec%3CT,+O%3E"],[1789,"impl-Extend%3Cbool%3E-for-BitVec%3CT,+O%3E"],[1790,"impl-Extend%3CBitRef%3C\'a,+M,+T2,+O2%3E%3E-for-BitVec%3CT1,+O1%3E"],[1796,"impl-Display-for-BitVec%3CT,+O%3E"],[1797,"impl-Octal-for-BitVec%3CT,+O%3E"],[1798,"impl-LowerHex-for-BitVec%3CT,+O%3E"],[1799,"impl-Binary-for-BitVec%3CT,+O%3E"],[1800,"impl-UpperHex-for-BitVec%3CT,+O%3E"],[1801,"impl-Pointer-for-BitVec%3CT,+O%3E"],[1802,"impl-Debug-for-BitVec%3CT,+O%3E"],[1807,"impl-From%3CCow%3C\'a,+BitSlice%3CT,+O%3E%3E%3E-for-BitVec%3CT,+O%3E"],[1808,"impl-From%3CBitArray%3CA,+O%3E%3E-for-BitVec%3C%3CA+as+BitView%3E::Store,+O%3E"],[1809,"impl-From%3C%26mut+BitSlice%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[1810,"impl-From%3C%26BitSlice%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[1811,"impl-From%3CBitBox%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[1815,"impl-FromIterator%3Cbool%3E-for-BitVec%3CT,+O%3E"],[1816,"impl-FromIterator%3C%26bool%3E-for-BitVec%3CT,+O%3E"],[1817,"impl-FromIterator%3CT%3E-for-BitVec%3CT,+O%3E"],[1818,"impl-FromIterator%3CBitRef%3C\'a,+M,+T2,+O2%3E%3E-for-BitVec%3CT1,+O1%3E"],[1819,"impl-FromIterator%3C%26T%3E-for-BitVec%3CT,+O%3E"],[1833,"impl-IntoIterator-for-%26mut+BitVec%3CT,+O%3E"],[1834,"impl-IntoIterator-for-%26BitVec%3CT,+O%3E"],[1835,"impl-IntoIterator-for-BitVec%3CT,+O%3E"]]}],\
["buddy_system_allocator",{"doc":"","t":"FFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["FrameAllocator","Heap","LockedFrameAllocator","LockedHeap","LockedHeapWithRescue","add_frame","add_to_heap","alloc","alloc","alloc","alloc","alloc_aligned","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","dealloc","dealloc","dealloc","dealloc","dealloc_aligned","deref","deref","deref","empty","empty","fmt","from","from","from","from","from","init","insert","into","into","into","into","into","linked_list","new","new","new","new","new","stats_alloc_actual","stats_alloc_user","stats_total_bytes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Iter","IterMut","LinkedList","ListNode","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","from","into","into","into","into","into_iter","into_iter","is_empty","iter","iter_mut","new","next","next","pop","pop","push","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value"],"q":[[0,"buddy_system_allocator"],[69,"buddy_system_allocator::linked_list"],[117,"core::option"],[118,"core::alloc::layout"],[119,"core::ptr::non_null"],[120,"core::result"],[121,"spin"],[122,"core::fmt"],[123,"core::fmt"],[124,"core::any"]],"d":["A frame allocator that uses buddy system, requiring a …","A heap that uses buddy system with configurable order.","A locked version of <code>FrameAllocator</code>","A locked version of <code>Heap</code>","A locked version of <code>Heap</code> with rescue before oom","Add a range of frame number [start, end) to the allocator","Add a range of memory [start, end) to the heap","Allocate a range of frames from the allocator, returning …","Alloc a range of memory from the heap satifying <code>layout</code> …","","","Allocate a range of frames with the given size and …","","","","","","","","","","","Deallocate a range of frames [frame, frame+count) from the …","Dealloc a range of memory from the heap","","","Deallocate a range of frames which was previously …","","","","Create an empty heap","Creates an empty heap","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Add a range of memory [start, start+size) to the heap","Add a range of frames to the allocator.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Provide the intrusive LinkedList","Create an empty frame allocator","Creates an empty heap","Create an empty heap","Creates an empty heap","Creates an empty heap","Return the number of bytes that are actually allocated","Return the number of bytes that user requests","Return the total number of bytes in the heap","","","","","","","","","","","","","","","","An iterator over the linked list","A mutable iterator over the linked list","An intrusive linked list","Represent a mutable node in <code>LinkedList</code>","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return <code>true</code> if the list is empty","Return an iterator over the items in the list","Return an mutable iterator over the items in the list","Create a new LinkedList","","","Remove the node from the list","Try to remove the first item in the list","Push <code>item</code> to the front of the list","","","","","","","","","","","","","","Returns the pointed address"],"i":[0,0,0,0,0,1,4,1,4,10,11,1,1,12,4,10,11,1,12,4,10,11,1,4,10,11,1,12,10,11,4,10,4,1,12,4,10,11,4,1,1,12,4,10,11,0,1,12,4,10,11,4,4,4,1,12,4,10,11,1,12,4,10,11,1,12,4,10,11,0,0,0,0,20,22,21,18,20,22,21,18,18,18,18,20,22,21,18,20,22,21,18,20,21,18,18,18,18,20,21,22,18,18,18,20,22,21,18,20,22,21,18,20,22,21,18,22],"f":[0,0,0,0,0,[[1,2,2],3],[[4,2,2],3],[[1,2],[[5,[2]]]],[[4,6],[[9,[[8,[7]],3]]]],[[10,6],7],[[11,6],7],[[1,6],[[5,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2,2],3],[[4,[8,[7]],6],3],[[10,7,6],3],[[11,7,6],3],[[1,2,6],3],[12,[[13,[1]]]],[10,-1,[]],[11,-1,[]],[[],4],[[],10],[[4,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[4,2,2],3],[[1,[16,[2]]],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],12],[[],4],[[],10],[[],11],[4,2],[4,2],[4,2],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,18],[[-1,-2],3,[],[]],[[18,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,19],[18,20],[18,21],[[],18],[20,[[5,[-1]]],[]],[21,[[5,[-1]]],[]],[22,2],[18,[[5,[2]]]],[[18,2],3],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[22,2]],"c":[],"p":[[5,"FrameAllocator",0],[1,"usize"],[1,"tuple"],[5,"Heap",0],[6,"Option",117],[5,"Layout",118],[1,"u8"],[5,"NonNull",119],[6,"Result",120],[5,"LockedHeap",0],[5,"LockedHeapWithRescue",0],[5,"LockedFrameAllocator",0],[8,"Mutex",121],[5,"Formatter",122],[8,"Result",122],[5,"Range",123],[5,"TypeId",124],[5,"LinkedList",69],[1,"bool"],[5,"Iter",69],[5,"IterMut",69],[5,"ListNode",69]],"b":[]}],\
["byteorder",{"doc":"This crate provides convenience methods for encoding and …","t":"IGKIGIINNNNNNNNNNNNNNNNMNNMNNNNNNMNNMNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNMNNMNNNMNNMNNNMNNMNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNMNNMNNNMNNMNNNMNNMNNMNNMNN","n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32_into","read_f32_into_unchecked","read_f64","read_f64_into","read_f64_into_unchecked","read_i128","read_i128_into","read_i16","read_i16_into","read_i24","read_i32","read_i32_into","read_i48","read_i64","read_i64_into","read_int","read_int128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32_into","write_f64","write_f64_into","write_i128","write_i128_into","write_i16","write_i16_into","write_i24","write_i32","write_i32_into","write_i48","write_i64","write_i64_into","write_i8_into","write_int","write_int128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128"],"q":[[0,"byteorder"],[156,"core::cmp"],[157,"core::fmt"],[158,"core::fmt"],[159,"core::option"],[160,"core::result"],[161,"core::any"]],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 16 bit integer from <code>buf</code>.","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","",""],"i":[0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,26,1,2,26,1,2,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,1,2,1,2,1,2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,26,26,1,2,26,1,2,26,26,1,2,26,1,2,26,1,2,26,1,2,1,2,1,2,1,2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,26,26,1,2,26,1,2,26,26,1,2,26,1,2,26,1,2,26,1,2],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[1,1],3],[[2,2],3],[[],1],[[],2],[[1,1],4],[[2,2],4],[[1,5],6],[[2,5],6],[-1,-1,[]],[-1,-1,[]],[[[8,[7]]],9],[[[8,[7]]],9],[[[8,[7]]],9],[[[8,[10]]],9],[[[8,[10]]],9],[[[8,[10]]],9],[[[8,[11]]],9],[[[8,[12]]],9],[[[8,[13]]],9],[[[8,[14]]],9],[[[8,[15]]],9],[[[8,[15]]],9],[[[8,[15]]],9],[[[8,[16]]],9],[[[8,[16]]],9],[[[8,[16]]],9],[[[8,[17]]],9],[[[8,[17]]],9],[[[8,[17]]],9],[[[8,[18]]],9],[[[8,[18]]],9],[[[8,[18]]],9],[[1,-1],9,19],[[2,-1],9,19],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],[[20,[3]]]],[[2,2],[[20,[3]]]],[[[8,[21]]],7],[[[8,[21]],[8,[7]]],9],[[[8,[21]],[8,[7]]],9],[[[8,[21]]],10],[[[8,[21]],[8,[10]]],9],[[[8,[21]],[8,[10]]],9],[[[8,[21]]],11],[[[8,[21]],[8,[11]]],9],[[[8,[21]]],12],[[[8,[21]],[8,[12]]],9],[[[8,[21]]],13],[[[8,[21]]],13],[[[8,[21]],[8,[13]]],9],[[[8,[21]]],14],[[[8,[21]]],14],[[[8,[21]],[8,[14]]],9],[[[8,[21]],22],14],[[[8,[21]],22],11],[[[8,[21]]],15],[[[8,[21]]],15],[[[8,[21]]],15],[[[8,[21]],[8,[15]]],9],[[[8,[21]],[8,[15]]],9],[[[8,[21]],[8,[15]]],9],[[[8,[21]]],16],[[[8,[21]]],16],[[[8,[21]]],16],[[[8,[21]],[8,[16]]],9],[[[8,[21]],[8,[16]]],9],[[[8,[21]],[8,[16]]],9],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]],[8,[17]]],9],[[[8,[21]],[8,[17]]],9],[[[8,[21]],[8,[17]]],9],[[[8,[21]]],18],[[[8,[21]]],18],[[[8,[21]]],18],[[[8,[21]]],18],[[[8,[21]],[8,[18]]],9],[[[8,[21]],[8,[18]]],9],[[[8,[21]],[8,[18]]],9],[[[8,[21]],22],18],[[[8,[21]],22],18],[[[8,[21]],22],18],[[[8,[21]],22],15],[[[8,[21]],22],15],[[[8,[21]],22],15],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[[[8,[21]],7],9],[[[8,[7]],[8,[21]]],9],[[[8,[21]],10],9],[[[8,[10]],[8,[21]]],9],[[[8,[21]],11],9],[[[8,[11]],[8,[21]]],9],[[[8,[21]],12],9],[[[8,[12]],[8,[21]]],9],[[[8,[21]],13],9],[[[8,[21]],13],9],[[[8,[13]],[8,[21]]],9],[[[8,[21]],14],9],[[[8,[21]],14],9],[[[8,[14]],[8,[21]]],9],[[[8,[25]],[8,[21]]],9],[[[8,[21]],14,22],9],[[[8,[21]],11,22],9],[[[8,[21]],15],9],[[[8,[21]],15],9],[[[8,[21]],15],9],[[[8,[15]],[8,[21]]],9],[[[8,[15]],[8,[21]]],9],[[[8,[15]],[8,[21]]],9],[[[8,[21]],16],9],[[[8,[21]],16],9],[[[8,[21]],16],9],[[[8,[16]],[8,[21]]],9],[[[8,[16]],[8,[21]]],9],[[[8,[16]],[8,[21]]],9],[[[8,[21]],17],9],[[[8,[21]],17],9],[[[8,[21]],17],9],[[[8,[21]],17],9],[[[8,[17]],[8,[21]]],9],[[[8,[17]],[8,[21]]],9],[[[8,[17]],[8,[21]]],9],[[[8,[21]],18],9],[[[8,[21]],18],9],[[[8,[21]],18],9],[[[8,[21]],18],9],[[[8,[18]],[8,[21]]],9],[[[8,[18]],[8,[21]]],9],[[[8,[18]],[8,[21]]],9],[[[8,[21]],18,22],9],[[[8,[21]],18,22],9],[[[8,[21]],18,22],9],[[[8,[21]],15,22],9],[[[8,[21]],15,22],9],[[[8,[21]],15,22],9]],"c":[53,56],"p":[[6,"BigEndian",0],[6,"LittleEndian",0],[6,"Ordering",156],[1,"bool"],[5,"Formatter",157],[8,"Result",157],[1,"f32"],[1,"slice"],[1,"tuple"],[1,"f64"],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"],[10,"Hasher",158],[6,"Option",159],[1,"u8"],[1,"usize"],[6,"Result",160],[5,"TypeId",161],[1,"i8"],[10,"ByteOrder",0]],"b":[]}],\
["cfg_if",{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"Q","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"c":[],"p":[],"b":[]}],\
["funty",{"doc":"<code>fun</code>damental <code>ty</code>pes","t":"KKKKKKKKKKTRTTTTTTTTTTTTKKTKKKKKKTTTTTTTTTTTTTTTTKTTTRTKKTMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["AtLeast128","AtLeast16","AtLeast32","AtLeast64","AtLeast8","AtMost128","AtMost16","AtMost32","AtMost64","AtMost8","BITS","Bytes","DIGITS","E","EPSILON","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Floating","Fundamental","INFINITY","Integral","Is128","Is16","Is32","Is64","Is8","LN_10","LN_2","LOG10_E","LOG2_E","MANTISSA_DIGITS","MAX","MAX","MAX_10_EXP","MAX_EXP","MIN","MIN","MIN_10_EXP","MIN_EXP","MIN_POSITIVE","NAN","NEG_INFINITY","Numeric","ONE","PI","RADIX","Raw","SQRT_2","Signed","Unsigned","ZERO","abs","as_bool","as_char","as_f32","as_f64","as_i128","as_i16","as_i32","as_i64","as_i8","as_isize","as_u128","as_u16","as_u32","as_u64","as_u8","as_usize","checked_abs","checked_add","checked_div","checked_div_euclid","checked_mul","checked_neg","checked_next_power_of_two","checked_pow","checked_rem","checked_rem_euclid","checked_shl","checked_shr","checked_sub","classify","count_ones","count_zeros","div_euclid","from_be","from_be_bytes","from_bits","from_le","from_le_bytes","from_ne_bytes","from_str_radix","is_finite","is_infinite","is_nan","is_negative","is_normal","is_positive","is_power_of_two","is_sign_negative","is_sign_positive","leading_ones","leading_zeros","max","max_value","min","min_value","next_power_of_two","overflowing_abs","overflowing_add","overflowing_div","overflowing_div_euclid","overflowing_mul","overflowing_neg","overflowing_pow","overflowing_rem","overflowing_rem_euclid","overflowing_shl","overflowing_shr","overflowing_sub","pow","recip","rem_euclid","reverse_bits","rotate_left","rotate_right","saturating_add","saturating_mul","saturating_pow","saturating_sub","signum","swap_bytes","to_be","to_be_bytes","to_bits","to_degrees","to_le","to_le_bytes","to_ne_bytes","to_radians","trailing_ones","trailing_zeros","wrapping_abs","wrapping_add","wrapping_div","wrapping_div_euclid","wrapping_mul","wrapping_neg","wrapping_pow","wrapping_rem","wrapping_rem_euclid","wrapping_shl","wrapping_shr","wrapping_sub"],"q":[[0,"funty"],[161,"core::option"],[162,"core::num"],[163,"core::num::error"],[164,"core::result"]],"d":["Declare that a type is one hundred twenty-eight or more …","Declare that a type is sixteen or more bits wide.","Declare that a type is thirty-two or more bits wide.","Declare that a type is sixty-four or more bits wide.","Declare that a type is eight or more bits wide.","Declare that a type is one hundred twenty-eight or fewer …","Declare that a type is sixteen or fewer bits wide.","Declare that a type is thirty-two or fewer bits wide.","Declare that a type is sixty-four or fewer bits wide.","Declare that a type is eight or fewer bits wide.","The size of this type in bits.","The <code>[u8; N]</code> byte array that stores values of <code>Self</code>.","Approximate number of significant digits in base 10.","Euler’s number (e)","Machine epsilon value for <code>f32</code>.","1/π","1/sqrt(2)","2/π","2/sqrt(π)","π/2","π/3","π/4","π/6","π/8","Declare that a type is a floating-point number.","Declare that a type is one of the language fundamental …","Infinity (∞).","Declare that a type is a fixed-point integer.","Declare that a type is exactly one hundred twenty-eight …","Declare that a type is exactly sixteen bits wide.","Declare that a type is exactly thirty-two bits wide.","Declare that a type is exactly sixty-four bits wide.","Declare that a type is exactly eight bits wide.","ln(10)","ln(2)","log10(e)","log2(e)","Number of significant digits in base 2.","The type’s maximum value.","Largest finite <code>f32</code> value.","Maximum possible power of 10 exponent.","Maximum possible power of 2 exponent.","The type’s minimum value. This is zero for unsigned …","Smallest finite <code>f32</code> value.","Minimum possible normal power of 10 exponent.","One greater than the minimum possible normal power of 2 …","Smallest positive normal <code>f32</code> value.","Not a Number (NaN).","Negative infinity (−∞).","Declare that a type is an abstract number.","The type’s step value.","Archimedes’ constant (π)","The radix or base of the internal representation of <code>f32</code>.","The unsigned integer type of the same width as <code>Self</code>.","sqrt(2)","Declare that a type is a signed integer.","Declare that a type is an unsigned integer.","The type’s zero value.","Overflow behavior","Tests <code>self != 0</code>.","Represents <code>self</code> as a Unicode Scalar Value, if possible.","Performs <code>self as f32</code>.","Performs <code>self as f64</code>.","Performs <code>self as i128</code>.","Performs <code>self as i16</code>.","Performs <code>self as i32</code>.","Performs <code>self as i64</code>.","Performs <code>self as i8</code>.","Performs <code>self as isize</code>.","Performs <code>self as u128</code>.","Performs <code>self as u16</code>.","Performs <code>self as u32</code>.","Performs <code>self as u64</code>.","Performs <code>self as u8</code>.","Performs <code>self as usize</code>.","Checked absolute value. Computes <code>self.abs()</code>, returning <code>None</code>…","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer division. Computes <code>self / rhs</code>, returning …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked integer multiplication. Computes <code>self * rhs</code>, …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if …","Returns the smallest power of two greater than or equal to …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked integer subtraction. Computes <code>self - rhs</code>, …","Returns the floating point category of the number. If only …","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Calculates the quotient of Euclidean division of self by …","Converts an integer from big endian to the target’s …","Create a numeric value from its representation as a byte …","Raw transmutation from <code>u32</code>.","Converts an integer frm little endian to the target’s …","Create a numeric value from its representation as a byte …","Create a numeric value from its memory representation as a …","Converts a string slice in a given base to an integer.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this value is <code>NaN</code>.","Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …","Returns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.","Returns <code>true</code> if <code>self</code> has a negative sign, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> has a positive sign, including <code>+0.0</code>, …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the maximum of the two numbers.","Returns the largest value that can be represented by this …","Returns the minimum of the two numbers.","Returns the smallest value that can be represented by this …","Returns the smallest power of two greater than or equal to …","Computes the absolute value of <code>self</code>.","Calculates <code>self + rhs</code>","Calculates the divisor when <code>self</code> is divided by <code>rhs</code>.","Calculates the quotient of Euclidean division …","Calculates the multiplication of <code>self</code> and <code>rhs</code>.","Negates self, overflowing if this is equal to the minimum …","Raises self to the power of <code>exp</code>, using exponentiation by …","Calculates the remainder when <code>self</code> is divided by <code>rhs</code>.","Overflowing Euclidean remainder. Calculates …","Shifts self left by <code>rhs</code> bits.","Shifts self right by <code>rhs</code> bits.","Calculates <code>self - rhs</code>","Raises self to the power of <code>exp</code>, using exponentiation by …","Takes the reciprocal (inverse) of a number, <code>1/x</code>.","Calculates the least nonnegative remainder of …","Reverses the bit pattern of the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Returns a number representing sign of <code>self</code>.","Reverses the byte order of the integer.","Converts <code>self</code> to big endian from the target’s endianness.","Return the memory representation of this number as a byte …","Raw transmutation to <code>u32</code>.","Converts radians to degrees.","Converts <code>self</code> to little endian from the target’s …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Converts degrees to radians.","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Wrapping (modular) absolute value. Computes <code>self.abs()</code>, …","Wrapping (modular) addition. Computes <code>self + rhs</code>, wrapping …","Wrapping (modular) division. Computes <code>self / rhs</code>, wrapping …","Wrapping Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Wrapping (modular) multiplication. Computes <code>self * rhs</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Wrapping (modular) exponentiation. Computes <code>self.pow(exp)</code>, …","Wrapping (modular) remainder. Computes <code>self % rhs</code>, …","Wrapping Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - rhs</code>, …"],"i":[0,0,0,0,0,0,0,0,0,0,20,26,23,23,23,23,23,23,23,23,23,23,23,23,0,0,23,0,0,0,0,0,0,23,23,23,23,23,20,23,23,23,20,23,23,23,23,23,23,0,20,23,23,23,23,0,0,20,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,20,20,20,20,20,21,20,20,20,20,20,20,23,20,20,20,20,26,23,20,26,26,20,23,23,23,1,23,1,21,23,23,20,20,23,20,23,20,21,1,20,20,20,20,20,20,20,20,20,20,20,20,23,20,20,20,20,20,20,20,20,1,20,20,26,23,23,20,26,26,23,20,20,1,20,20,20,20,20,20,20,20,20,20,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,3],[2,[[5,[4]]]],[2,6],[2,7],[2,8],[2,9],[2,10],[2,11],[2,12],[2,13],[2,14],[2,15],[2,16],[2,17],[2,18],[2,19],[1,[[5,[1]]]],[[20,20],[[5,[20]]]],[[20,20],[[5,[20]]]],[[20,20],[[5,[20]]]],[[20,20],[[5,[20]]]],[20,[[5,[20]]]],[21,[[5,[21]]]],[[20,16],[[5,[20]]]],[[20,20],[[5,[20]]]],[[20,20],[[5,[20]]]],[[20,16],[[5,[20]]]],[[20,16],[[5,[20]]]],[[20,20],[[5,[20]]]],[[[23,[],[[22,[-1]]]]],24,21],[20,16],[20,16],[[20,20],20],[20,20],[-1,[[26,[],[[25,[-1]]]]],[]],[-1,[[23,[],[[22,[-1]]]]],21],[20,20],[-1,[[26,[],[[25,[-1]]]]],[]],[-1,[[26,[],[[25,[-1]]]]],[]],[[27,16],[[29,[20,28]]]],[[[23,[],[[22,[-1]]]]],3,21],[[[23,[],[[22,[-1]]]]],3,21],[[[23,[],[[22,[-1]]]]],3,21],[1,3],[[[23,[],[[22,[-1]]]]],3,21],[1,3],[21,3],[[[23,[],[[22,[-1]]]]],3,21],[[[23,[],[[22,[-1]]]]],3,21],[20,16],[20,16],[[[23,[],[[22,[-1]]]],[23,[],[[22,[-1]]]]],[[23,[],[[22,[-1]]]]],21],[[],20],[[[23,[],[[22,[-1]]]],[23,[],[[22,[-1]]]]],[[23,[],[[22,[-1]]]]],21],[[],20],[21,21],[1,[[30,[1,3]]]],[[20,20],[[30,[20,3]]]],[[20,20],[[30,[20,3]]]],[[20,20],[[30,[20,3]]]],[[20,20],[[30,[20,3]]]],[20,[[30,[20,3]]]],[[20,16],[[30,[20,3]]]],[[20,20],[[30,[20,3]]]],[[20,20],[[30,[20,3]]]],[[20,16],[[30,[20,3]]]],[[20,16],[[30,[20,3]]]],[[20,20],[[30,[20,3]]]],[[20,16],20],[[[23,[],[[22,[-1]]]]],[[23,[],[[22,[-1]]]]],21],[[20,20],20],[20,20],[[20,16],20],[[20,16],20],[[20,20],20],[[20,20],20],[[20,16],20],[[20,20],20],[1,1],[20,20],[20,20],[[[26,[],[[25,[-1]]]]],-1,[]],[[[23,[],[[22,[-1]]]]],-1,21],[[[23,[],[[22,[-1]]]]],[[23,[],[[22,[-1]]]]],21],[20,20],[[[26,[],[[25,[-1]]]]],-1,[]],[[[26,[],[[25,[-1]]]]],-1,[]],[[[23,[],[[22,[-1]]]]],[[23,[],[[22,[-1]]]]],21],[20,16],[20,16],[1,1],[[20,20],20],[[20,20],20],[[20,20],20],[[20,20],20],[20,20],[[20,16],20],[[20,20],20],[[20,20],20],[[20,16],20],[[20,16],20],[[20,20],20]],"c":[],"p":[[10,"Signed",0],[10,"Fundamental",0],[1,"bool"],[1,"char"],[6,"Option",161],[1,"f32"],[1,"f64"],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[1,"isize"],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"],[1,"u8"],[1,"usize"],[10,"Integral",0],[10,"Unsigned",0],[17,"Raw"],[10,"Floating",0],[6,"FpCategory",162],[17,"Bytes"],[10,"Numeric",0],[1,"str"],[5,"ParseIntError",163],[6,"Result",164],[1,"tuple"]],"b":[]}],\
["gimli",{"doc":"<code>gimli</code> is a library for reading and writing the DWARF …","t":"TTTTTTTTTTTTTTTTFPTTTTTTTTFPFTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTPFPFFPFPPFPFPPFPFPPFFPFPFPPPPFFPFPFFPFPFPPPPGPFTTTTTTTTTTTPPFFKTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTGTTTTTTTTTTTTTTTTTFPFFFTTTTTTTTTTTTTTTTTTPITTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTFFFFGTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTGTTTTTTTTTTTTTTTTTTTTTTTTTTTTGTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTGTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTFFTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNCOOOONNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHHHHPPPPPPPPPFFFFPPKPFPPPPPPPPFPPPPPPGFPGFPPGFPPPPPFFFFPFFFFFFFFPPPPPPPPGPPPPPPFFFFPRIFPPPGFGKPPFPPPRPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPRPPFGFFPPPPPPPPPPPPPPPPPPPPPPRRPPPPPPGFPPFFPPFPPPGPPFFGFGFKKFPPPPPPGFPPPPPPPPPPPPPPPIRFPRPPKFPPPPPPRRPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPFFFFPPPPPPPPPPPPPPPPPPPPPPPPFKKKFFPPPPPGPGPPPPPNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONMNNNONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMNMNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNMNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNOOMNNNNNMNNNNNONNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["A0","A0","A1","A1","A2","A2","A3","A3","A4","A4","A5","A5","A6","A6","A7","A7","AArch64","AArch64","ACC0","ACC1","ACC2","ACC3","ACC4","ACC5","ACC6","ACC7","Arm","Big","BigEndian","CS","CS","D0","D1","D10","D11","D12","D13","D14","D15","D16","D17","D18","D19","D2","D20","D21","D22","D23","D24","D25","D26","D27","D28","D29","D3","D30","D31","D4","D5","D6","D7","D8","D9","DS","DS","DebugAbbrev","DebugAbbrevOffset","DebugAddr","DebugAddrBase","DebugAddrIndex","DebugAranges","DebugArangesOffset","DebugCuIndex","DebugFrame","DebugFrameOffset","DebugInfo","DebugInfoOffset","DebugInfoOffset","DebugLine","DebugLineOffset","DebugLineStr","DebugLineStrOffset","DebugLoc","DebugLocLists","DebugLocListsBase","DebugLocListsIndex","DebugMacinfo","DebugMacinfoOffset","DebugMacro","DebugMacroOffset","DebugPubNames","DebugPubTypes","DebugRanges","DebugRngLists","DebugRngListsBase","DebugRngListsIndex","DebugStr","DebugStrOffset","DebugStrOffsets","DebugStrOffsetsBase","DebugStrOffsetsIndex","DebugTuIndex","DebugTypeSignature","DebugTypes","DebugTypesOffset","DebugTypesOffset","Default","Dwarf32","Dwarf64","DwarfFileType","Dwo","DwoId","EAX","EBP","EBX","ECX","EDI","EDX","ELR_MODE","ES","ES","ESI","ESP","EhFrame","EhFrameHdr","EhFrameOffset","Encoding","Endianity","F0","F0","F1","F1","F10","F10","F11","F11","F12","F12","F13","F13","F14","F14","F15","F15","F16","F16","F17","F17","F18","F18","F19","F19","F2","F2","F20","F20","F21","F21","F22","F22","F23","F23","F24","F24","F25","F25","F26","F26","F27","F27","F28","F28","F29","F29","F3","F3","F30","F30","F31","F31","F4","F4","F5","F5","F6","F6","F7","F7","F8","F8","F9","F9","FA0","FA0","FA1","FA1","FA2","FA2","FA3","FA3","FA4","FA4","FA5","FA5","FA6","FA6","FA7","FA7","FCC0","FCC1","FCC2","FCC3","FCC4","FCC5","FCC6","FCC7","FCW","FP","FS","FS","FS0","FS0","FS1","FS1","FS10","FS11","FS2","FS2","FS3","FS3","FS4","FS4","FS5","FS5","FS6","FS6","FS7","FS7","FS8","FS9","FSW","FS_BASE","FS_BASE","FT0","FT0","FT1","FT1","FT10","FT10","FT11","FT11","FT12","FT13","FT14","FT15","FT2","FT2","FT3","FT3","FT4","FT4","FT5","FT5","FT6","FT6","FT7","FT7","FT8","FT8","FT9","FT9","Format","GP","GS","GS","GS_BASE","GS_BASE","HTPIDPR","K0","K1","K2","K3","K4","K5","K6","K7","LDTR","LDTR","LR","LineEncoding","Little","LittleEndian","LocationListsOffset","LoongArch","MM0","MM0","MM1","MM1","MM2","MM2","MM3","MM3","MM4","MM4","MM5","MM5","MM6","MM6","MM7","MM7","MXCSR","MXCSR","Main","NativeEndian","PC","PC","R0","R0","R1","R1","R10","R10","R10","R10_FIQ","R10_USR","R11","R11","R11","R11_FIQ","R11_USR","R12","R12","R12","R12_FIQ","R12_USR","R13","R13","R13","R13_ABT","R13_FIQ","R13_IRQ","R13_SVC","R13_UND","R13_USR","R14","R14","R14","R14_ABT","R14_FIQ","R14_IRQ","R14_SVC","R14_UND","R14_USR","R15","R15","R15","R16","R17","R18","R19","R2","R2","R20","R21","R22","R23","R24","R25","R26","R27","R28","R29","R3","R3","R30","R31","R4","R4","R5","R5","R6","R6","R7","R7","R8","R8","R8","R8_FIQ","R8_USR","R9","R9","R9","R9_FIQ","R9_USR","RA","RA","RA","RA","RAX","RA_AUTH_CODE","RA_SIGN_STATE","RBP","RBX","RCX","RDI","RDX","RFLAGS","RSI","RSP","RangeListsOffset","RawRangeListsOffset","Register","RiscV","RunTimeEndian","S0","S0","S0","S1","S1","S1","S10","S10","S11","S11","S12","S13","S14","S15","S16","S17","S18","S19","S2","S2","S2","S20","S21","S22","S23","S24","S25","S26","S27","S28","S29","S3","S3","S3","S30","S31","S4","S4","S4","S5","S5","S5","S6","S6","S6","S7","S7","S7","S8","S8","S8","S9","S9","SP","SP","SP","SP","SPSR","SPSR_ABT","SPSR_FIQ","SPSR_IRQ","SPSR_SVC","SPSR_UND","SS","SS","ST0","ST0","ST1","ST1","ST2","ST2","ST3","ST3","ST4","ST4","ST5","ST5","ST6","ST6","ST7","ST7","SectionId","T0","T0","T1","T1","T2","T2","T3","T3","T4","T4","T5","T5","T6","T6","T7","T8","TP","TP","TPIDPR","TPIDRRO_EL0","TPIDRURO","TPIDRURW","TPIDR_EL0","TPIDR_EL1","TPIDR_EL2","TPIDR_EL3","TR","TR","UnitSectionOffset","V0","V1","V10","V11","V12","V13","V14","V15","V16","V17","V18","V19","V2","V20","V21","V22","V23","V24","V25","V26","V27","V28","V29","V3","V30","V31","V4","V5","V6","V7","V8","V9","Vendor","WC0","WC1","WC2","WC3","WC4","WC5","WC6","WC7","WCGR0","WCGR1","WCGR2","WCGR3","WCGR4","WCGR5","WCGR6","WCGR7","WR0","WR1","WR10","WR11","WR12","WR13","WR14","WR15","WR2","WR3","WR4","WR5","WR6","WR7","WR8","WR9","X0","X0","X1","X1","X10","X10","X11","X11","X12","X12","X13","X13","X14","X14","X15","X15","X16","X16","X17","X17","X18","X18","X19","X19","X2","X2","X20","X20","X21","X21","X22","X22","X23","X23","X24","X24","X25","X25","X26","X26","X27","X27","X28","X28","X29","X29","X3","X3","X30","X30","X31","X4","X4","X5","X5","X6","X6","X7","X7","X8","X8","X86","X86_64","X9","X9","XMM0","XMM0","XMM1","XMM1","XMM10","XMM11","XMM12","XMM13","XMM14","XMM15","XMM16","XMM17","XMM18","XMM19","XMM2","XMM2","XMM20","XMM21","XMM22","XMM23","XMM24","XMM25","XMM26","XMM27","XMM28","XMM29","XMM3","XMM3","XMM30","XMM31","XMM4","XMM4","XMM5","XMM5","XMM6","XMM6","XMM7","XMM7","XMM8","XMM9","ZERO","ZERO","address_size","as_debug_info_offset","as_debug_types_offset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","constants","default","default","default","default","default","default_for_encoding_and_file","default_for_encoding_and_file","default_for_encoding_and_file","default_is_stmt","dwo_name","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","initial_length_size","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_big_endian","is_big_endian","is_big_endian","is_big_endian","is_little_endian","is_little_endian","leb128","line_base","line_range","maximum_operations_per_instruction","minimum_instruction_length","name","name_to_register","name_to_register","name_to_register","name_to_register","name_to_register","name_to_register","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","read","read_f32","read_f32","read_f64","read_f64","read_i16","read_i16","read_i32","read_i32","read_i64","read_i64","read_u16","read_u16","read_u32","read_u32","read_u64","read_u64","read_uint","read_uint","register_name","register_name","register_name","register_name","register_name","register_name","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","word_size","write_u16","write_u16","write_u32","write_u32","write_u64","write_u64","xcoff_name","DW_ACCESS_private","DW_ACCESS_protected","DW_ACCESS_public","DW_ADDR_none","DW_ATE_ASCII","DW_ATE_UCS","DW_ATE_UTF","DW_ATE_address","DW_ATE_boolean","DW_ATE_complex_float","DW_ATE_decimal_float","DW_ATE_edited","DW_ATE_float","DW_ATE_hi_user","DW_ATE_imaginary_float","DW_ATE_lo_user","DW_ATE_numeric_string","DW_ATE_packed_decimal","DW_ATE_signed","DW_ATE_signed_char","DW_ATE_signed_fixed","DW_ATE_unsigned","DW_ATE_unsigned_char","DW_ATE_unsigned_fixed","DW_AT_ALTIUM_loclist","DW_AT_APPLE_block","DW_AT_APPLE_flags","DW_AT_APPLE_isa","DW_AT_APPLE_major_runtime_vers","DW_AT_APPLE_objc_complete_type","DW_AT_APPLE_omit_frame_ptr","DW_AT_APPLE_optimized","DW_AT_APPLE_property","DW_AT_APPLE_property_attribute","DW_AT_APPLE_property_getter","DW_AT_APPLE_property_name","DW_AT_APPLE_property_setter","DW_AT_APPLE_runtime_class","DW_AT_BORLAND_Delphi_ABI","DW_AT_BORLAND_Delphi_anonymous_method","DW_AT_BORLAND_Delphi_class","DW_AT_BORLAND_Delphi_constructor","DW_AT_BORLAND_Delphi_destructor","DW_AT_BORLAND_Delphi_frameptr","DW_AT_BORLAND_Delphi_interface","DW_AT_BORLAND_Delphi_metaclass","DW_AT_BORLAND_Delphi_record","DW_AT_BORLAND_Delphi_return","DW_AT_BORLAND_Delphi_unit","DW_AT_BORLAND_closure","DW_AT_BORLAND_property_default","DW_AT_BORLAND_property_implements","DW_AT_BORLAND_property_index","DW_AT_BORLAND_property_read","DW_AT_BORLAND_property_write","DW_AT_GNAT_descriptive_type","DW_AT_GNU_addr_base","DW_AT_GNU_all_call_sites","DW_AT_GNU_all_source_call_sites","DW_AT_GNU_all_tail_call_sites","DW_AT_GNU_bias","DW_AT_GNU_call_site_data_value","DW_AT_GNU_call_site_target","DW_AT_GNU_call_site_target_clobbered","DW_AT_GNU_call_site_value","DW_AT_GNU_deleted","DW_AT_GNU_denominator","DW_AT_GNU_discriminator","DW_AT_GNU_dwo_id","DW_AT_GNU_dwo_name","DW_AT_GNU_entry_view","DW_AT_GNU_exclusive_locks_required","DW_AT_GNU_guarded","DW_AT_GNU_guarded_by","DW_AT_GNU_locks_excluded","DW_AT_GNU_locviews","DW_AT_GNU_macros","DW_AT_GNU_numerator","DW_AT_GNU_odr_signature","DW_AT_GNU_pt_guarded","DW_AT_GNU_pt_guarded_by","DW_AT_GNU_pubnames","DW_AT_GNU_pubtypes","DW_AT_GNU_ranges_base","DW_AT_GNU_shared_locks_required","DW_AT_GNU_tail_call","DW_AT_GNU_template_name","DW_AT_GNU_vector","DW_AT_INTEL_other_endian","DW_AT_LLVM_config_macros","DW_AT_LLVM_include_path","DW_AT_LLVM_isysroot","DW_AT_MIPS_abstract_name","DW_AT_MIPS_allocatable_dopetype","DW_AT_MIPS_assumed_shape_dopetype","DW_AT_MIPS_assumed_size","DW_AT_MIPS_clone_origin","DW_AT_MIPS_epilog_begin","DW_AT_MIPS_fde","DW_AT_MIPS_has_inlines","DW_AT_MIPS_linkage_name","DW_AT_MIPS_loop_begin","DW_AT_MIPS_loop_unroll_factor","DW_AT_MIPS_ptr_dopetype","DW_AT_MIPS_software_pipeline_depth","DW_AT_MIPS_stride","DW_AT_MIPS_stride_byte","DW_AT_MIPS_stride_elem","DW_AT_MIPS_tail_loop_begin","DW_AT_PGI_lbase","DW_AT_PGI_lstride","DW_AT_PGI_soffset","DW_AT_SUN_alignment","DW_AT_SUN_amd64_parmdump","DW_AT_SUN_browser_file","DW_AT_SUN_c_vla","DW_AT_SUN_cf_kind","DW_AT_SUN_command_line","DW_AT_SUN_compile_options","DW_AT_SUN_count_guarantee","DW_AT_SUN_dtor_length","DW_AT_SUN_dtor_start","DW_AT_SUN_dtor_state_deltas","DW_AT_SUN_dtor_state_final","DW_AT_SUN_dtor_state_initial","DW_AT_SUN_f90_allocatable","DW_AT_SUN_f90_assumed_shape_array","DW_AT_SUN_f90_pointer","DW_AT_SUN_f90_use_only","DW_AT_SUN_fortran_based","DW_AT_SUN_fortran_main_alias","DW_AT_SUN_func_offset","DW_AT_SUN_func_offsets","DW_AT_SUN_hwcprof_signature","DW_AT_SUN_import_by_lname","DW_AT_SUN_import_by_name","DW_AT_SUN_is_omp_child_func","DW_AT_SUN_language","DW_AT_SUN_link_name","DW_AT_SUN_memop_signature","DW_AT_SUN_memop_type_ref","DW_AT_SUN_namelist_spec","DW_AT_SUN_obj_dir","DW_AT_SUN_obj_file","DW_AT_SUN_omp_child_func","DW_AT_SUN_omp_tpriv_addr","DW_AT_SUN_original_name","DW_AT_SUN_part_link_name","DW_AT_SUN_pass_by_ref","DW_AT_SUN_pass_with_const","DW_AT_SUN_profile_id","DW_AT_SUN_return_value_ptr","DW_AT_SUN_return_with_const","DW_AT_SUN_template","DW_AT_SUN_vbase","DW_AT_SUN_vtable","DW_AT_SUN_vtable_abi","DW_AT_SUN_vtable_index","DW_AT_abstract_origin","DW_AT_accessibility","DW_AT_addr_base","DW_AT_address_class","DW_AT_alignment","DW_AT_allocated","DW_AT_artificial","DW_AT_associated","DW_AT_base_types","DW_AT_binary_scale","DW_AT_bit_offset","DW_AT_bit_size","DW_AT_bit_stride","DW_AT_body_begin","DW_AT_body_end","DW_AT_byte_size","DW_AT_byte_stride","DW_AT_call_all_calls","DW_AT_call_all_source_calls","DW_AT_call_all_tail_calls","DW_AT_call_column","DW_AT_call_data_location","DW_AT_call_data_value","DW_AT_call_file","DW_AT_call_line","DW_AT_call_origin","DW_AT_call_parameter","DW_AT_call_pc","DW_AT_call_return_pc","DW_AT_call_tail_call","DW_AT_call_target","DW_AT_call_target_clobbered","DW_AT_call_value","DW_AT_calling_convention","DW_AT_common_reference","DW_AT_comp_dir","DW_AT_const_expr","DW_AT_const_value","DW_AT_containing_type","DW_AT_count","DW_AT_data_bit_offset","DW_AT_data_location","DW_AT_data_member_location","DW_AT_decimal_scale","DW_AT_decimal_sign","DW_AT_decl_column","DW_AT_decl_file","DW_AT_decl_line","DW_AT_declaration","DW_AT_default_value","DW_AT_defaulted","DW_AT_deleted","DW_AT_description","DW_AT_digit_count","DW_AT_discr","DW_AT_discr_list","DW_AT_discr_value","DW_AT_dwo_name","DW_AT_elemental","DW_AT_encoding","DW_AT_endianity","DW_AT_entry_pc","DW_AT_enum_class","DW_AT_explicit","DW_AT_export_symbols","DW_AT_extension","DW_AT_external","DW_AT_frame_base","DW_AT_friend","DW_AT_hi_user","DW_AT_high_pc","DW_AT_identifier_case","DW_AT_import","DW_AT_inline","DW_AT_is_optional","DW_AT_language","DW_AT_linkage_name","DW_AT_lo_user","DW_AT_location","DW_AT_loclists_base","DW_AT_low_pc","DW_AT_lower_bound","DW_AT_mac_info","DW_AT_macro_info","DW_AT_macros","DW_AT_main_subprogram","DW_AT_mutable","DW_AT_name","DW_AT_namelist_item","DW_AT_noreturn","DW_AT_null","DW_AT_object_pointer","DW_AT_ordering","DW_AT_picture_string","DW_AT_priority","DW_AT_producer","DW_AT_prototyped","DW_AT_pure","DW_AT_ranges","DW_AT_rank","DW_AT_recursive","DW_AT_reference","DW_AT_return_addr","DW_AT_rnglists_base","DW_AT_rvalue_reference","DW_AT_segment","DW_AT_sf_names","DW_AT_sibling","DW_AT_signature","DW_AT_small","DW_AT_specification","DW_AT_src_coords","DW_AT_src_info","DW_AT_start_scope","DW_AT_static_link","DW_AT_stmt_list","DW_AT_str_offsets_base","DW_AT_string_length","DW_AT_string_length_bit_size","DW_AT_string_length_byte_size","DW_AT_threads_scaled","DW_AT_trampoline","DW_AT_type","DW_AT_upc_threads_scaled","DW_AT_upper_bound","DW_AT_use_GNAT_descriptive_type","DW_AT_use_UTF8","DW_AT_use_location","DW_AT_variable_parameter","DW_AT_virtuality","DW_AT_visibility","DW_AT_vtable_elem_location","DW_CC_hi_user","DW_CC_lo_user","DW_CC_nocall","DW_CC_normal","DW_CC_pass_by_reference","DW_CC_pass_by_value","DW_CC_program","DW_CFA_AARCH64_negate_ra_state","DW_CFA_GNU_args_size","DW_CFA_GNU_negative_offset_extended","DW_CFA_GNU_window_save","DW_CFA_MIPS_advance_loc8","DW_CFA_advance_loc","DW_CFA_advance_loc1","DW_CFA_advance_loc2","DW_CFA_advance_loc4","DW_CFA_def_cfa","DW_CFA_def_cfa_expression","DW_CFA_def_cfa_offset","DW_CFA_def_cfa_offset_sf","DW_CFA_def_cfa_register","DW_CFA_def_cfa_sf","DW_CFA_expression","DW_CFA_hi_user","DW_CFA_lo_user","DW_CFA_nop","DW_CFA_offset","DW_CFA_offset_extended","DW_CFA_offset_extended_sf","DW_CFA_register","DW_CFA_remember_state","DW_CFA_restore","DW_CFA_restore_extended","DW_CFA_restore_state","DW_CFA_same_value","DW_CFA_set_loc","DW_CFA_undefined","DW_CFA_val_expression","DW_CFA_val_offset","DW_CFA_val_offset_sf","DW_CHILDREN_no","DW_CHILDREN_yes","DW_DEFAULTED_in_class","DW_DEFAULTED_no","DW_DEFAULTED_out_of_class","DW_DSC_label","DW_DSC_range","DW_DS_leading_overpunch","DW_DS_leading_separate","DW_DS_trailing_overpunch","DW_DS_trailing_separate","DW_DS_unsigned","DW_EH_PE_absptr","DW_EH_PE_aligned","DW_EH_PE_datarel","DW_EH_PE_funcrel","DW_EH_PE_indirect","DW_EH_PE_omit","DW_EH_PE_pcrel","DW_EH_PE_sdata2","DW_EH_PE_sdata4","DW_EH_PE_sdata8","DW_EH_PE_sleb128","DW_EH_PE_textrel","DW_EH_PE_udata2","DW_EH_PE_udata4","DW_EH_PE_udata8","DW_EH_PE_uleb128","DW_END_big","DW_END_default","DW_END_hi_user","DW_END_little","DW_END_lo_user","DW_FORM_GNU_addr_index","DW_FORM_GNU_ref_alt","DW_FORM_GNU_str_index","DW_FORM_GNU_strp_alt","DW_FORM_addr","DW_FORM_addrx","DW_FORM_addrx1","DW_FORM_addrx2","DW_FORM_addrx3","DW_FORM_addrx4","DW_FORM_block","DW_FORM_block1","DW_FORM_block2","DW_FORM_block4","DW_FORM_data1","DW_FORM_data16","DW_FORM_data2","DW_FORM_data4","DW_FORM_data8","DW_FORM_exprloc","DW_FORM_flag","DW_FORM_flag_present","DW_FORM_implicit_const","DW_FORM_indirect","DW_FORM_line_strp","DW_FORM_loclistx","DW_FORM_null","DW_FORM_ref1","DW_FORM_ref2","DW_FORM_ref4","DW_FORM_ref8","DW_FORM_ref_addr","DW_FORM_ref_sig8","DW_FORM_ref_sup4","DW_FORM_ref_sup8","DW_FORM_ref_udata","DW_FORM_rnglistx","DW_FORM_sdata","DW_FORM_sec_offset","DW_FORM_string","DW_FORM_strp","DW_FORM_strp_sup","DW_FORM_strx","DW_FORM_strx1","DW_FORM_strx2","DW_FORM_strx3","DW_FORM_strx4","DW_FORM_udata","DW_IDX_compile_unit","DW_IDX_die_offset","DW_IDX_hi_user","DW_IDX_lo_user","DW_IDX_parent","DW_IDX_type_hash","DW_IDX_type_unit","DW_ID_case_insensitive","DW_ID_case_sensitive","DW_ID_down_case","DW_ID_up_case","DW_INL_declared_inlined","DW_INL_declared_not_inlined","DW_INL_inlined","DW_INL_not_inlined","DW_LANG_ALTIUM_Assembler","DW_LANG_Ada2005","DW_LANG_Ada2012","DW_LANG_Ada83","DW_LANG_Ada95","DW_LANG_BLISS","DW_LANG_BORLAND_Delphi","DW_LANG_C","DW_LANG_C11","DW_LANG_C17","DW_LANG_C89","DW_LANG_C99","DW_LANG_C_plus_plus","DW_LANG_C_plus_plus_03","DW_LANG_C_plus_plus_11","DW_LANG_C_plus_plus_14","DW_LANG_C_plus_plus_17","DW_LANG_C_plus_plus_20","DW_LANG_Cobol74","DW_LANG_Cobol85","DW_LANG_Crystal","DW_LANG_D","DW_LANG_Dylan","DW_LANG_Fortran03","DW_LANG_Fortran08","DW_LANG_Fortran18","DW_LANG_Fortran77","DW_LANG_Fortran90","DW_LANG_Fortran95","DW_LANG_GOOGLE_RenderScript","DW_LANG_Go","DW_LANG_Haskell","DW_LANG_Java","DW_LANG_Julia","DW_LANG_Kotlin","DW_LANG_Mips_Assembler","DW_LANG_Modula2","DW_LANG_Modula3","DW_LANG_OCaml","DW_LANG_ObjC","DW_LANG_ObjC_plus_plus","DW_LANG_OpenCL","DW_LANG_PLI","DW_LANG_Pascal83","DW_LANG_Python","DW_LANG_RenderScript","DW_LANG_Rust","DW_LANG_SUN_Assembler","DW_LANG_Swift","DW_LANG_UPC","DW_LANG_Zig","DW_LANG_hi_user","DW_LANG_lo_user","DW_LLE_GNU_view_pair","DW_LLE_base_address","DW_LLE_base_addressx","DW_LLE_default_location","DW_LLE_end_of_list","DW_LLE_offset_pair","DW_LLE_start_end","DW_LLE_start_length","DW_LLE_startx_endx","DW_LLE_startx_length","DW_LNCT_MD5","DW_LNCT_directory_index","DW_LNCT_hi_user","DW_LNCT_lo_user","DW_LNCT_path","DW_LNCT_size","DW_LNCT_timestamp","DW_LNE_define_file","DW_LNE_end_sequence","DW_LNE_hi_user","DW_LNE_lo_user","DW_LNE_set_address","DW_LNE_set_discriminator","DW_LNS_advance_line","DW_LNS_advance_pc","DW_LNS_const_add_pc","DW_LNS_copy","DW_LNS_fixed_advance_pc","DW_LNS_negate_stmt","DW_LNS_set_basic_block","DW_LNS_set_column","DW_LNS_set_epilogue_begin","DW_LNS_set_file","DW_LNS_set_isa","DW_LNS_set_prologue_end","DW_MACRO_define","DW_MACRO_define_strp","DW_MACRO_define_strx","DW_MACRO_define_sup","DW_MACRO_end_file","DW_MACRO_hi_user","DW_MACRO_import","DW_MACRO_import_sup","DW_MACRO_lo_user","DW_MACRO_start_file","DW_MACRO_undef","DW_MACRO_undef_strp","DW_MACRO_undef_strx","DW_MACRO_undef_sup","DW_OP_GNU_addr_index","DW_OP_GNU_const_index","DW_OP_GNU_const_type","DW_OP_GNU_convert","DW_OP_GNU_deref_type","DW_OP_GNU_entry_value","DW_OP_GNU_implicit_pointer","DW_OP_GNU_parameter_ref","DW_OP_GNU_push_tls_address","DW_OP_GNU_regval_type","DW_OP_GNU_reinterpret","DW_OP_WASM_location","DW_OP_abs","DW_OP_addr","DW_OP_addrx","DW_OP_and","DW_OP_bit_piece","DW_OP_bra","DW_OP_breg0","DW_OP_breg1","DW_OP_breg10","DW_OP_breg11","DW_OP_breg12","DW_OP_breg13","DW_OP_breg14","DW_OP_breg15","DW_OP_breg16","DW_OP_breg17","DW_OP_breg18","DW_OP_breg19","DW_OP_breg2","DW_OP_breg20","DW_OP_breg21","DW_OP_breg22","DW_OP_breg23","DW_OP_breg24","DW_OP_breg25","DW_OP_breg26","DW_OP_breg27","DW_OP_breg28","DW_OP_breg29","DW_OP_breg3","DW_OP_breg30","DW_OP_breg31","DW_OP_breg4","DW_OP_breg5","DW_OP_breg6","DW_OP_breg7","DW_OP_breg8","DW_OP_breg9","DW_OP_bregx","DW_OP_call2","DW_OP_call4","DW_OP_call_frame_cfa","DW_OP_call_ref","DW_OP_const1s","DW_OP_const1u","DW_OP_const2s","DW_OP_const2u","DW_OP_const4s","DW_OP_const4u","DW_OP_const8s","DW_OP_const8u","DW_OP_const_type","DW_OP_consts","DW_OP_constu","DW_OP_constx","DW_OP_convert","DW_OP_deref","DW_OP_deref_size","DW_OP_deref_type","DW_OP_div","DW_OP_drop","DW_OP_dup","DW_OP_entry_value","DW_OP_eq","DW_OP_fbreg","DW_OP_form_tls_address","DW_OP_ge","DW_OP_gt","DW_OP_implicit_pointer","DW_OP_implicit_value","DW_OP_le","DW_OP_lit0","DW_OP_lit1","DW_OP_lit10","DW_OP_lit11","DW_OP_lit12","DW_OP_lit13","DW_OP_lit14","DW_OP_lit15","DW_OP_lit16","DW_OP_lit17","DW_OP_lit18","DW_OP_lit19","DW_OP_lit2","DW_OP_lit20","DW_OP_lit21","DW_OP_lit22","DW_OP_lit23","DW_OP_lit24","DW_OP_lit25","DW_OP_lit26","DW_OP_lit27","DW_OP_lit28","DW_OP_lit29","DW_OP_lit3","DW_OP_lit30","DW_OP_lit31","DW_OP_lit4","DW_OP_lit5","DW_OP_lit6","DW_OP_lit7","DW_OP_lit8","DW_OP_lit9","DW_OP_lt","DW_OP_minus","DW_OP_mod","DW_OP_mul","DW_OP_ne","DW_OP_neg","DW_OP_nop","DW_OP_not","DW_OP_or","DW_OP_over","DW_OP_pick","DW_OP_piece","DW_OP_plus","DW_OP_plus_uconst","DW_OP_push_object_address","DW_OP_reg0","DW_OP_reg1","DW_OP_reg10","DW_OP_reg11","DW_OP_reg12","DW_OP_reg13","DW_OP_reg14","DW_OP_reg15","DW_OP_reg16","DW_OP_reg17","DW_OP_reg18","DW_OP_reg19","DW_OP_reg2","DW_OP_reg20","DW_OP_reg21","DW_OP_reg22","DW_OP_reg23","DW_OP_reg24","DW_OP_reg25","DW_OP_reg26","DW_OP_reg27","DW_OP_reg28","DW_OP_reg29","DW_OP_reg3","DW_OP_reg30","DW_OP_reg31","DW_OP_reg4","DW_OP_reg5","DW_OP_reg6","DW_OP_reg7","DW_OP_reg8","DW_OP_reg9","DW_OP_regval_type","DW_OP_regx","DW_OP_reinterpret","DW_OP_rot","DW_OP_shl","DW_OP_shr","DW_OP_shra","DW_OP_skip","DW_OP_stack_value","DW_OP_swap","DW_OP_xderef","DW_OP_xderef_size","DW_OP_xderef_type","DW_OP_xor","DW_ORD_col_major","DW_ORD_row_major","DW_RLE_base_address","DW_RLE_base_addressx","DW_RLE_end_of_list","DW_RLE_offset_pair","DW_RLE_start_end","DW_RLE_start_length","DW_RLE_startx_endx","DW_RLE_startx_length","DW_SECT_ABBREV","DW_SECT_INFO","DW_SECT_LINE","DW_SECT_LOCLISTS","DW_SECT_MACRO","DW_SECT_RNGLISTS","DW_SECT_STR_OFFSETS","DW_SECT_V2_ABBREV","DW_SECT_V2_INFO","DW_SECT_V2_LINE","DW_SECT_V2_LOC","DW_SECT_V2_MACINFO","DW_SECT_V2_MACRO","DW_SECT_V2_STR_OFFSETS","DW_SECT_V2_TYPES","DW_TAG_ALTIUM_circ_type","DW_TAG_ALTIUM_mwa_circ_type","DW_TAG_ALTIUM_rev_carry_type","DW_TAG_ALTIUM_rom","DW_TAG_APPLE_property","DW_TAG_BORLAND_Delphi_dynamic_array","DW_TAG_BORLAND_Delphi_set","DW_TAG_BORLAND_Delphi_string","DW_TAG_BORLAND_Delphi_variant","DW_TAG_BORLAND_property","DW_TAG_GNU_BINCL","DW_TAG_GNU_EINCL","DW_TAG_GNU_call_site","DW_TAG_GNU_call_site_parameter","DW_TAG_GNU_formal_parameter_pack","DW_TAG_GNU_template_parameter_pack","DW_TAG_GNU_template_template_param","DW_TAG_HP_Bliss_field","DW_TAG_HP_Bliss_field_set","DW_TAG_HP_array_descriptor","DW_TAG_MIPS_loop","DW_TAG_PGI_interface_block","DW_TAG_PGI_kanji_type","DW_TAG_SUN_class_template","DW_TAG_SUN_codeflags","DW_TAG_SUN_dtor","DW_TAG_SUN_dtor_info","DW_TAG_SUN_f90_interface","DW_TAG_SUN_fortran_vax_structure","DW_TAG_SUN_function_template","DW_TAG_SUN_indirect_inheritance","DW_TAG_SUN_memop_info","DW_TAG_SUN_omp_child_func","DW_TAG_SUN_rtti_descriptor","DW_TAG_SUN_struct_template","DW_TAG_SUN_union_template","DW_TAG_access_declaration","DW_TAG_array_type","DW_TAG_atomic_type","DW_TAG_base_type","DW_TAG_call_site","DW_TAG_call_site_parameter","DW_TAG_catch_block","DW_TAG_class_template","DW_TAG_class_type","DW_TAG_coarray_type","DW_TAG_common_block","DW_TAG_common_inclusion","DW_TAG_compile_unit","DW_TAG_condition","DW_TAG_const_type","DW_TAG_constant","DW_TAG_dwarf_procedure","DW_TAG_dynamic_type","DW_TAG_entry_point","DW_TAG_enumeration_type","DW_TAG_enumerator","DW_TAG_file_type","DW_TAG_formal_parameter","DW_TAG_format_label","DW_TAG_friend","DW_TAG_function_template","DW_TAG_generic_subrange","DW_TAG_hi_user","DW_TAG_immutable_type","DW_TAG_imported_declaration","DW_TAG_imported_module","DW_TAG_imported_unit","DW_TAG_inheritance","DW_TAG_inlined_subroutine","DW_TAG_interface_type","DW_TAG_label","DW_TAG_lexical_block","DW_TAG_lo_user","DW_TAG_member","DW_TAG_module","DW_TAG_namelist","DW_TAG_namelist_item","DW_TAG_namespace","DW_TAG_null","DW_TAG_packed_type","DW_TAG_partial_unit","DW_TAG_pointer_type","DW_TAG_ptr_to_member_type","DW_TAG_reference_type","DW_TAG_restrict_type","DW_TAG_rvalue_reference_type","DW_TAG_set_type","DW_TAG_shared_type","DW_TAG_skeleton_unit","DW_TAG_string_type","DW_TAG_structure_type","DW_TAG_subprogram","DW_TAG_subrange_type","DW_TAG_subroutine_type","DW_TAG_template_alias","DW_TAG_template_type_parameter","DW_TAG_template_value_parameter","DW_TAG_thrown_type","DW_TAG_try_block","DW_TAG_type_unit","DW_TAG_typedef","DW_TAG_union_type","DW_TAG_unspecified_parameters","DW_TAG_unspecified_type","DW_TAG_upc_relaxed_type","DW_TAG_upc_shared_type","DW_TAG_upc_strict_type","DW_TAG_variable","DW_TAG_variant","DW_TAG_variant_part","DW_TAG_volatile_type","DW_TAG_with_stmt","DW_UT_compile","DW_UT_hi_user","DW_UT_lo_user","DW_UT_partial","DW_UT_skeleton","DW_UT_split_compile","DW_UT_split_type","DW_UT_type","DW_VIRTUALITY_none","DW_VIRTUALITY_pure_virtual","DW_VIRTUALITY_virtual","DW_VIS_exported","DW_VIS_local","DW_VIS_qualified","DwAccess","DwAddr","DwAt","DwAte","DwCc","DwCfa","DwChildren","DwDefaulted","DwDs","DwDsc","DwEhPe","DwEnd","DwForm","DwId","DwIdx","DwInl","DwLang","DwLle","DwLnct","DwLne","DwLns","DwMacro","DwOp","DwOrd","DwRle","DwSect","DwSectV2","DwTag","DwUt","DwVirtuality","DwVis","application","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default_lower_bound","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_absent","is_indirect","is_valid_encoding","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","read","signed","skip","u16","unsigned","AbbreviationTagZero","Abs","Address","Address","AddressIndex","AddressOrOffsetPair","AddressOrOffsetPair","AdvanceLoc","And","ArangeEntry","ArangeEntryIter","ArangeHeader","ArangeHeaderIter","Architectural","ArgsSize","ArrayLike","AttributeFormZero","Augmentation","BadBranchTarget","BadHasChildren","BadLength","BadSignedLeb128","BadUnsignedLeb128","BadUtf8","BaseAddress","BaseAddress","BaseAddresses","BaseAddressx","BaseAddressx","Bra","Bytes","Call","CallFrameCFA","CallFrameInstruction","CallFrameInstructionIter","CannotParseOmitPointerEncoding","CfaRule","CfiEntriesIter","CfiInstructionInInvalidContext","Cie","CieOrFde","CommonInformationEntry","Complete","Constant","ConstantIndex","Convert","DataRelativePointerButDataBaseIsUndefined","DebugAddr","DebugAranges","DebugCuIndex","DebugFrame","DebugInfoRef","DebugLineStr","DebugLoc","DebugLocLists","DebugRanges","DebugRngLists","DebugStr","DebugStrOffsets","DebugTuIndex","DefCfa","DefCfaExpression","DefCfaOffset","DefCfaOffsetSf","DefCfaRegister","DefCfaSf","DefaultLocation","Deref","DieReference","Direct","Div","DivisionByZero","Drop","DuplicateAbbreviationCode","DuplicateArange","EhFrame","EhFrameHdr","EhHdrTable","EhHdrTableIter","Empty","Endian","EndianBuf","EndianSlice","EntryValue","Eq","Err","Error","Evaluation","EvaluationResult","EvaluationStorage","ExpectedStringAttributeValue","ExpectedZero","Expression","Expression","Expression","Expression","ExpressionStack","F32","F32","F64","F64","Fde","FrameDescriptionEntry","FrameOffset","FuncRelativePointerInBadContext","Ge","Generic","Generic","Gt","I16","I16","I32","I32","I64","I64","I8","I8","ImplicitPointer","ImplicitPointer","ImplicitValue","Indirect","IntegralTypeRequired","InvalidAddressRange","InvalidExpression","InvalidExpressionTerminator","InvalidImplicitConst","InvalidIndexRow","InvalidIndexSectionCount","InvalidIndexSlotCount","InvalidLocationAddressRange","InvalidPiece","InvalidPushObjectAddress","InvalidShiftExpression","Io","Item","Le","LineRangeZero","LocListIter","Location","LocationListEntry","LocationLists","Lt","MaximumOperationsPerInstructionZero","MinimumInstructionLengthZero","Minus","MissingFileEntryFormatPath","MissingUnitDie","Mod","Mul","Ne","Neg","NegateRaState","NoEntryAtGivenOffset","NoUnwindInfoForAddress","Nop","Nop","Not","NotCieId","NotCiePointer","NotEnoughStackItems","NotFdePointer","Offset","Offset","Offset","Offset","OffsetExtendedSf","OffsetOutOfBounds","OffsetPair","OffsetPair","Ok","OpcodeBaseZero","Operation","OperationIter","Or","ParameterRef","ParsedEhFrameHdr","PartialFrameDescriptionEntry","PcRelativePointerButSectionBaseIsUndefined","Pick","Piece","Piece","Plus","PlusConstant","Pointer","PopWithEmptyStack","PushObjectAddress","Range","RangeLists","RawLocListEntry","RawLocListIter","RawRngListEntry","RawRngListIter","Reader","ReaderOffset","ReaderOffsetId","Register","Register","Register","Register","RegisterAndOffset","RegisterOffset","RegisterRule","RegisterRuleIter","Reinterpret","RememberState","RequiresAtLocation","RequiresBaseType","RequiresCallFrameCfa","RequiresEntryValue","RequiresFrameBase","RequiresIndexedAddress","RequiresMemory","RequiresParameterRef","RequiresRegister","RequiresRelocatedAddress","RequiresTls","Restore","RestoreState","Result","Result","RngListIter","Rot","Rules","SameValue","SameValue","Section","SectionBaseAddresses","SetLoc","Shl","Shr","Shra","SignedConstant","Skip","Stack","Stack","StackFull","StackValue","StartEnd","StartEnd","StartLength","StartLength","StartxEndx","StartxEndx","StartxLength","StartxLength","StoreOnHeap","Swap","TLS","TextRelativePointerButTextBaseIsUndefined","TooManyIterations","TooManyRegisterRules","TypeMismatch","TypedLiteral","U16","U16","U32","U32","U64","U64","U8","U8","Undefined","Undefined","UnexpectedEof","UnexpectedNull","UnitIndex","UnitIndexSection","UnitIndexSectionIterator","UnitOffset","UnitRef","UnknownAbbreviation","UnknownAugmentation","UnknownCallFrameInstruction","UnknownExtendedOpcode","UnknownForm","UnknownIndexSection","UnknownPointerEncoding","UnknownReservedLength","UnknownStandardOpcode","UnknownVersion","UnsignedConstant","UnsupportedAddressIndex","UnsupportedAddressSize","UnsupportedAttributeForm","UnsupportedEvaluation","UnsupportedFieldSize","UnsupportedOffset","UnsupportedOffsetSize","UnsupportedPointerEncoding","UnsupportedRegister","UnsupportedSegmentSize","UnsupportedTypeOperation","UnsupportedUnitType","UnwindContext","UnwindContextStorage","UnwindOffset","UnwindSection","UnwindTable","UnwindTableRow","ValExpression","ValExpression","ValOffset","ValOffset","ValOffsetSf","Value","Value","ValueType","VariableLengthSearchTable","WasmGlobal","WasmLocal","WasmStack","Xor","abs","add","address","address_size","and","as_result","augmentation","begin","bit_offset","bit_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cannot_implement","cannot_implement","cfa","checked_sub","cie","cie_from_offset","cie_from_offset","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","code_alignment_factor","contains","contains","convert","data","data","data_alignment_factor","debug_info_offset","debug_ranges","debug_rnglists","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","description","direct","div","dwo_section_name","dwp_range","eh_frame","eh_frame_hdr","eh_frame_ptr","empty","empty","encoding","encoding","end","end_address","endian","endian","entries","entries","entries","entry_len","entry_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","evaluate","fde_address_encoding","fde_for_address","fde_for_address","fde_for_address","fde_from_offset","fde_from_offset","find","find","find","find","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_encoding","from_i16","from_u16","from_u32","from_u64","from_u64","from_u8","ge","get_address","get_offset","get_offset","get_str","get_str","get_str_offset","gt","has_lsda","hash","hash","hash","hash","hash","header","headers","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","index","index","initial_address","instructions","instructions","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_current_row","into_iter","into_iter","into_u64","is_empty","is_empty","is_empty","is_empty","is_signal_trampoline","is_signal_trampoline","iter","le","len","len","len","length","length","load","location","locations","locations_dwo","lookup","lookup_offset_id","lookup_offset_id","lookup_offset_id","lookup_offset_id","lookup_offset_id","lsda","lsda_encoding","lt","mul","ne","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_in","new_in","next","next","next","next","next","next","next","next","next","next","next","next","next_row","not","nth","offset","offset","offset","offset","offset_from","offset_from","offset_from","offset_from","offset_id","offset_id","operations","or","parse","parse","parse","parse","partial_cmp","partial_cmp","partial_fde_from_offset","partial_fde_from_offset","personality","personality","personality_with_encoding","pointer","pointer_to_offset","range","range","range","range_from","range_to","ranges","raw_locations","raw_locations_dwo","raw_ranges","read_address","read_address","read_f32","read_f32","read_f64","read_f64","read_i16","read_i16","read_i32","read_i32","read_i64","read_i64","read_i8","read_i8","read_initial_length","read_initial_length","read_length","read_length","read_null_terminated_slice","read_null_terminated_slice","read_offset","read_offset","read_sized_offset","read_sized_offset","read_sleb128","read_sleb128","read_slice","read_slice","read_u16","read_u16","read_u32","read_u32","read_u64","read_u64","read_u8","read_u8","read_u8_array","read_u8_array","read_uint","read_uint","read_uleb128","read_uleb128","read_uleb128_u16","read_uleb128_u16","read_uleb128_u32","read_uleb128_u32","read_word","read_word","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","register","registers","reinterpret","rem","resume_with_at_location","resume_with_base_type","resume_with_call_frame_cfa","resume_with_entry_value","resume_with_frame_base","resume_with_indexed_address","resume_with_memory","resume_with_parameter_ref","resume_with_register","resume_with_relocated_address","resume_with_tls","return_address_register","rows","saved_args_size","section","section","section_count","section_name","sections","segment","segment_size","set_address_size","set_address_size","set_debug_ranges","set_eh_frame","set_eh_frame_hdr","set_got","set_initial_value","set_max_iterations","set_object_address","set_segment_size","set_text","set_vendor","set_vendor","shl","shr","shra","size","size_in_bits","skip","skip","skip_leb128","skip_leb128","slice","slot_count","split","split","split_at","start_address","sub","table","text","to_string","to_u64","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_count","unwind_info_for_address","unwind_info_for_address","unwind_info_for_address","unwind_info_for_address","value_type","version","version","wrapping_add","xcoff_section_name","xor","address","delta","dest_register","expression","expression","expression","factored_offset","factored_offset","factored_offset","factored_offset","factored_offset","factored_offset","offset","offset","register","register","register","register","register","register","register","register","register","register","register","register","size","src_register","offset","register","address","base_type","base_type","index","register","relocate","size","space","address","byte_offset","register","value","value","value","address","base_type","base_type","base_type","base_type","base_type","bit_offset","byte_offset","data","expression","index","index","index","index","index","index","offset","offset","offset","offset","register","register","size","size_in_bits","space","target","target","value","value","value","value","value","addr","addr","begin","begin","begin","begin","begin","begin","data","data","data","data","data","data","data","end","end","end","end","length","length","addr","addr","begin","begin","begin","begin","begin","begin","end","end","end","end","length","length"],"q":[[0,"gimli"],[1208,"gimli::constants"],[2566,"gimli::leb128"],[2567,"gimli::leb128::read"],[2571,"gimli::read"],[3898,"gimli::read::CallFrameInstruction"],[3926,"gimli::read::CfaRule"],[3928,"gimli::read::EvaluationResult"],[3936,"gimli::read::Location"],[3942,"gimli::read::Operation"],[3974,"gimli::read::RawLocListEntry"],[3995,"gimli::read::RawRngListEntry"],[4009,"core::option"],[4010,"core::clone"],[4011,"core::cmp"],[4012,"core::cmp"],[4013,"core::fmt"],[4014,"core::hash"],[4015,"core::any"],[4016,"core::fmt"],[4017,"core::default"],[4018,"core::ops::function"],[4019,"core::ops::range"],[4020,"core::convert"]],"d":["","","","","","","","","","","","","","","","","ARM 64-bit (AArch64) architecture specific definitions.","AAarch64 extensions.","","","","","","","","","ARM architecture specific definitions.","Big endian byte order.","Big endian byte order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>.debug_abbrev</code> section.","An offset into the <code>.debug_abbrev</code> section.","The <code>.debug_addr</code> section.","An offset to a set of entries in the <code>.debug_addr</code> section.","An index into a set of addresses in the <code>.debug_addr</code> …","The <code>.debug_aranges</code> section.","An offset into the <code>.debug_aranges</code> section.","The <code>.debug_cu_index</code> section.","The <code>.debug_frame</code> section.","An offset into the <code>.debug_frame</code> section.","The <code>.debug_info</code> section.","An offset into the <code>.debug_info</code> section.","An offset into the <code>.debug_info</code> section.","The <code>.debug_line</code> section.","An offset into the <code>.debug_line</code> section.","The <code>.debug_line_str</code> section.","An offset into the <code>.debug_line_str</code> section.","The <code>.debug_loc</code> section.","The <code>.debug_loclists</code> section.","An offset to a set of location list offsets in the …","An index into a set of location list offsets in the …","The <code>.debug_macinfo</code> section.","An offset into the <code>.debug_macinfo</code> section.","The <code>.debug_macro</code> section.","An offset into the <code>.debug_macro</code> section.","The <code>.debug_pubnames</code> section.","The <code>.debug_pubtypes</code> section.","The <code>.debug_ranges</code> section.","The <code>.debug_rnglists</code> section.","An offset to a set of range list offsets in the …","An index into a set of range list offsets in the …","The <code>.debug_str</code> section.","An offset into the <code>.debug_str</code> section.","The <code>.debug_str_offsets</code> section.","An offset to a set of entries in the <code>.debug_str_offsets</code> …","An index into a set of entries in the <code>.debug_str_offsets</code> …","The <code>.debug_tu_index</code> section.","A type signature as used in the <code>.debug_types</code> section.","The <code>.debug_types</code> section.","An offset into the <code>.debug_types</code> section.","An offset into the <code>.debug_types</code> section.","A default set of extensions, including some common GNU …","32-bit DWARF","64-bit DWARF","The “type” of file with DWARF debugging information. …","A .dwo split DWARF file.","An optionally-provided implementation-defined compilation …","","","","","","","","","","","","The <code>.eh_frame</code> section.","The <code>.eh_frame_hdr</code> section.","An offset into the <code>.eh_frame</code> section.","Encoding parameters that are commonly used for multiple …","A trait describing the endianity of some buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the format of a compilation unit is 32- or 64-bit.","","","","","","","","","","","","","","","","","","Encoding parameters for a line number program.","Little endian byte order.","Little endian byte order.","An offset into either the <code>.debug_loc</code> section or the …","LoongArch architecture specific definitions.","","","","","","","","","","","","","","","","","","","A normal executable or object file.","The native endianity for the target platform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An offset into either the <code>.debug_ranges</code> section or the …","An offset into either the <code>.debug_ranges</code> section or the …","A DWARF register number.","RISC-V architecture specific definitions.","Byte order that is selectable at runtime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An identifier for a DWARF section.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An offset into the <code>.debug_info</code> or <code>.debug_types</code> sections.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which vendor extensions to support.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Intel i386 architecture specific definitions.","AMD64 architecture specific definitions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of an address.","Returns the <code>DebugInfoOffset</code> inside, or <code>None</code> otherwise.","Returns the <code>DebugTypesOffset</code> inside, or <code>None</code> otherwise.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constant definitions.","","","","","","Returns a <code>DebugLocListsBase</code> with the default value of …","Returns a <code>DebugRngListsBase</code> with the default value of …","Returns a <code>DebugStrOffsetsBase</code> with the default value of …","The initial value of the <code>is_stmt</code> register.","Returns the ELF section name for this kind, when found in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the DWARF format is 32- or 64-bit.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Return the serialized size of an initial length field for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true for big endian byte order.","","","","Return true for little endian byte order.","Return true for little endian byte order.","Read and write DWARF’s “Little Endian Base 128” …","The minimum value which a special opcode can add to the …","The range of values which a special opcode can add to the …","The maximum number of individual operations that may be …","The size in bytes of the smallest target machine …","Returns the ELF section name for this kind.","Converts a register name into a register number.","Converts a register name into a register number.","Converts a register name into a register number.","Converts a register name into a register number.","Converts a register name into a register number.","Converts a register name into a register number.","","","","","","Read DWARF debugging information.","Reads a 32 bit floating point number from <code>buf</code>.","Reads a 32 bit floating point number from <code>buf</code>.","Reads a 32 bit floating point number from <code>buf</code>.","Reads a 32 bit floating point number from <code>buf</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a signed 64 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from <code>buf</code>.","Read an unsigned n-bytes integer u64.","Read an unsigned n-bytes integer u64.","The name of a register, or <code>None</code> if the register number is …","The name of a register, or <code>None</code> if the register number is …","The name of a register, or <code>None</code> if the register number is …","The name of a register, or <code>None</code> if the register number is …","The name of a register, or <code>None</code> if the register number is …","The name of a register, or <code>None</code> if the register number is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The DWARF version of the header.","Return the natural word size for the format","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Returns the XCOFF section name for this kindhe encodings of the constants used in the …","The encodings of the constants used in the …","The attribute encodings for DIE attributes.","The encodings of the constants used in the <code>DW_AT_encoding</code> …","The encodings of the constants used in the …","The opcode for a call frame instruction.","The child determination encodings for DIE attributes.","The encodings of the constants used in the <code>DW_AT_defaulted</code> …","The encodings of the constants used in the …","The encodings of the constants used in the <code>DW_AT_discr_list</code>…","Pointer encoding used by <code>.eh_frame</code>.","The encodings of the constants used in the <code>DW_AT_endianity</code> …","The attribute form encodings for DIE attributes.","The encodings of the constants used in the …","Name index attribute encodings.","The encodings of the constants used in the <code>DW_AT_inline</code> …","The encodings of the constants used in the <code>DW_AT_language</code> …","The encodings of the constants used in location list …","The encodings for the line number header entry formats.","The encodings for the extended opcodes for line number …","The encodings for the standard opcodes for line number …","The encodings for macro information entry types.","The encodings for DWARF expression operations.","The encodings of the constants used in the <code>DW_AT_ordering</code> …","Range list entry encoding values.","The section type field in a <code>.dwp</code> unit index.","The section type field in a <code>.dwp</code> unit index with version 2.","The tag encodings for DIE attributes.","The unit type field in a unit header.","The encodings of the constants used in the <code>DW_AT_virtuality</code>…","The encodings of the constants used in the <code>DW_AT_visibility</code>…","Get the pointer encoding’s application.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the default DW_AT_lower_bound for this language.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the pointer encoding’s format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this encoding the absent pointer encoding?","Is this coding indirect? If so, its encoded value is the …","Is this a known, valid pointer encoding?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A module for reading signed and unsigned integers that …","Read a signed LEB128 number from the given <code>Reader</code> and …","Read bytes until the LEB128 continuation bit is not set.","Read an LEB128 u16 from the given <code>Reader</code> and return it or …","Read an unsigned LEB128 number from the given <code>Reader</code> and …","An abbreviation declared that its tag is zero, but zero is …","Take the absolute value of the top of the stack.","Relocate the address if needed, and push it on the stack.","The piece is found in memory.","Read the address at the given index in `.debug_addr, …","A location from DWARF version &lt;= 4.","A range from DWARF version &lt;= 4.","The <code>AdvanceLoc</code> instruction is used for all of …","Bitwise <code>and</code> of the top two values on the stack.","A single parsed arange.","An iterator over the aranges from a <code>.debug_aranges</code> section.","A header for a set of entries in the <code>.debug_arange</code> section.","An iterator over the headers of a <code>.debug_aranges</code> section.","“The rule is defined externally to this specification by …","DW_CFA_GNU_args_size","Marker trait for types that can be used as backing storage …","An attribute specification declared that its form is zero, …","We support the z-style augmentation defined by <code>.eh_frame</code>.","Invalid branch target for a DW_OP_bra or DW_OP_skip.","The abbreviation’s has-children byte was not one of …","The specified length is impossible.","An error parsing a signed LEB128 value.","An error parsing an unsigned LEB128 value.","Found an invalid UTF-8 string.","DW_LLE_base_address","DW_RLE_base_address","Optional base addresses for the relative <code>DW_EH_PE_*</code> …","DW_LLE_base_addressx","DW_RLE_base_addressx","Branch to the target location if the top of stack is …","The piece is represented by some constant bytes.","Evaluate a DWARF expression as a subroutine.  The …","Compute the call frame CFA and push it on the stack.","A parsed call frame instruction.","A lazy iterator parsing call frame instructions.","Cannot parse a pointer with a <code>DW_EH_PE_omit</code> encoding.","The canonical frame address (CFA) recovery rules.","An iterator over CIE and FDE entries in a <code>.debug_frame</code> or …","Encountered a call frame instruction in a context in which …","This CFI entry is a <code>CommonInformationEntry</code>.","Either a <code>CommonInformationEntry</code> (CIE) or a …","A Common Information Entry holds information that is …","The <code>Evaluation</code> is complete, and <code>Evaluation::result()</code> can …","This is a pseudo-register with a constant value.","Read the address at the given index in `.debug_addr, and …","Pop the top stack entry, convert it to a different type, …","Found a data relative pointer, but the data base is …","The raw contents of the <code>.debug_addr</code> section.","The <code>DebugAranges</code> struct represents the DWARF address range …","The data in the <code>.debug_cu_index</code> section of a <code>.dwp</code> file.","<code>DebugFrame</code> contains the <code>.debug_frame</code> section’s frame …","A section-relative reference.","The <code>DebugLineStr</code> struct represents the DWARF strings found …","The raw contents of the <code>.debug_loc</code> section.","The <code>DebugLocLists</code> struct represents the DWARF data found …","The raw contents of the <code>.debug_ranges</code> section.","The <code>DebugRngLists</code> struct represents the contents of the …","The <code>DebugStr</code> struct represents the DWARF strings found in …","The raw contents of the <code>.debug_str_offsets</code> section.","The data in the <code>.debug_tu_index</code> section of a <code>.dwp</code> file.","DW_CFA_def_cfaThe DW_CFA_def_cfa instruction takes two …","DW_CFA_def_cfa_expressionThe DW_CFA_def_cfa_expression …","DW_CFA_def_cfa_offsetThe DW_CFA_def_cfa_offset instruction …","DW_CFA_def_cfa_offset_sfThe DW_CFA_def_cfa_offset_sf …","DW_CFA_def_cfa_registerThe DW_CFA_def_cfa_register …","DW_CFA_def_cfa_sfThe DW_CFA_def_cfa_sf instruction takes …","DW_LLE_default_location","Dereference the topmost value of the stack.","A reference to a DIE, either relative to the current CU or …","This value is the decoded pointer value.","Divide the top two values on the stack.","Division or modulus by zero when evaluating an expression.","Drop an item from the stack.","Found an abbreviation code that has already been used.","Found a duplicate arange.","<code>EhFrame</code> contains the frame unwinding information needed …","<code>EhFrameHdr</code> contains the information about the <code>.eh_frame_hdr</code>…","The CFI binary search table that is an optional part of …","An iterator for <code>.eh_frame_hdr</code> section’s binary search …","The piece is empty.  Ordinarily this means the piece has …","The endianity of bytes that are read.","<code>EndianBuf</code> has been renamed to <code>EndianSlice</code>. For ease of …","A <code>&amp;[u8]</code> slice with endianity metadata.","Evaluate an expression at the entry to the current …","Compare the top two stack values for equality.","Contains the error value","An error that occurred when parsing.","A DWARF expression evaluator.","The state of an <code>Evaluation</code> after evaluating a DWARF …","Specification of what storage should be used for <code>Evaluation</code>…","Expected an attribute value to be a string form.","Expected a zero, found something else.","The bytecode for a DWARF expression or location …","The CFA is obtained by evaluating this <code>Reader</code> as a DWARF …","“The previous value of this register is located at the …","DW_CFA_expressionThe DW_CFA_expression instruction takes …","The storage used for the expression stack.","32-bit floating point type.","A 32-bit floating point value.","64-bit floating point type.","A 64-bit floating point value.","This CFI entry is a <code>FrameDescriptionEntry</code>, however fully …","A <code>FrameDescriptionEntry</code> is a set of CFA instructions for …","Compute the frame base (using <code>DW_AT_frame_base</code>), add the …","Found a function relative pointer in a context that does …","Compare the top two stack values using <code>&gt;=</code>.","The generic type, which is address-sized and of …","A generic value, which is address-sized and of unspecified …","Compare the top two stack values using <code>&gt;</code>.","Signed 16-bit integer type.","A signed 16-bit integer value.","Signed 32-bit integer type.","A signed 32-bit integer value.","Signed 64-bit integer type.","A signed 64-bit integer value.","Signed 8-bit integer type.","A signed 8-bit integer value.","The object is a pointer to a value which has no actual …","The piece is a pointer to a value which has no actual …","The object has no location, but has a known constant value.","This value is <em>not</em> the pointer value, but points to the …","An expression operation required an integral type but saw a","The end of an address range was before the beginning.","An unrecognized operation was found while parsing a DWARF …","An expression-terminating operation was followed by …","<code>DW_FORM_implicit_const</code> used in an invalid context.","Invalid hash row in <code>.dwp</code> index.","Invalid section count in <code>.dwp</code> index.","Invalid slot count in <code>.dwp</code> index.","The end offset of a loc list entry was before the …","The expression had a piece followed by an expression …","DW_OP_push_object_address used but no address passed in.","The shift value in an expression must be a non-negative …","An I/O error occurred while reading.","Type of the elements being stored.","Compare the top two stack values using <code>&lt;=</code>.","The line range must not be zero.","An iterator over a location list.","A single location of a piece of the result of a DWARF …","A location list entry from the <code>.debug_loc</code> or …","The DWARF data found in <code>.debug_loc</code> and <code>.debug_loclists</code> …","Compare the top two stack values using <code>&lt;</code>.","The maximum operations per instruction must not be zero.","The minimum instruction length must not be zero.","Subtract the top two values on the stack.","Missing DW_LNCT_path in file entry format.","A compilation unit or type unit is missing its top level …","Modulus of the top two values on the stack.","Multiply the top two values on the stack.","Compare the top two stack values using <code>!=</code>.","Negate the top of the stack.","DW_CFA_AARCH64_negate_ra_state","Did not find an entry at the given offset.","Do not have unwind info for the given address.","DW_CFA_nopThe DW_CFA_nop instruction has no operands and …","No operation.","Bitwise <code>not</code> of the top of the stack.","Expected to find the CIE ID, but found something else.","Expected to find a pointer to a CIE, but found the CIE ID …","Not enough items on the stack when evaluating an …","Expected to find a pointer to an FDE, but found a CIE …","“The previous value of this register is saved at the …","The <code>Offset</code> instruction represents both <code>DW_CFA_offset</code> and …","The offset type associated with this CFI section. Either …","The type used for offsets and lengths.","DW_CFA_offset_extended_sfThe DW_CFA_offset_extended_sf …","The given offset is out of bounds.","DW_LLE_offset_pair","DW_RLE_offset_pair","Contains the success value","The opcode base must not be zero.","A single decoded DWARF expression operation.","An iterator for the operations in an expression.","Bitwise <code>or</code> of the top two values on the stack.","This represents a parameter that was optimized out.","<code>ParsedEhFrameHdr</code> contains the parsed information from the …","A partially parsed <code>FrameDescriptionEntry</code>.","Found a PC relative pointer, but the section base is …","Pick an item from the stack and push it on top of the …","The description of a single piece of the result of a DWARF …","Terminate a piece.","Add the top two values on the stack.","Add a constant to the topmost value on the stack.","A decoded pointer.","When evaluating call frame instructions, found a …","Push the object address on the stack.","An address range from the <code>.debug_ranges</code>, <code>.debug_rnglists</code>, …","The DWARF data found in <code>.debug_ranges</code> and <code>.debug_rnglists</code> …","A raw entry in .debug_loclists.","A raw iterator over a location list.","A raw entry in .debug_rnglists","A raw iterator over an address range list.","A trait for reading the data from a DWARF section.","A trait for offsets with a DWARF section.","An identifier for an offset within a section reader.","“The previous value of this register is stored in …","DW_CFA_registerThe DW_CFA_register instruction takes two …","Indicate that this piece’s location is in the given …","The piece is found in a register.","The CFA is given offset from the given register’s value.","Find the value of the given register, add the offset, and …","An entry in the abstract CFI table that describes how to …","An unordered iterator for register rules.","Pop the top stack entry, reinterpret the bits in its value …","DW_CFA_remember_stateThe DW_CFA_remember_state instruction …","The <code>Evaluation</code> needs the DWARF expression at the given …","The <code>Evaluation</code> needs the <code>ValueType</code> for the base type DIE at","The <code>Evaluation</code> needs the CFA to proceed further.  Once the …","The <code>Evaluation</code> needs the value produced by evaluating a …","The <code>Evaluation</code> needs the frame base address to proceed …","The <code>Evaluation</code> needs an address from the <code>.debug_addr</code> …","The <code>Evaluation</code> needs a value from memory to proceed …","The <code>Evaluation</code> needs the value of the parameter at the …","The <code>Evaluation</code> needs a value from a register to proceed …","The <code>Evaluation</code> needs an address to be relocated to proceed …","The <code>Evaluation</code> needs a value from TLS to proceed further.  …","The <code>Restore</code> instruction represents both <code>DW_CFA_restore</code> and …","DW_CFA_restore_stateThe DW_CFA_restore_state instruction …","The result of a parse.","The storage used for the results.","An iterator over an address range list.","Rotate the top three stack items.","The storage used for register rules in a unwind table row.","This register has not been modified from the previous …","DW_CFA_same_valueThe DW_CFA_same_value instruction takes a …","A convenience trait for loading DWARF sections from object …","Optional base addresses for the relative <code>DW_EH_PE_*</code> …","DW_CFA_set_locThe DW_CFA_set_loc instruction takes a …","Logical left shift of the 2nd value on the stack by the …","Right shift of the 2nd value on the stack by the number of …","Arithmetic left shift of the 2nd value on the stack by the …","Push a signed constant value on the stack.  This handles …","Unconditional branch to the target location.","The storage used for unwind table row stack.","The storage used for the evaluation stack.","Attempted to push onto the CFI or evaluation stack, but it …","The object has no location, but its value is at the top of …","DW_LLE_start_end","DW_RLE_start_end","DW_LLE_start_length","DW_RLE_start_length","DW_LLE_startx_endx","DW_RLE_startx_endx","DW_LLE_startx_length","DW_RLE_startx_length","Indicates that storage should be allocated on heap.","Swap the top two stack items.","Compute the address of a thread-local variable and push it …","Found a <code>.text</code> relative pointer, but the <code>.text</code> base is …","Too many iterations to compute the expression.","The CFI program defined more register rules than we have …","An expression operation used mismatching types.","Interpret the value bytes as a constant of a given type, …","Unsigned 16-bit integer type.","An unsigned 16-bit integer value.","Unsigned 32-bit integer type.","An unsigned 32-bit integer value.","Unsigned 64-bit integer type.","An unsigned 64-bit integer value.","Unsigned 8-bit integer type.","An unsigned 8-bit integer value.","A register that has this rule has no recoverable value in …","DW_CFA_undefinedThe DW_CFA_undefined instruction takes a …","Hit the end of input before it was expected.","Read a null entry before it was expected.","The partially parsed index from a <code>DebugCuIndex</code> or …","Information about a unit’s contribution to a section in …","An iterator over the section offsets and sizes for a row …","An offset into the current compilation or type unit.","A CU-relative reference.","Found a record with an unknown abbreviation code.","Found an unknown CFI augmentation.","An unknown DW_CFA_* instruction.","Found an unknown extended opcode.","Found an unknown <code>DW_FORM_*</code> type.","Unknown section type in <code>.dwp</code> index.","The given pointer encoding is either unknown or invalid.","Found an unknown reserved length value.","Found an unknown standard opcode.","Found an unknown DWARF version.","Push an unsigned constant value on the stack.  This …","Ranges using AddressIndex are not supported yet.","The specified address size is not supported.","A DIE attribute used an unsupported form.","An unsupported operation was found while evaluating a …","The specified field size is not supported.","An offset value was larger than the maximum supported …","The specified offset size is not supported.","We do not support the given pointer encoding yet.","Registers larger than <code>u16</code> are not supported.","Nonzero segment selector sizes aren’t supported yet.","An expression operation used types that are not supported.","The <code>DW_UT_*</code> value for this unit is not supported yet.","Common context needed when evaluating the call frame …","Specification of what storage should be used for …","An offset into an <code>UnwindSection</code>.","A section holding unwind information: either <code>.debug_frame</code> …","The <code>UnwindTable</code> iteratively evaluates a …","A row in the virtual unwind table that describes how to …","“The previous value of this register is the value …","DW_CFA_val_expressionThe DW_CFA_val_expression instruction …","“The previous value of this register is the value CFA+N …","DW_CFA_val_offsetThe DW_CFA_val_offset instruction takes …","DW_CFA_val_offset_sfThe DW_CFA_val_offset_sf instruction …","The value of an entry on the DWARF stack.","The piece has no location but its value is known.","The type of an entry on the DWARF stack.","The <code>.eh_frame_hdr</code> binary search table claims to be …","The index of a global.","The index of a local in the currently executing function.","The index of an item on the operand stack.","Bitwise <code>xor</code> of the top two values on the stack.","Perform an absolute value operation.","Perform an addition operation.","Return the beginning address of this arange.","The size of addresses (in bytes) in this CIE.","Perform a bitwise and operation.","Get the result of this <code>Evaluation</code>.","Get the augmentation data, if any exists.","The beginning address of the range.","If given, the bit offset of the piece within the location. …","The size in bits of a value for this type.","Create a <code>DebugAddr</code> section that references the data in <code>self</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>DebugAranges</code> section that references the data in …","","","","","","","","","","","","","Create a <code>LocationLists</code> that references the data in <code>self</code>.","","","","","","","","","","","","","","","Create a <code>RangeLists</code> that references the data in <code>self</code>.","","","","","","","Create a <code>DebugStr</code> section that references the data in <code>self</code>.","","Create a <code>DebugStrOffsets</code> section that references the data …","Create a <code>DebugLineStr</code> section that references the data in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This trait cannot be implemented if “read” feature is …","","Get the canonical frame address (CFA) recovery rule for …","Checked subtraction. Computes <code>self - other</code>.","Get a reference to this FDE’s CIE.","Parse the <code>CommonInformationEntry</code> at the given offset.","Parse the <code>CommonInformationEntry</code> at the given offset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A constant that is factored out of all advance location …","Return <code>true</code> if the given address is within this FDE, <code>false</code> …","Return <code>true</code> if the given <code>address</code> is within this row’s …","Convert a <code>Value</code> to the given <code>value_type</code>.","The base address for data relative pointers.","The data containing a single location description.","A constant that is factored out of certain offset …","Return the offset into the .debug_info section for this …","Return the <code>.debug_ranges</code> section.","Return the <code>.debug_rnglists</code> section.","","","","","","","","","","","","","","","","","","","","","","","A short description of the error.","Return the direct pointer value.","Perform a division operation.","Returns the ELF section name (if any) for this type when …","Returns the subrange of the section that is the …","The base addresses to use for pointers in the <code>.eh_frame</code> …","The base addresses to use for pointers in the <code>.eh_frame_hdr</code>…","Returns the address of the binary’s <code>.eh_frame</code> section.","Set the number of bytes remaining to zero.","","Return the encoding parameters for this CIE.","Return the encoding parameters for this set of entries.","The first address past the end of the range.","Get the end PC address where this row’s register rules …","Return the endianity of bytes that are read.","","Iterate over the <code>CommonInformationEntry</code>s and …","Iterate over the <code>CommonInformationEntry</code>s and …","Return the arange entries in this set.","A constant that gives the number of bytes of the CIE …","A constant that gives the number of bytes of the header and","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Perform the <code>==</code> relational operation.","","","Evaluate a DWARF expression.  This method should only ever …","Return the encoding of the addresses for this CIE’s FDEs.","Find the <code>FrameDescriptionEntry</code> for the given address.","Find the <code>FrameDescriptionEntry</code> for the given address.","Returns a parsed FDE for the given address, or …","Parse the <code>FrameDescriptionEntry</code> at the given offset.","Parse the <code>FrameDescriptionEntry</code> at the given offset.","Find the index of the first occurrence of the given byte. …","","Find the first occurrence of a byte in the slice, and …","Find <code>id</code> in the index hash table, and return the row index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a <code>ValueType</code> from the attributes of a base type …","Convert an i16 to an offset.","Convert a u16 to an offset.","Convert a u32 to an offset.","Convert a u64 to an offset.","Create a <code>Value</code> with the given <code>value_type</code> from a <code>u64</code> value.","Convert a u8 to an offset.","Perform the <code>&gt;=</code> relational operation.","Returns the address at the given <code>base</code> and <code>index</code>.","Returns the <code>.debug_loclists</code> offset at the given <code>base</code> and …","Returns the <code>.debug_rnglists</code> offset at the given <code>base</code> and …","Lookup a string from the <code>.debug_str</code> section by …","Lookup a string from the <code>.debug_line_str</code> section by …","Returns the <code>.debug_str</code> offset at the given <code>base</code> and <code>index</code>.","Perform the <code>&gt;</code> relational operation.","True if this CIE’s FDEs have a LSDA.","","","","","","Get the header at the given offset.","Iterate the sets of entries in the <code>.debug_aranges</code> section.","Returns the section id for this type.","","","","","","","","","","","","","","","Parse the index header.","Parse the index header.","The first address for which this entry has unwind …","Iterate over this CIE’s initial instructions.","Iterate over this FDE’s instructions.","Convert an <code>UnwindOffset&lt;T&gt;</code> into a <code>T</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the current row with the lifetime of the context.","","","Convert an offset to a u64.","Return true if the number of bytes remaining is zero.","Return true if the number of bytes remaining is zero.","","Return true if the piece is empty.","True if this CIE’s FDEs are trampolines for signal …","Return true if this FDE’s function is a trampoline for a …","Return an iterator that can walk the <code>.eh_frame_hdr</code> table.","Perform the `&lt;= relational operation.","Return the number of bytes remaining.","The number of bytes of instructions that this entry has …","","Return the length of this set of entries, including the …","Return the length of this arange.","Try to load the section using the given loader function.","Where this piece is to be found.","Iterate over the <code>LocationListEntry</code>s starting at the given …","Similar to <code>locations</code>, but with special handling for .dwo …","<em>Probably</em> returns a pointer to the FDE for the given …","Return the offset corresponding to the given <code>id</code> if it is …","Returns the <code>Reader</code> for this section.","","Call <code>Reader::lookup_offset_id</code> for each section, and return …","Call <code>Reader::lookup_offset_id</code> for each section, and return …","The address of this FDE’s language-specific data area …","Return the encoding of the LSDA address for this CIE’s …","Perform the `&lt; relational operation.","Perform a multiplication operation.","Perform the `!= relational operation.","Perform a negation operation.","Construct a new <code>DebugFrame</code> instance from the data in the …","Constructs a new <code>EhFrameHdr</code> instance from the data in the …","Construct a new <code>EhFrame</code> instance from the data in the …","Construct a new <code>UnwindTable</code> for the given …","Construct a new <code>EndianSlice</code> with the given slice and …","Construct a new <code>DebugAranges</code> instance from the data in the …","Construct a new <code>DebugCuIndex</code> instance from the data in the …","Construct a new <code>DebugTuIndex</code> instance from the data in the …","Construct a new <code>DebugLoc</code> instance from the data in the …","Construct a new <code>DebugLocLists</code> instance from the data in …","Construct a new <code>LocationLists</code> instance from the data in …","Construct a new <code>DebugRanges</code> instance from the data in the …","Construct a new <code>DebugRngLists</code> instance from the data in the","Construct a new <code>RangeLists</code> instance from the data in the …","Construct a new <code>DebugStr</code> instance from the data in the …","Construct a new <code>DebugLineStr</code> instance from the data in the …","Construct a new call frame unwinding context.","Create a new DWARF expression evaluator.","Yield the next entry in the <code>EhHdrTableIter</code>.","Advance the iterator to the next entry.","","Parse the next call frame instruction.","Advance the iterator to the next header.","Advance the iterator and return the next arange.","","Advance the iterator to the next location.","Advance the iterator to the next location.","Read the next operation in an expression.","Advance the iterator to the next range.","Advance the iterator to the next range.","Evaluate call frame instructions until the next row of the …","Perform a bitwise not operation.","Yield the nth entry in the <code>EhHdrTableIter</code>","Get the offset of this entry from the start of its …","Get the offset of this entry from the start of its …","Return the offset of this header within the <code>.debug_aranges</code> …","The base offset of the unit’s contribution to the …","Return the offset of this reader’s data relative to the …","","Return the offset of the start of the slice relative to …","Return the current byte offset of the iterator.","Return an identifier for the current reader offset.","","Return an iterator for the operations in the expression.","Perform a bitwise or operation.","Parses this <code>EhFrameHdr</code> to a <code>ParsedEhFrameHdr</code>.","Fully parse this FDE.","Parse a single DWARF expression operation.","Read a <code>Value</code> with the given <code>value_type</code> from a <code>Reader</code>.","","","Parse the <code>PartialFrameDescriptionEntry</code> at the given offset.","Parse the <code>PartialFrameDescriptionEntry</code> at the given offset.","Return the address of the personality routine handler for …","Return the address of the FDE’s function’s personality …","Return the encoding and address of the personality routine …","Return the pointer value, discarding indirectness …","Convert a <code>Pointer</code> to a section offset.","Take the given <code>start..end</code> range of the underlying slice …","Return the range.","The address range that this location is valid for.","Take the given <code>start..</code> range of the underlying slice and …","Take the given <code>..end</code> range of the underlying slice and …","Iterate over the <code>Range</code> list entries starting at the given …","Iterate over the raw <code>LocationListEntry</code>s starting at the …","Similar to <code>raw_locations</code>, but with special handling for …","Iterate over the <code>RawRngListEntry</code>ies starting at the given …","Read an address-sized integer, and return it as a <code>u64</code>.","Read an address-sized integer, and return it as a <code>u64</code>.","Read a f32.","Read a f32.","Read a f64.","Read a f64.","Read an i16.","Read an i16.","Read an i32.","Read an i32.","Read an i64.","Read an i64.","Read an i8.","Read an i8.","Read an initial length field.","Read an initial length field.","Parse a word-sized section length according to the DWARF …","Parse a word-sized section length according to the DWARF …","Read a null-terminated slice, and return it (excluding the …","Read a null-terminated slice, and return it (excluding the …","Parse a word-sized section offset according to the DWARF …","Parse a word-sized section offset according to the DWARF …","Parse a section offset of the given size.","Parse a section offset of the given size.","Read a signed LEB128 encoded integer.","Read a signed LEB128 encoded integer.","Read exactly <code>buf.len()</code> bytes into <code>buf</code>.","","Read a u16.","Read a u16.","Read a u32.","Read a u32.","Read a u64.","Read a u64.","Read a u8.","Read a u8.","Read a u8 array.","Read a u8 array.","Read an unsigned n-bytes integer u64.","Read an unsigned n-bytes integer u64.","Read an unsigned LEB128 encoded integer.","Read an unsigned LEB128 encoded integer.","Read an unsigned LEB128 encoded u16.","Read an unsigned LEB128 encoded u16.","Read an unsigned LEB128 encoded u32.","Read an unsigned LEB128 encoded u32.","Parse a word-sized integer according to the DWARF format.","Parse a word-sized integer according to the DWARF format.","Returns the <code>Reader</code> for this section.","","","","","","","","","","","","","","","Get the register recovery rule for the given register …","Iterate over all defined register <code>(number, rule)</code> pairs.","Reinterpret the bits in a <code>Value</code> as the given <code>value_type</code>.","Perform a remainder operation.","Resume the <code>Evaluation</code> with the provided <code>bytes</code>.  This will …","Resume the <code>Evaluation</code> with the provided <code>base_type</code>.  This …","Resume the <code>Evaluation</code> with the provided <code>cfa</code>.  This will …","Resume the <code>Evaluation</code> with the provided <code>entry_value</code>.  This …","Resume the <code>Evaluation</code> with the provided <code>frame_base</code>.  This …","Resume the <code>Evaluation</code> with the provided indexed <code>address</code>.  …","Resume the <code>Evaluation</code> with the provided memory <code>value</code>.  …","Resume the <code>Evaluation</code> with the provided <code>parameter_value</code>.  …","Resume the <code>Evaluation</code> with the provided <code>register</code> value.  …","Resume the <code>Evaluation</code> with the provided relocated <code>address</code>. …","Resume the <code>Evaluation</code> with the provided <code>value</code>.  This will …","An unsigned … constant that indicates which column in …","Return the table of unwind information for this FDE.","Returns the amount of args currently on the stack.","The address of the section containing the pointer.","The section kind.","Return the number of sections.","Returns the ELF section name for this type.","Return the section offsets and sizes for the given row …","Return the segment selector of this arange.","Return the segment size for this set of entries.","Set the size of a target address in bytes.","Set the size of a target address in bytes.","Replace the <code>.debug_ranges</code> section.","Set the <code>.eh_frame</code> section base address.","Set the <code>.eh_frame_hdr</code> section base address.","Set the <code>.got</code> section base address.","Set an initial value to be pushed on the DWARF expression …","Set the maximum number of iterations to be allowed by the …","Set the enclosing object’s address, as used by …","Set the size of a segment selector in bytes.","Set the <code>.text</code> section base address.","Set the vendor extensions to use.","Set the vendor extensions to use.","Perform a shift left operation.","Perform a logical shift right operation.","Perform an arithmetic shift right operation.","The size of the unit’s contribution to the section.","If given, the size of the piece in bits.  If <code>None</code>, there …","Discard the specified number of bytes.","","Skip a LEB128 encoded integer.","Skip a LEB128 encoded integer.","Return a reference to the raw slice.","Return the number of slots.","Split a reader in two.","","Split the slice in two at the given index, resulting in …","Get the starting PC address that this row applies to.","Perform a subtraction operation.","Retrieves the CFI binary search table, if there is one.","The base address for text relative pointers. This is …","Converts the slice to a string using <code>str::from_utf8</code>.","Convert a <code>Value</code> to a <code>u64</code>.","Set the number of bytes remaining to the specified lengtheturn the number of units.","Find the frame unwind information for the given address.","Find the frame unwind information for the given address.","Returns the frame unwind information for the given address,","Find the frame unwind information for the given address.","Return the <code>ValueType</code> corresponding to this <code>Value</code>.","A version number (see Section 7.23). This number is …","Return the version.","Wrapping (modular) addition. Computes <code>self + other</code>.","Returns the XCOFF section name (if any) for this type when …","Perform a bitwise exclusive-or operation.","The target address.","The delta to be added to the current address.","The number of the register whose rule is being changed.","The DWARF expression.","The DWARF expression.","The DWARF expression.","The factored offset.","The factored offset.","The factored offset.","The factored offset.","The factored offset.","The factored offset.","The non-factored offset.","The non-factored offset.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The register to be reset.","The size of the arguments which have been pushed onto the …","The number of the register where the other register’s …","The offset from the register’s base value.","The register containing the base value.","The address of the value required.","The DIE of the base type or 0 to indicate the generic type","The DIE of the base type or 0 to indicate the generic type","The index of the address in the <code>.debug_addr</code> section, …","The register number.","Whether the address also needs to be relocated.","The size of the value required. This is guaranteed to be …","If not <code>None</code>, a target-specific address space value.","The address.","The byte offset into the value that the implicit pointer …","The register number.","The value.","The value.","The <code>.debug_info</code> offset of the value that this is an …","The offset to add.","The DIE of the base type or 0 to indicate the generic type","The DIE of the base type or 0 to indicate the generic type","The DIE of the base type.","The DIE of the base type.","The DIE of the base type.","The bit offset of this piece.  If <code>None</code>, then this piece …","The byte offset into the value that the implicit pointer …","The implicit value to use.","The expression to be evaluated.","The index, from the top of the stack, of the item to copy.","The index of the address in <code>.debug_addr</code>.","The index of the address in <code>.debug_addr</code>.","The index of the local.","The index of the global.","The index of the stack item. 0 is the bottom of the …","The offset to add.","The offset to add.","The DIE to use.","The DIE to use.","The register number.","The register number.","The size of the data to dereference.","The size of this piece in bits.","True if the dereference operation takes an address space …","The relative offset to the target bytecode.","The relative offset to the target bytecode.","The value to add.","The value to push.","The value to push.","The <code>.debug_info</code> offset of the value that this is an …","The value bytes.","base address","base address","Start of range. May be an address or an offset.","start of range","start of range","start of range","start of range","start of range","expression","expression","expression","expression","expression","expression","expression","End of range. May be an address or an offset.","end of range","end of range","end of range","length of range","length of range","base address","base address","Start of range. May be an address or an offset.","start of range","start of range","start of range","start of range","start of range","End of range. May be an address or an offset.","end of range","end of range","end of range","length of range","length of range"],"i":[37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,0,7,35,35,35,35,35,35,35,35,0,41,0,39,40,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,39,40,32,0,32,0,0,32,0,32,32,0,32,0,1,32,0,32,0,32,32,0,0,32,0,32,0,32,32,32,32,0,0,32,0,32,0,0,32,0,32,0,1,7,6,6,0,34,0,39,39,39,39,39,39,36,39,40,39,39,32,32,0,0,0,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,37,37,37,37,37,37,37,40,37,39,40,37,38,37,38,38,38,37,38,37,38,37,38,37,38,37,38,37,38,38,38,40,39,40,37,38,37,38,37,38,37,38,37,37,37,37,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,0,38,39,40,39,40,35,40,40,40,40,40,40,40,40,39,40,35,0,41,0,0,0,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,34,0,35,36,35,37,35,37,35,37,40,35,35,35,37,40,35,35,35,37,40,35,35,35,37,40,35,35,35,35,35,35,35,37,40,35,35,35,35,35,35,35,37,40,37,37,37,37,35,37,37,37,37,37,37,37,37,37,37,37,35,37,37,37,35,37,35,37,35,37,35,37,35,37,40,35,35,35,37,40,35,35,37,38,39,40,40,35,36,40,40,40,40,40,40,40,40,0,0,0,0,0,35,37,38,35,37,38,35,38,35,38,35,35,35,35,35,35,35,35,35,37,38,35,35,35,35,35,35,35,35,35,35,35,37,38,35,35,35,37,38,35,37,38,35,37,38,35,37,38,35,37,38,35,38,35,36,37,38,35,35,35,35,35,35,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,0,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,37,37,38,35,36,35,35,36,36,36,36,39,40,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,38,36,38,36,38,36,38,36,38,36,38,0,0,36,38,39,40,39,40,40,40,40,40,40,40,40,40,40,40,39,40,40,40,40,40,40,40,40,40,40,40,39,40,40,40,39,40,39,40,39,40,39,40,40,40,37,38,8,1,1,6,7,8,9,10,11,12,13,14,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,31,1,32,33,34,35,36,37,38,39,40,41,42,43,6,7,8,9,10,11,12,13,14,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,31,1,32,33,34,35,36,37,38,39,40,41,42,43,6,7,8,9,10,11,12,13,14,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,31,1,32,33,34,35,36,37,38,39,40,41,42,43,10,2,5,1,32,0,9,34,41,42,43,18,24,27,9,32,6,7,8,9,10,11,12,13,14,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,31,1,32,33,34,41,42,43,6,7,8,9,10,11,12,13,14,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,31,1,32,33,34,35,36,37,38,39,40,41,42,43,8,6,7,8,9,10,11,12,13,14,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,30,30,31,31,31,1,1,1,32,33,34,35,36,37,38,39,40,41,42,43,6,8,9,10,11,2,17,20,21,22,23,5,29,30,31,1,32,33,41,42,43,6,6,7,8,9,10,11,12,13,14,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,30,31,31,1,32,33,34,35,36,37,38,39,40,41,42,43,58,41,42,43,58,58,0,9,9,9,9,32,35,36,37,38,39,40,10,2,5,1,32,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,35,36,37,38,39,40,6,7,8,9,10,11,12,13,14,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,31,1,32,33,34,35,36,37,38,39,40,41,42,43,6,7,8,9,10,11,12,13,14,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,31,1,32,33,34,35,36,37,38,39,40,41,42,43,6,7,8,9,10,11,12,13,14,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,31,1,32,33,34,35,36,37,38,39,40,41,42,43,8,6,58,58,58,58,58,58,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,87,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,71,71,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,71,71,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,71,0,0,0,0,0,171,161,161,162,161,158,167,143,161,0,0,0,0,142,143,0,171,0,171,171,171,171,171,171,158,167,0,158,167,161,162,161,161,0,0,171,0,0,171,138,0,0,175,142,161,161,171,0,0,0,0,160,0,0,0,0,0,0,0,0,143,143,143,143,143,143,158,161,0,145,161,171,161,171,171,0,0,0,0,162,105,0,0,161,161,104,0,0,0,0,171,171,0,124,142,143,111,113,106,113,106,138,0,161,171,161,113,106,161,113,106,113,106,113,106,113,106,161,162,161,145,171,171,171,171,171,171,171,171,171,171,171,171,171,189,161,171,0,0,0,0,161,171,171,161,171,171,161,161,161,161,143,171,171,143,161,161,171,171,171,171,142,143,128,105,143,171,158,167,104,171,0,0,161,161,0,0,171,161,0,161,161,161,0,171,161,0,0,0,0,0,0,0,0,0,142,143,161,162,124,161,0,0,161,143,175,175,175,175,175,175,175,175,175,175,175,143,143,0,111,0,161,125,142,143,0,0,143,161,161,161,161,161,125,111,171,161,158,167,158,167,158,167,158,167,0,161,161,171,171,171,171,161,113,106,113,106,113,106,113,106,142,143,171,171,0,0,0,0,160,171,171,171,171,171,171,171,171,171,171,161,171,171,171,171,171,171,171,171,171,171,171,171,0,0,0,0,0,0,142,143,142,143,143,0,162,0,171,161,161,161,161,106,106,107,108,106,109,108,168,110,113,114,114,131,132,133,176,134,135,129,136,137,138,112,108,139,126,140,177,141,123,124,142,143,144,145,146,147,117,117,148,149,150,107,151,152,153,154,155,156,157,118,118,178,158,179,159,160,161,162,110,175,163,164,109,165,166,119,119,180,167,181,168,120,120,121,121,122,122,169,113,106,170,171,114,131,132,133,176,134,135,129,136,137,138,112,108,139,126,140,177,141,123,124,142,143,144,145,146,147,117,148,149,150,107,151,152,153,154,155,156,157,118,178,158,179,159,160,161,162,110,175,163,164,109,165,166,119,180,167,181,168,120,121,122,169,113,106,170,171,105,146,123,46,126,128,128,114,131,132,133,134,135,129,136,137,138,112,108,139,126,140,141,123,124,142,143,144,145,146,147,117,148,149,150,107,151,152,153,154,155,156,157,118,158,159,160,161,162,110,163,164,165,166,119,167,168,120,121,122,169,113,106,170,171,107,169,108,126,123,106,136,159,108,149,119,119,114,129,136,112,140,123,124,145,146,117,151,152,156,157,118,165,166,119,120,121,122,146,171,145,106,173,173,129,129,133,105,146,108,149,168,123,105,146,128,128,149,108,126,131,132,135,129,136,138,112,108,139,126,140,123,124,142,143,145,146,147,149,107,155,159,160,161,162,110,175,163,168,169,113,106,106,170,171,109,108,128,128,134,128,128,105,146,146,153,114,131,132,133,176,134,135,129,136,137,138,112,108,139,126,140,177,141,123,124,142,143,144,145,146,147,117,148,149,150,107,151,152,153,154,155,156,157,118,178,158,179,159,160,161,162,110,175,163,164,109,165,166,119,180,167,181,168,120,121,122,169,113,106,170,171,171,114,114,114,131,131,132,132,133,176,134,135,135,129,136,137,138,112,108,139,126,140,177,141,123,124,142,143,144,145,146,147,117,117,117,148,149,150,107,151,151,151,152,152,152,153,154,155,156,156,156,157,157,157,118,178,158,179,159,160,161,162,110,175,163,164,109,165,165,165,166,166,166,119,180,167,181,168,120,120,120,121,121,121,122,122,122,169,113,106,170,171,113,46,46,46,46,106,46,106,114,118,119,120,122,121,106,108,146,159,163,168,169,117,117,173,114,131,132,135,117,151,152,156,157,165,166,120,121,122,151,152,126,108,126,130,114,131,132,133,176,134,135,129,136,137,138,112,108,139,126,140,177,141,123,124,142,143,144,145,146,147,117,148,149,150,107,151,152,153,154,155,156,157,118,178,158,179,159,160,161,162,110,175,163,164,109,165,166,119,180,167,181,168,120,121,122,169,113,106,170,171,177,141,154,46,105,105,146,162,108,126,134,106,105,126,146,149,107,173,110,118,118,134,105,173,146,118,119,126,108,106,106,106,106,131,132,135,177,146,117,151,152,156,157,118,165,166,119,120,122,140,109,176,137,141,144,148,150,154,178,179,164,180,181,177,106,176,108,126,149,155,105,146,146,164,105,146,163,106,132,139,161,106,107,169,128,128,108,126,108,145,134,146,107,159,146,146,119,118,118,119,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,146,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,173,114,131,132,135,117,151,152,156,157,165,166,120,121,122,123,123,106,106,109,109,109,109,109,109,109,109,109,109,109,108,126,123,136,155,153,173,153,107,149,131,135,119,129,129,129,109,109,109,131,129,131,135,106,106,106,155,110,105,146,105,105,146,153,105,146,146,123,106,133,136,146,106,105,146,114,131,132,133,176,134,135,129,136,137,138,112,108,139,126,140,177,141,123,124,142,143,144,145,146,147,117,148,149,150,107,151,152,153,154,155,156,157,118,178,158,179,159,160,161,162,110,175,163,164,109,165,166,119,180,167,181,168,120,121,122,169,113,106,170,171,114,131,132,133,176,134,135,129,136,137,138,112,108,139,126,140,177,141,123,124,142,143,144,145,146,147,117,148,149,150,107,151,152,153,154,155,156,157,118,178,158,179,159,160,161,162,110,175,163,164,109,165,166,119,180,167,181,168,120,121,122,169,113,106,170,171,114,131,132,133,176,134,135,129,136,137,138,112,108,139,126,140,177,141,123,124,142,143,144,145,146,147,117,148,149,150,107,151,152,153,154,155,156,157,118,178,158,179,159,160,161,162,110,175,163,164,109,165,166,119,180,167,181,168,120,121,122,169,113,106,170,171,153,128,128,134,126,106,108,153,46,173,106,190,191,192,193,194,195,196,197,198,199,200,201,202,203,202,196,204,205,206,198,199,200,201,194,195,207,208,192,209,209,210,210,211,212,211,212,210,210,213,214,215,216,217,214,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,220,234,235,236,237,220,219,224,219,238,239,240,241,242,225,221,243,244,245,246,247,248,249,250,245,246,247,248,251,249,250,245,246,248,249,247,250,252,253,254,255,256,257,258,259,254,255,257,258,256,259],"fc":[2652],"p":[[6,"UnitSectionOffset",0],[5,"DebugInfoOffset",0],[6,"Option",4009],[10,"Clone",4010],[5,"DebugTypesOffset",0],[6,"Format",0],[6,"Vendor",0],[5,"Encoding",0],[5,"LineEncoding",0],[5,"Register",0],[5,"DebugAbbrevOffset",0],[5,"DebugAddrBase",0],[5,"DebugAddrIndex",0],[5,"DebugArangesOffset",0],[5,"DebugLineOffset",0],[5,"DebugLineStrOffset",0],[5,"LocationListsOffset",0],[5,"DebugLocListsBase",0],[5,"DebugLocListsIndex",0],[5,"DebugMacinfoOffset",0],[5,"DebugMacroOffset",0],[5,"RawRangeListsOffset",0],[5,"RangeListsOffset",0],[5,"DebugRngListsBase",0],[5,"DebugRngListsIndex",0],[5,"DebugStrOffset",0],[5,"DebugStrOffsetsBase",0],[5,"DebugStrOffsetsIndex",0],[5,"DebugTypeSignature",0],[5,"DebugFrameOffset",0],[5,"EhFrameOffset",0],[6,"SectionId",0],[5,"DwoId",0],[6,"DwarfFileType",0],[5,"Arm",0],[5,"AArch64",0],[5,"LoongArch",0],[5,"RiscV",0],[5,"X86",0],[5,"X86_64",0],[6,"RunTimeEndian",0],[5,"LittleEndian",0],[5,"BigEndian",0],[6,"Ordering",4011],[10,"Ord",4011],[10,"ReaderOffset",2571],[1,"str"],[1,"bool"],[10,"PartialEq",4011],[5,"Formatter",4012],[8,"Result",4012],[10,"Debug",4012],[1,"never"],[1,"tuple"],[10,"Hasher",4013],[10,"Hash",4013],[1,"u8"],[10,"Endianity",0],[10,"PartialOrd",4011],[1,"slice"],[1,"f32"],[1,"f64"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"u16"],[1,"u32"],[1,"u64"],[6,"Result",4014],[5,"TypeId",4015],[5,"DwEhPe",1208],[5,"DwSect",1208],[5,"DwSectV2",1208],[5,"DwUt",1208],[5,"DwCfa",1208],[5,"DwChildren",1208],[5,"DwTag",1208],[5,"DwAt",1208],[5,"DwForm",1208],[5,"DwAte",1208],[5,"DwLle",1208],[5,"DwDs",1208],[5,"DwEnd",1208],[5,"DwAccess",1208],[5,"DwVis",1208],[5,"DwVirtuality",1208],[5,"DwLang",1208],[5,"DwAddr",1208],[5,"DwId",1208],[5,"DwCc",1208],[5,"DwInl",1208],[5,"DwOrd",1208],[5,"DwDsc",1208],[5,"DwIdx",1208],[5,"DwDefaulted",1208],[5,"DwLns",1208],[5,"DwLne",1208],[5,"DwLnct",1208],[5,"DwMacro",1208],[5,"DwRle",1208],[5,"DwOp",1208],[1,"usize"],[5,"Error",4012],[8,"Result",2571],[10,"Reader",2571],[6,"Value",2571],[5,"ArangeEntry",2571],[5,"CommonInformationEntry",2571],[5,"Evaluation",2571],[5,"Piece",2571],[10,"EvaluationStorage",2571],[5,"Augmentation",2571],[6,"ValueType",2571],[5,"DebugAddr",2571],[17,"Output"],[10,"FnMut",4016],[5,"DebugAranges",2571],[5,"LocationLists",2571],[5,"RangeLists",2571],[5,"DebugStr",2571],[5,"DebugStrOffsets",2571],[5,"DebugLineStr",2571],[5,"UnwindTableRow",2571],[6,"CfaRule",2571],[10,"UnwindContextStorage",2571],[5,"FrameDescriptionEntry",2571],[17,"Offset"],[10,"UnwindSection",2571],[5,"BaseAddresses",2571],[10,"UnwindOffset",2571],[5,"DebugFrame",2571],[5,"EhFrameHdr",2571],[5,"ParsedEhFrameHdr",2571],[5,"EhHdrTable",2571],[5,"EhFrame",2571],[5,"SectionBaseAddresses",2571],[5,"CfiEntriesIter",2571],[6,"CieOrFde",2571],[5,"PartialFrameDescriptionEntry",2571],[5,"UnwindContext",2571],[5,"RegisterRuleIter",2571],[6,"RegisterRule",2571],[6,"CallFrameInstruction",2571],[5,"CallFrameInstructionIter",2571],[6,"Pointer",2571],[5,"EndianSlice",2571],[5,"ReaderOffsetId",2571],[5,"ArangeHeaderIter",2571],[5,"ArangeHeader",2571],[5,"ArangeEntryIter",2571],[5,"DebugCuIndex",2571],[5,"DebugTuIndex",2571],[5,"UnitIndex",2571],[5,"UnitIndexSectionIterator",2571],[5,"UnitIndexSection",2571],[5,"DebugLoc",2571],[5,"DebugLocLists",2571],[6,"RawLocListEntry",2571],[5,"LocationListEntry",2571],[6,"DieReference",2571],[6,"Operation",2571],[6,"Location",2571],[5,"Expression",2571],[5,"OperationIter",2571],[5,"DebugRanges",2571],[5,"DebugRngLists",2571],[6,"RawRngListEntry",2571],[5,"Range",2571],[5,"UnitOffset",2571],[5,"StoreOnHeap",2571],[6,"Error",2571],[10,"Default",4017],[10,"Section",2571],[17,"Endian"],[6,"EvaluationResult",2571],[5,"EhHdrTableIter",2571],[5,"UnwindTable",2571],[5,"RawLocListIter",2571],[5,"LocListIter",2571],[5,"RawRngListIter",2571],[5,"RngListIter",2571],[10,"FnOnce",4016],[5,"Range",4018],[5,"RangeFrom",4018],[5,"RangeTo",4018],[1,"i8"],[10,"Sized",4019],[10,"AsMut",4020],[10,"ArrayLike",2571],[15,"SetLoc",3898],[15,"AdvanceLoc",3898],[15,"Register",3898],[15,"DefCfaExpression",3898],[15,"Expression",3898],[15,"ValExpression",3898],[15,"DefCfaSf",3898],[15,"DefCfaOffsetSf",3898],[15,"Offset",3898],[15,"OffsetExtendedSf",3898],[15,"ValOffset",3898],[15,"ValOffsetSf",3898],[15,"DefCfa",3898],[15,"DefCfaOffset",3898],[15,"DefCfaRegister",3898],[15,"Undefined",3898],[15,"SameValue",3898],[15,"Restore",3898],[15,"ArgsSize",3898],[15,"RegisterAndOffset",3926],[15,"RequiresMemory",3928],[15,"RequiresRegister",3928],[15,"RequiresIndexedAddress",3928],[15,"Address",3936],[15,"ImplicitPointer",3936],[15,"Register",3936],[15,"Value",3936],[15,"Bytes",3936],[15,"Address",3942],[15,"Deref",3942],[15,"RegisterOffset",3942],[15,"TypedLiteral",3942],[15,"Convert",3942],[15,"Reinterpret",3942],[15,"Piece",3942],[15,"ImplicitPointer",3942],[15,"ImplicitValue",3942],[15,"EntryValue",3942],[15,"Pick",3942],[15,"AddressIndex",3942],[15,"ConstantIndex",3942],[15,"WasmLocal",3942],[15,"WasmGlobal",3942],[15,"WasmStack",3942],[15,"FrameOffset",3942],[15,"Call",3942],[15,"ParameterRef",3942],[15,"Register",3942],[15,"Bra",3942],[15,"Skip",3942],[15,"PlusConstant",3942],[15,"UnsignedConstant",3942],[15,"SignedConstant",3942],[15,"BaseAddress",3974],[15,"BaseAddressx",3974],[15,"AddressOrOffsetPair",3974],[15,"StartxEndx",3974],[15,"StartxLength",3974],[15,"OffsetPair",3974],[15,"StartEnd",3974],[15,"StartLength",3974],[15,"DefaultLocation",3974],[15,"BaseAddress",3995],[15,"BaseAddressx",3995],[15,"AddressOrOffsetPair",3995],[15,"StartxEndx",3995],[15,"StartxLength",3995],[15,"OffsetPair",3995],[15,"StartEnd",3995],[15,"StartLength",3995]],"b":[[948,"impl-From%3CDebugInfoOffset%3CT%3E%3E-for-UnitSectionOffset%3CT%3E"],[950,"impl-From%3CDebugTypesOffset%3CT%3E%3E-for-UnitSectionOffset%3CT%3E"],[2252,"impl-Display-for-DwSect"],[2253,"impl-Debug-for-DwSect"],[2254,"impl-Display-for-DwSectV2"],[2255,"impl-Debug-for-DwSectV2"],[2256,"impl-Display-for-DwUt"],[2257,"impl-Debug-for-DwUt"],[2258,"impl-Debug-for-DwCfa"],[2259,"impl-Display-for-DwCfa"],[2260,"impl-Debug-for-DwChildren"],[2261,"impl-Display-for-DwChildren"],[2262,"impl-Display-for-DwTag"],[2263,"impl-Debug-for-DwTag"],[2264,"impl-Display-for-DwAt"],[2265,"impl-Debug-for-DwAt"],[2266,"impl-Debug-for-DwForm"],[2267,"impl-Display-for-DwForm"],[2268,"impl-Debug-for-DwAte"],[2269,"impl-Display-for-DwAte"],[2270,"impl-Display-for-DwLle"],[2271,"impl-Debug-for-DwLle"],[2272,"impl-Display-for-DwDs"],[2273,"impl-Debug-for-DwDs"],[2274,"impl-Display-for-DwEnd"],[2275,"impl-Debug-for-DwEnd"],[2276,"impl-Debug-for-DwAccess"],[2277,"impl-Display-for-DwAccess"],[2278,"impl-Debug-for-DwVis"],[2279,"impl-Display-for-DwVis"],[2280,"impl-Display-for-DwVirtuality"],[2281,"impl-Debug-for-DwVirtuality"],[2282,"impl-Debug-for-DwLang"],[2283,"impl-Display-for-DwLang"],[2284,"impl-Display-for-DwAddr"],[2285,"impl-Debug-for-DwAddr"],[2286,"impl-Display-for-DwId"],[2287,"impl-Debug-for-DwId"],[2288,"impl-Debug-for-DwCc"],[2289,"impl-Display-for-DwCc"],[2290,"impl-Debug-for-DwInl"],[2291,"impl-Display-for-DwInl"],[2292,"impl-Display-for-DwOrd"],[2293,"impl-Debug-for-DwOrd"],[2294,"impl-Display-for-DwDsc"],[2295,"impl-Debug-for-DwDsc"],[2296,"impl-Debug-for-DwIdx"],[2297,"impl-Display-for-DwIdx"],[2298,"impl-Display-for-DwDefaulted"],[2299,"impl-Debug-for-DwDefaulted"],[2300,"impl-Debug-for-DwLns"],[2301,"impl-Display-for-DwLns"],[2302,"impl-Display-for-DwLne"],[2303,"impl-Debug-for-DwLne"],[2304,"impl-Display-for-DwLnct"],[2305,"impl-Debug-for-DwLnct"],[2306,"impl-Debug-for-DwMacro"],[2307,"impl-Display-for-DwMacro"],[2308,"impl-Debug-for-DwRle"],[2309,"impl-Display-for-DwRle"],[2310,"impl-Display-for-DwOp"],[2311,"impl-Debug-for-DwOp"],[2312,"impl-Display-for-DwEhPe"],[2313,"impl-Debug-for-DwEhPe"],[3183,"impl-PartialEq-for-Value"],[3184,"impl-Value"],[3195,"impl-Reader-for-EndianSlice%3C\'input,+Endian%3E"],[3196,"impl-EndianSlice%3C\'input,+Endian%3E"],[3263,"impl-Display-for-Error"],[3264,"impl-Debug-for-Error"],[3537,"impl-Reader-for-EndianSlice%3C\'input,+Endian%3E"],[3538,"impl-EndianSlice%3C\'input,+Endian%3E"]]}],\
["id_alloc",{"doc":"","t":"FNNNNNNNNNNNNNNNNNNNN","n":["IdAlloc","alloc","alloc_consecutive","alloc_specific","as_bytes","borrow","borrow_mut","clone","clone_into","fmt","free","free_consecutive","from","from_bytes_with_capacity","into","is_allocated","to_owned","try_from","try_into","type_id","with_capacity"],"q":[[0,"id_alloc"],[21,"core::option"],[22,"core::ops::range"],[23,"core::fmt"],[24,"core::fmt"],[25,"core::any"]],"d":["An id allocator implemented by the bitmap. The true bit …","Allocates and returns a new <code>id</code>.","Allocates a consecutive range of new <code>id</code>s.","Allocate a specific ID.","Views the id allocator as a slice of <code>u8</code> bytes.","","","","","","Releases the allocated <code>id</code>.","Releases the consecutive range of allocated <code>id</code>s.","Returns the argument unchanged.","Constructs a new id allocator from a slice of <code>u8</code> bytes and …","Calls <code>U::from(self)</code>.","Returns true if the <code>id</code> is allocated.","","","","","Constructs a new id allocator with a maximum capacity."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,[[3,[2]]]],[[1,2],[[3,[[4,[2]]]]]],[[1,2],[[3,[2]]]],[1,[[6,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],7,[],[]],[[1,8],9],[[1,2],7],[[1,[4,[2]]],7],[-1,-1,[]],[[[6,[5]],2],1],[-1,-2,[],[]],[[1,2],10],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[2,1]],"c":[],"p":[[5,"IdAlloc",0],[1,"usize"],[6,"Option",21],[5,"Range",22],[1,"u8"],[1,"slice"],[1,"tuple"],[5,"Formatter",23],[8,"Result",23],[1,"bool"],[6,"Result",24],[5,"TypeId",25]],"b":[]}],\
["int_to_c_enum",{"doc":"This crate provides a derive macro named TryFromInt. This …","t":"PYGNNNNNNNNN","n":["InvalidValue","TryFromInt","TryFromIntError","borrow","borrow_mut","clone","fmt","from","into","try_from","try_into","type_id"],"q":[[0,"int_to_c_enum"],[12,"core::fmt"],[13,"core::fmt"],[14,"core::any"]],"d":["","","Error type for TryFromInt derive macro","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[1,0,0,1,1,1,1,1,1,1,1,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[1,2],3],[-1,-1,[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]]],"c":[],"p":[[6,"TryFromIntError",0],[5,"Formatter",12],[8,"Result",12],[6,"Result",13],[5,"TypeId",14]],"b":[]}],\
["intrusive_collections",{"doc":"Intrusive collections for Rust.","t":"KGKFPPRKKRREEETRRKREEEEEEPFREEEMNNNNNNNNNNNNNNQNNNNNNNNNMNNNNNNNNNNNMMMNNNNNMNNNNNNNNNNNQMMCNQMCMCNNNNNNNNNNNNCFFFFFFFFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFPGFFGFFFFFPFKPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNMNNMNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Adapter","Bound","DefaultLinkOps","DefaultPointerOps","Excluded","Included","Key","KeyAdapter","LinkOps","LinkOps","LinkPtr","LinkedList","LinkedListAtomicLink","LinkedListLink","NEW","Ops","Pointer","PointerOps","PointerOps","RBTree","RBTreeAtomicLink","RBTreeLink","SinglyLinkedList","SinglyLinkedListAtomicLink","SinglyLinkedListLink","Unbounded","UnsafeRef","Value","XorLinkedList","XorLinkedListAtomicLink","XorLinkedListLink","acquire_link","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","container_of","default","deref","eq","fmt","fmt","from","from","from","from_box","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","get_key","get_link","get_value","hash","into","into","into","into_box","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","into_raw","intrusive_adapter","link_ops","link_ops_mut","linked_list","new","offset_of","pointer_ops","rbtree","release_link","singly_linked_list","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","xor_linked_list","AtomicLink","AtomicLinkOps","Cursor","CursorMut","IntoIter","Iter","Link","LinkOps","LinkedList","LinkedListOps","acquire_link","acquire_link","as_cursor","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_pointer","cursor","cursor_from_ptr","cursor_mut","cursor_mut_from_ptr","default","default","default","default","default","drop","fast_clear","fmt","fmt","fmt","force_unlink","force_unlink","from","from","from","from","from","from","from","from","from","front","front_mut","get","get","insert_after","insert_before","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_ref","is_empty","is_linked","is_linked","is_null","is_null","iter","move_next","move_next","move_prev","move_prev","new","new","new","next","next","next","next","next","next","next","next","next","next_back","next_back","peek_next","peek_next","peek_prev","peek_prev","pop_back","pop_front","prev","prev","prev","prev","prev","push_back","push_front","release_link","release_link","remove","replace_next_or_prev","replace_next_or_prev","replace_with","set","set","set_next","set_next","set_next","set_next","set_next","set_prev","set_prev","set_prev","splice_after","splice_before","split_after","split_before","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AtomicLink","AtomicLinkOps","Black","Color","Cursor","CursorMut","Entry","InsertCursor","IntoIter","Iter","Link","LinkOps","Occupied","RBTree","RBTreeOps","Red","Vacant","acquire_link","acquire_link","as_cursor","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_pointer","color","color","color","cursor","cursor_from_ptr","cursor_mut","cursor_mut_from_ptr","default","default","default","default","default","drop","entry","eq","fast_clear","find","find_mut","fmt","fmt","fmt","fmt","force_unlink","force_unlink","from","from","from","from","from","from","from","from","from","from","from","from","front","front_mut","get","get","insert","insert","insert","insert_after","insert_before","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_ref","is_empty","is_linked","is_linked","is_null","is_null","iter","left","left","left","lower_bound","lower_bound_mut","move_next","move_next","move_prev","move_prev","new","new","new","next","next","next","next","next","next","next","next","next_back","next_back","or_insert","or_insert_with","parent","parent","parent","peek_next","peek_next","peek_prev","peek_prev","prev","prev","prev","prev","range","release_link","release_link","remove","replace_next_or_prev","replace_next_or_prev","replace_with","right","right","right","set","set","set_color","set_color","set_color","set_left","set_left","set_left","set_next","set_next","set_next","set_next","set_parent","set_parent","set_parent","set_prev","set_prev","set_right","set_right","set_right","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper_bound","upper_bound_mut","AtomicLink","AtomicLinkOps","Cursor","CursorMut","IntoIter","Iter","Link","LinkOps","SinglyLinkedList","SinglyLinkedListOps","acquire_link","acquire_link","as_cursor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_pointer","cursor","cursor_from_ptr","cursor_mut","cursor_mut_from_ptr","default","default","default","default","default","drop","fast_clear","fmt","fmt","fmt","force_unlink","force_unlink","from","from","from","from","from","from","from","from","from","front","front_mut","get","get","insert_after","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_ref","is_empty","is_linked","is_linked","is_null","is_null","iter","move_next","move_next","new","new","new","next","next","next","next","next","next","next","peek_next","peek_next","pop_front","prev","prev","push_front","release_link","release_link","remove_next","replace_next_or_prev","replace_next_or_prev","replace_next_with","set","set","set_next","set_next","set_next","splice_after","split_after","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AtomicLink","AtomicLinkOps","Cursor","CursorMut","IntoIter","Iter","Link","LinkOps","XorLinkedList","XorLinkedListOps","acquire_link","acquire_link","as_cursor","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_pointer","cursor","cursor_from_ptr_and_next","cursor_from_ptr_and_prev","cursor_mut","cursor_mut_from_ptr_and_next","cursor_mut_from_ptr_and_prev","default","default","default","default","default","drop","fast_clear","fmt","fmt","fmt","force_unlink","force_unlink","from","from","from","from","from","from","from","from","from","front","front_mut","get","get","insert_after","insert_before","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_ref","is_empty","is_linked","is_linked","is_null","is_null","iter","move_next","move_next","move_prev","move_prev","new","new","new","next","next","next","next","next","next","next","next_back","next_back","peek_next","peek_next","peek_prev","peek_prev","pop_back","pop_front","prev","prev","prev","push_back","push_front","release_link","release_link","remove","replace_next_or_prev","replace_next_or_prev","replace_next_or_prev","replace_with","reverse","set","set","set","set_next","set_next","splice_after","splice_before","split_after","split_before","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"intrusive_collections"],[111,"intrusive_collections::linked_list"],[294,"intrusive_collections::rbtree"],[535,"intrusive_collections::singly_linked_list"],[695,"intrusive_collections::xor_linked_list"],[873,"core::marker"],[874,"core::cmp"],[875,"core::marker"],[876,"core::cmp"],[877,"core::fmt"],[878,"alloc::rc"],[879,"core::pin"],[880,"alloc::sync"],[881,"core::hash"],[882,"core::hash"],[883,"core::any"],[884,"core::option"],[885,"core::default"],[886,"core::cmp"]],"d":["Trait for a adapter which allows a type to be inserted …","An endpoint of a range of keys.","The default implementation of <code>LinkOps</code> associated with a …","The <code>PointerOps</code> type used by an <code>Adapter</code> generated by …","An exclusive bound.","An inclusive bound.","Type of the key returned by <code>get_key</code>.","Extension of the <code>Adapter</code> trait to provide a way of …","Base trait for link operations.","Collection-specific link operations which allow an object …","The link pointer type.","","","","The associated constant that represents <code>Ops::default()</code>.","The default link operations.","Pointer type which owns an instance of a value.","Trait for pointer conversion operations.","Collection-specific pointer conversions which allow an …","","","","","","","An infinite endpoint. Indicates that there is no bound in …","Unchecked shared pointer","Object type which is inserted into an intrusive collection.","","","","Attempts to acquire ownership of a link so that it can be …","","","","","","","","","","","","","","","Unsafe macro to get a raw pointer to an outer object from …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an <code>UnsafeRef</code> from a <code>Box</code>","Constructs an owned pointer from a raw pointer.","Creates an <code>UnsafeRef</code> from a raw pointer","","","","","","","","","","","Gets the key for the given object.","Gets a reference to the link for the given object.","Gets a reference to an object from a reference to a link …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts an <code>UnsafeRef</code> into a <code>Box</code>","Consumes the owned pointer and returns a raw pointer to …","Converts an <code>UnsafeRef</code> into a raw pointer","","","","","","","","","","","Macro to generate an implementation of <code>Adapter</code> for a given …","Returns a reference to the link operations.","Returns a reference to the mutable link operations.","Intrusive doubly-linked list.","Constructs an instance of <code>DefaultPointerOps</code>.","Calculates the offset of the specified field from the …","Returns a reference to the pointer converter.","Intrusive red-black tree.","Releases ownership of a link that was previously acquired …","Intrusive singly-linked list.","","","","","","","","","","","","","Intrusive xor doubly-linked list which uses less memory …","Intrusive atomic link that allows an object to be inserted …","Default <code>AtomicLinkOps</code> implementation for <code>LinkedList</code>.","A cursor which provides read-only access to a <code>LinkedList</code>.","A cursor which provides mutable access to a <code>LinkedList</code>.","An iterator which consumes a <code>LinkedList</code>.","An iterator over references to the items of a <code>LinkedList</code>.","Intrusive link that allows an object to be inserted into a …","Default <code>LinkOps</code> implementation for <code>LinkedList</code>.","An intrusive doubly-linked list.","Link operations for <code>LinkedList</code>.","","","Returns a read-only cursor pointing to the current element.","Returns a <code>Cursor</code> pointing to the last element of the list. …","Returns a <code>CursorMut</code> pointing to the last element of the …","","","","","","","","","","","","","","","","","","","Removes all elements from the <code>LinkedList</code>.","","","","","","","","","","","","","Clones and returns the pointer that points to the element …","Returns a null <code>Cursor</code> for this list.","Creates a <code>Cursor</code> from a pointer to an element.","Returns a null <code>CursorMut</code> for this list.","Creates a <code>CursorMut</code> from a pointer to an element.","","","","","","","Empties the <code>LinkedList</code> without unlinking or freeing …","","","","Forcibly unlinks an object from a <code>LinkedList</code>.","Forcibly unlinks an object from a <code>LinkedList</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>LinkedList</code> after the …","Inserts a new element into the <code>LinkedList</code> before the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Consumes <code>CursorMut</code> and returns a reference to the object …","Returns <code>true</code> if the <code>LinkedList</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>LinkedList</code>.","Checks whether the <code>AtomicLink</code> is linked into a <code>LinkedList</code>.","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>LinkedList</code>.","Moves the cursor to the next element of the <code>LinkedList</code>.","Moves the cursor to the next element of the <code>LinkedList</code>.","Moves the cursor to the previous element of the <code>LinkedList</code>.","Moves the cursor to the previous element of the <code>LinkedList</code>.","Creates a new <code>Link</code>.","Creates a new <code>AtomicLink</code>.","Creates an empty <code>LinkedList</code>.","Returns the “next” link pointer of <code>ptr</code>.","","","","","","","","","","","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the previous element of the …","Returns a cursor pointing to the previous element of the …","Removes the last element of the <code>LinkedList</code>.","Removes the first element of the <code>LinkedList</code>.","Returns the “prev” link pointer of <code>ptr</code>.","","","","","Inserts a new element at the end of the <code>LinkedList</code>.","Inserts a new element at the start of the <code>LinkedList</code>.","","","Removes the current element from the <code>LinkedList</code>.","","","Removes the current element from the <code>LinkedList</code> and …","","","Sets the “next” link pointer of <code>ptr</code>.","","","","","Sets the “prev” link pointer of <code>ptr</code>.","","","Inserts the elements from the given <code>LinkedList</code> after the …","Moves all element from the given <code>LinkedList</code> before the …","Splits the list into two after the current element. This …","Splits the list into two before the current element. This …","Takes all the elements out of the <code>LinkedList</code>, leaving it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Intrusive link that allows an object to be inserted into a …","Default <code>LinkOps</code> implementation for <code>RBTree</code>.","","The color of a red-black tree node.","A cursor which provides read-only access to a <code>RBTree</code>.","A cursor which provides mutable access to a <code>RBTree</code>.","An entry in a <code>RBTree</code>.","A cursor pointing to a slot in which an element can be …","An iterator which consumes a <code>RBTree</code>.","An iterator over references to the items of a <code>RBTree</code>.","Intrusive link that allows an object to be inserted into a …","Default <code>LinkOps</code> implementation for <code>RBTree</code>.","An occupied entry.","An intrusive red-black tree.","Link operations for <code>RBTree</code>.","","A vacant entry.","","","Returns a read-only cursor pointing to the current element.","Returns a <code>Cursor</code> pointing to the last element of the tree. …","Returns a <code>CursorMut</code> pointing to the last element of the …","","","","","","","","","","","","","","","","","","","","","","","","","Removes all elements from the <code>RBTree</code>.","","","","","","","","","","","","","","","Clones and returns the pointer that points to the element …","Returns the color of <code>ptr</code>.","","","Returns a null <code>Cursor</code> for this tree.","Creates a <code>Cursor</code> from a pointer to an element.","Returns a null <code>CursorMut</code> for this tree.","Creates a <code>CursorMut</code> from a pointer to an element.","","","","","","","Returns an <code>Entry</code> for the given key which contains a …","","Empties the <code>RBTree</code> without unlinking or freeing objects in …","Returns a <code>Cursor</code> pointing to an element with the given …","Returns a <code>CursorMut</code> pointing to an element with the given …","","","","","Forcibly unlinks an object from a <code>RBTree</code>.","Forcibly unlinks an object from a <code>RBTree</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>RBTree</code>.","Inserts a new element into the <code>RBTree</code>.","Inserts a new element into the <code>RBTree</code> at the location …","Inserts a new element into the <code>RBTree</code> after the current …","Inserts a new element into the <code>RBTree</code> before the current …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Consumes <code>CursorMut</code> and returns a reference to the object …","Returns <code>true</code> if the <code>RBTree</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>RBTree</code>.","Checks whether the <code>AtomicLink</code> is linked into a <code>RBTree</code>.","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>RBTree</code>.","Returns the left child of <code>ptr</code>.","","","Returns a <code>Cursor</code> pointing to the lowest element whose key …","Returns a <code>CursorMut</code> pointing to the first element whose …","Moves the cursor to the next element of the <code>RBTree</code>.","Moves the cursor to the next element of the <code>RBTree</code>.","Moves the cursor to the previous element of the <code>RBTree</code>.","Moves the cursor to the previous element of the <code>RBTree</code>.","Creates a new <code>Link</code>.","Creates a new <code>AtomicLink</code>.","Creates an empty <code>RBTree</code>.","","","","","","","","","","","Inserts an element into the <code>RBTree</code> if the entry is vacant, …","Calls the given function and inserts the result into the …","Returns the parent of <code>ptr</code>.","","","Returns a cursor pointing to the next element of the <code>RBTree</code>…","Returns a cursor pointing to the next element of the <code>RBTree</code>…","Returns a cursor pointing to the previous element of the …","Returns a cursor pointing to the previous element of the …","","","","","Constructs a double-ended iterator over a sub-range of …","","","Removes the current element from the <code>RBTree</code>.","","","Removes the current element from the <code>RBTree</code> and inserts …","Returns the right child of <code>ptr</code>.","","","","","Sets the color of <code>ptr</code>.","","","Sets the left child of <code>ptr</code>.","","","","","","","Sets the parent of <code>ptr</code>.","","","","","Sets the right child of <code>ptr</code>.","","","Takes all the elements out of the <code>RBTree</code>, leaving it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Cursor</code> pointing to the last element whose key is …","Returns a <code>CursorMut</code> pointing to the last element whose key …","Intrusive link that allows an object to be inserted into a …","Default <code>AtomicLinkOps</code> implementation for <code>LinkedList</code>.","A cursor which provides read-only access to a …","A cursor which provides mutable access to a …","An iterator which consumes a <code>SinglyLinkedList</code>.","An iterator over references to the items of a …","Intrusive link that allows an object to be inserted into a …","Default <code>LinkOps</code> implementation for <code>SinglyLinkedList</code>.","An intrusive singly-linked list.","Link operations for <code>SinglyLinkedList</code>.","","","Returns a read-only cursor pointing to the current element.","","","","","","","","","","","","","","","","","","","Removes all elements from the <code>SinglyLinkedList</code>.","","","","","","","","","","","","","Clones and returns the pointer that points to the element …","Returns a null <code>Cursor</code> for this list.","Creates a <code>Cursor</code> from a pointer to an element.","Returns a null <code>CursorMut</code> for this list.","Creates a <code>CursorMut</code> from a pointer to an element.","","","","","","","Empties the <code>SinglyLinkedList</code> without unlinking or freeing …","","","","Forcibly unlinks an object from a <code>SinglyLinkedList</code>.","Forcibly unlinks an object from a <code>SinglyLinkedList</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>SinglyLinkedList</code> after the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Consumes <code>CursorMut</code> and returns a reference to the object …","Returns <code>true</code> if the <code>SinglyLinkedList</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>SinglyLinkedList</code>.","Checks whether the <code>AtomicLink</code> is linked into a …","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>SinglyLinkedList</code>.","Moves the cursor to the next element of the …","Moves the cursor to the next element of the …","Creates a new <code>Link</code>.","Creates a new <code>AtomicLink</code>.","Creates an empty <code>SinglyLinkedList</code>.","Returns the “next” link pointer of <code>ptr</code>.","","","","","","","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the next element of the …","Removes the first element of the <code>SinglyLinkedList</code>.","","","Inserts a new element at the start of the <code>SinglyLinkedList</code>.","","","Removes the next element from the <code>SinglyLinkedList</code>.","","","Removes the next element from the <code>SinglyLinkedList</code> and …","","","Sets the “next” link pointer of <code>ptr</code>.","","","Inserts the elements from the given <code>SinglyLinkedList</code> after …","Splits the list into two after the current element. This …","Takes all the elements out of the <code>SinglyLinkedList</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Intrusive link that allows an object to be inserted into a …","Default <code>AtomicLinkOps</code> implementation for <code>LinkedList</code>.","A cursor which provides read-only access to a <code>XorLinkedList</code>…","A cursor which provides mutable access to a <code>XorLinkedList</code>.","An iterator which consumes a <code>XorLinkedList</code>.","An iterator over references to the items of a <code>XorLinkedList</code>…","Intrusive link that allows an object to be inserted into a …","Default <code>LinkOps</code> implementation for <code>XorLinkedList</code>.","Intrusive xor doubly-linked list which uses less memory …","Link operations for <code>XorLinkedList</code>.","","","Returns a read-only cursor pointing to the current element.","Returns a <code>Cursor</code> pointing to the last element of the list. …","Returns a <code>CursorMut</code> pointing to the last element of the …","","","","","","","","","","","","","","","","","","","Removes all elements from the <code>XorLinkedList</code>.","","","","","","","","","","","","","Clones and returns the pointer that points to the element …","Returns a null <code>Cursor</code> for this list.","Creates a <code>Cursor</code> from a pointer to an element and a …","Creates a <code>Cursor</code> from a pointer to an element and a …","Returns a null <code>CursorMut</code> for this list.","Creates a <code>CursorMut</code> from a pointer to an element and a …","Creates a <code>CursorMut</code> from a pointer to an element and a …","","","","","","","Empties the <code>XorLinkedList</code> without unlinking or freeing …","","","","Forcibly unlinks an object from a <code>XorLinkedList</code>.","Forcibly unlinks an object from a <code>XorLinkedList</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>Cursor</code> pointing to the first element of the …","Returns a <code>CursorMut</code> pointing to the first element of the …","Returns a reference to the object that the cursor is …","Returns a reference to the object that the cursor is …","Inserts a new element into the <code>XorLinkedList</code> after the …","Inserts a new element into the <code>XorLinkedList</code> before the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Consumes <code>CursorMut</code> and returns a reference to the object …","Returns <code>true</code> if the <code>XorLinkedList</code> is empty.","Checks whether the <code>Link</code> is linked into a <code>XorLinkedList</code>.","Checks whether the <code>Link</code> is linked into a <code>XorLinkedList</code>.","Checks if the cursor is currently pointing to the null …","Checks if the cursor is currently pointing to the null …","Gets an iterator over the objects in the <code>XorLinkedList</code>.","Moves the cursor to the next element of the <code>XorLinkedList</code>.","Moves the cursor to the next element of the <code>XorLinkedList</code>.","Moves the cursor to the previous element of the …","Moves the cursor to the previous element of the …","Creates a new <code>Link</code>.","Creates a new <code>Link</code>.","Creates an empty <code>XorLinkedList</code>.","Returns the “next” link pointer of <code>ptr</code>.","","","","","","","","","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the next element of the …","Returns a cursor pointing to the previous element of the …","Returns a cursor pointing to the previous element of the …","Removes the last element of the <code>XorLinkedList</code>.","Removes the first element of the <code>XorLinkedList</code>.","Returns the “prev” link pointer of <code>ptr</code>.","","","Inserts a new element at the end of the <code>XorLinkedList</code>.","Inserts a new element at the start of the <code>XorLinkedList</code>.","","","Removes the current element from the <code>XorLinkedList</code>.","Replaces the “next” or “prev” link pointer of <code>ptr</code>.","","","Removes the current element from the <code>XorLinkedList</code> and …","Reverses the list in-place.","Assigns the “prev” and “next” link pointers of <code>ptr</code>.","","","","","Inserts the elements from the given <code>XorLinkedList</code> after …","Moves all element from the given <code>XorLinkedList</code> before the …","Splits the list into two after the current element. This …","Splits the list into two before the current element. This …","Takes all the elements out of the <code>XorLinkedList</code>, leaving …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,9,9,24,0,0,27,2,0,0,0,80,80,19,0,27,0,0,0,0,0,0,9,0,19,0,0,0,2,6,6,6,8,9,6,8,9,6,8,9,6,8,9,0,8,6,9,6,9,6,8,9,6,19,6,8,8,8,8,8,8,8,8,8,8,24,27,27,9,6,8,9,6,19,6,8,8,8,8,8,8,8,8,8,8,0,27,27,0,8,0,27,0,2,0,6,8,9,6,8,9,6,8,9,6,8,9,0,0,0,0,0,0,0,0,0,0,0,32,33,34,36,36,37,38,35,34,36,39,42,32,33,37,38,35,34,36,39,42,32,33,36,37,38,35,39,32,33,37,38,35,39,32,33,35,36,36,36,36,37,38,36,32,33,36,36,37,38,36,37,38,37,38,35,34,36,39,42,32,33,36,36,35,34,34,34,37,38,35,34,36,39,42,32,33,36,36,39,42,34,36,37,38,35,34,36,35,34,35,34,37,38,36,43,39,42,32,32,32,33,33,33,39,42,35,34,35,34,36,36,43,32,32,33,33,36,36,32,33,34,32,33,34,32,33,43,32,32,33,33,43,32,33,34,34,34,34,36,37,38,35,39,32,33,37,38,35,34,36,39,42,32,33,37,38,35,34,36,39,42,32,33,37,38,35,34,36,39,42,32,33,0,0,52,0,0,0,0,0,0,0,0,0,54,0,0,52,54,44,45,46,48,48,49,50,47,46,48,56,54,51,57,52,44,45,49,50,47,46,48,56,54,51,57,52,44,45,48,49,50,47,51,52,44,45,49,50,47,51,52,44,45,47,53,44,45,48,48,48,48,49,50,48,44,45,48,48,52,48,48,48,49,50,48,52,49,50,49,50,47,46,48,56,54,51,57,52,44,45,48,48,47,46,46,48,56,46,46,49,50,47,46,48,56,54,51,57,52,44,45,48,48,51,57,46,48,49,50,47,46,48,53,44,45,48,48,47,46,47,46,49,50,48,51,57,44,44,44,45,45,45,51,57,54,54,53,44,45,47,46,47,46,44,44,45,45,48,44,45,46,44,45,46,53,44,45,44,45,53,44,45,53,44,45,44,44,45,45,53,44,45,44,45,53,44,45,48,49,50,47,51,52,44,45,49,50,47,46,48,56,54,51,57,52,44,45,49,50,47,46,48,56,54,51,57,52,44,45,49,50,47,46,48,56,54,51,57,52,44,45,48,48,0,0,0,0,0,0,0,0,0,0,60,61,62,65,66,63,62,64,67,68,60,61,65,66,63,62,64,67,68,60,61,64,65,66,63,67,60,61,65,66,63,67,60,61,63,64,64,64,64,65,66,64,60,61,64,64,65,66,64,65,66,65,66,63,62,64,67,68,60,61,64,64,63,62,62,65,66,63,62,64,67,68,60,61,64,64,67,68,62,64,65,66,63,62,64,63,62,65,66,64,69,67,68,60,60,61,61,63,62,64,60,61,64,60,61,62,60,61,62,60,61,69,60,61,62,62,64,65,66,63,67,60,61,65,66,63,62,64,67,68,60,61,65,66,63,62,64,67,68,60,61,65,66,63,62,64,67,68,60,61,0,0,0,0,0,0,0,0,0,0,70,71,72,74,74,75,76,73,72,74,77,78,70,71,75,76,73,72,74,77,78,70,71,74,75,76,73,77,70,71,75,76,73,77,70,71,73,74,74,74,74,74,74,75,76,74,70,71,74,74,75,76,74,75,76,75,76,73,72,74,77,78,70,71,74,74,73,72,72,72,75,76,73,72,74,77,78,70,71,74,74,77,78,72,74,75,76,73,72,74,73,72,73,72,75,76,74,79,77,78,70,70,71,71,77,78,73,72,73,72,74,74,79,70,71,74,74,70,71,72,79,70,71,72,74,79,70,71,70,71,72,72,72,72,74,75,76,73,77,70,71,75,76,73,72,74,77,78,70,71,75,76,73,72,74,77,78,70,71,75,76,73,72,74,77,78,70,71],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[],[[1,[-1]]]],-1],3,[4,5]],[[[6,[-1]]],-1,7],[-1,-2,[],[]],[[[6,[-1]]],-1,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[[6,[-1]]],7],[[[8,[-1]]],[[8,[-1]]],[]],[[[9,[-1]]],[[9,[-1]]],10],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[[],[[8,[-1]]],[]],[[[6,[-1]]],-1,7],[[[9,[-1]],[9,[-1]]],3,12],[[[6,[-1]],13],14,[15,7]],[[[9,[-1]],13],14,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[16,[-1]]],[[6,[-1]]],7],[[[19,[],[[17,[-1]],[18,[-2]]]],-1],-2,7,[]],[[],[[6,[-1]]],7],[[[8,[[20,[-1]]]]],[[20,[-1]]],7],[[[8,[[21,[[6,[-1]]]]]]],[[21,[[6,[-1]]]]],7],[[[8,[[22,[-1]]]]],[[22,[-1]]],7],[[[8,[[21,[[16,[-1]]]]]]],[[21,[[16,[-1]]]]],7],[[[8,[[16,[-1]]]]],[[16,[-1]]],7],[[[8,[-1]]],-1,7],[[[8,[[21,[[20,[-1]]]]]]],[[21,[[20,[-1]]]]],7],[[[8,[[21,[-1]]]]],[[21,[-1]]],7],[[[8,[[6,[-1]]]]],[[6,[-1]]],7],[[[8,[[21,[[22,[-1]]]]]]],[[21,[[22,[-1]]]]],7],[[[24,[],[[23,[-1]]]]],-1,[]],[[[27,[],[[25,[-1]],[26,[-2]]]]],[],2,19],[[[27,[],[[25,[-1]],[26,[-2]]]]],[],2,19],[[[9,[-1]],-2],11,28,29],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[[16,[-1]]],7],[[[19,[],[[17,[-1]],[18,[-2]]]],-2],-1,7,[]],[[[6,[-1]]],[],7],[[[8,[[22,[-1]]]],[22,[-1]]],[],7],[[[8,[[21,[[20,[-1]]]]]],[21,[[20,[-1]]]]],[],7],[[[8,[[20,[-1]]]],[20,[-1]]],[],7],[[[8,[[21,[-1]]]],[21,[-1]]],[],7],[[[8,[-1]],-1],[],7],[[[8,[[21,[[22,[-1]]]]]],[21,[[22,[-1]]]]],[],7],[[[8,[[6,[-1]]]],[6,[-1]]],[],7],[[[8,[[21,[[6,[-1]]]]]],[21,[[6,[-1]]]]],[],7],[[[8,[[21,[[16,[-1]]]]]],[21,[[16,[-1]]]]],[],7],[[[8,[[16,[-1]]]],[16,[-1]]],[],7],0,[[[27,[],[[25,[-1]],[26,[-2]]]]],-1,2,19],[[[27,[],[[25,[-1]],[26,[-2]]]]],-1,2,19],0,[[],[[8,[-1]]],[]],0,[[[27,[],[[25,[-1]],[26,[-2]]]]],-2,2,19],0,[[[2,[],[[1,[-1]]]],-1],11,[4,5]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,0,0,0,0,0,0,0,0,0,0,[[32,-1],3,[]],[[33,-1],3,[]],[[[34,[-1]]],[[35,[-1]]],27],[[[36,[-1]]],[[35,[-1]]],27],[[[36,[-1]]],[[34,[-1]]],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],11,27],[37,37],[38,38],[[[35,[-1]]],[[35,[-1]]],27],[[[39,[-1]]],[[39,[-1]]],27],[32,32],[33,33],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[35,[-1]]],40,27],[[[36,[-1]]],[[35,[-1]]],27],[[[36,[-1]]],[[35,[-1]]],27],[[[36,[-1]]],[[34,[-1]]],27],[[[36,[-1]]],[[34,[-1]]],27],[[],37],[[],38],[[],[[36,[-1]]],[27,41]],[[],32],[[],33],[[[36,[-1]]],11,27],[[[36,[-1]]],11,27],[[37,13],14],[[38,13],14],[[[36,[-1]],13],14,27],[37,11],[38,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[36,[-1]]],[[35,[-1]]],27],[[[36,[-1]]],[[34,[-1]]],27],[[[35,[-1]]],40,27],[[[34,[-1]]],40,27],[[[34,[-1]]],11,27],[[[34,[-1]]],11,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],[[39,[-1]]],27],[[[36,[-1]]],[[42,[-1]]],27],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1]]],40,27],[[[36,[-1]]],3,27],[37,3],[38,3],[[[35,[-1]]],3,27],[[[34,[-1]]],3,27],[[[36,[-1]]],[[39,[-1]]],27],[[[35,[-1]]],11,27],[[[34,[-1]]],11,27],[[[35,[-1]]],11,27],[[[34,[-1]]],11,27],[[],37],[[],38],[-1,[[36,[-1]]],27],[[43,-1],[[40,[-1]]],[]],[[[39,[-1]]],40,27],[[[42,[-1]]],40,27],[[32,-1],[[40,[-1]]],[]],[[32,-1],[[40,[-1]]],[]],[[32,-1,[40,[-1]]],[[40,[-1]]],[]],[[33,-1],[[40,[-1]]],[]],[[33,-1],[[40,[-1]]],[]],[[33,-1,[40,[-1]]],[[40,[-1]]],[]],[[[39,[-1]]],40,27],[[[42,[-1]]],40,27],[[[35,[-1]]],[[35,[-1]]],27],[[[34,[-1]]],[[35,[-1]]],27],[[[35,[-1]]],[[35,[-1]]],27],[[[34,[-1]]],[[35,[-1]]],27],[[[36,[-1]]],40,27],[[[36,[-1]]],40,27],[[43,-1],[[40,[-1]]],[]],[[32,-1],[[40,[-1]]],[]],[[32,-1,[40,[-1]]],[[40,[-1]]],[]],[[33,-1],[[40,[-1]]],[]],[[33,-1,[40,[-1]]],[[40,[-1]]],[]],[[[36,[-1]]],11,27],[[[36,[-1]]],11,27],[[32,-1],11,[]],[[33,-1],11,[]],[[[34,[-1]]],40,27],[[32,-1,[40,[-1]],[40,[-1]]],11,[]],[[33,-1,[40,[-1]],[40,[-1]]],11,[]],[[[34,[-1]]],30,27],[[32,-1,[40,[-1]],[40,[-1]]],11,[]],[[33,-1,[40,[-1]],[40,[-1]]],11,[]],[[43,-1,[40,[-1]]],11,[]],[[32,-1,[40,[-1]]],11,[]],[[32,-1,[40,[-1]]],11,[]],[[33,-1,[40,[-1]]],11,[]],[[33,-1,[40,[-1]]],11,[]],[[43,-1,[40,[-1]]],11,[]],[[32,-1,[40,[-1]]],11,[]],[[33,-1,[40,[-1]]],11,[]],[[[34,[-1]],[36,[-1]]],11,27],[[[34,[-1]],[36,[-1]]],11,27],[[[34,[-1]]],[[36,[-1]]],[10,27]],[[[34,[-1]]],[[36,[-1]]],[10,27]],[[[36,[-1]]],[[36,[-1]]],[10,27]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[44,-1],3,[]],[[45,-1],3,[]],[[[46,[-1]]],[[47,[-1]]],27],[[[48,[-1]]],[[47,[-1]]],27],[[[48,[-1]]],[[46,[-1]]],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[-1]]],11,27],[49,49],[50,50],[[[47,[-1]]],[[47,[-1]]],27],[[[51,[-1]]],[[51,[-1]]],27],[52,52],[44,44],[45,45],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[47,[-1]]],40,27],[[53,-1],52,[]],[[44,-1],52,[]],[[45,-1],52,[]],[[[48,[-1]]],[[47,[-1]]],27],[[[48,[-1]]],[[47,[-1]]],27],[[[48,[-1]]],[[46,[-1]]],27],[[[48,[-1]]],[[46,[-1]]],27],[[],49],[[],50],[[],[[48,[-1]]],[27,41]],[[],44],[[],45],[[[48,[-1]]],11,27],[[[48,[-1]],-2],[[54,[-1]]],24,[7,55]],[[52,52],3],[[[48,[-1]]],11,27],[[[48,[-1]],-2],[[47,[-1]]],24,[7,55]],[[[48,[-1]],-2],[[46,[-1]]],24,[7,55]],[[49,13],14],[[50,13],14],[[[48,[-1]],13],14,27],[[52,13],14],[49,11],[50,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[48,[-1]]],[[47,[-1]]],27],[[[48,[-1]]],[[46,[-1]]],27],[[[47,[-1]]],40,27],[[[46,[-1]]],40,27],[[[46,[-1]]],11,24],[[[48,[-1]]],[[46,[-1]]],24],[[[56,[-1]]],[[46,[-1]]],27],[[[46,[-1]]],11,27],[[[46,[-1]]],11,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[-1]]],[[51,[-1]]],27],[[[48,[-1]]],[[57,[-1]]],27],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1]]],40,27],[[[48,[-1]]],3,27],[49,3],[50,3],[[[47,[-1]]],3,27],[[[46,[-1]]],3,27],[[[48,[-1]]],[[51,[-1]]],27],[[53,-1],[[40,[-1]]],[]],[[44,-1],[[40,[-1]]],[]],[[45,-1],[[40,[-1]]],[]],[[[48,[-1]],[9,[-2]]],[[47,[-1]]],24,[7,55]],[[[48,[-1]],[9,[-2]]],[[46,[-1]]],24,[7,55]],[[[47,[-1]]],11,27],[[[46,[-1]]],11,27],[[[47,[-1]]],11,27],[[[46,[-1]]],11,27],[[],49],[[],50],[-1,[[48,[-1]]],27],[[[51,[-1]]],40,27],[[[57,[-1]]],40,27],[[44,-1],[[40,[-1]]],[]],[[44,-1],[[40,[-1]]],[]],[[44,-1,[40,[-1]]],[[40,[-1]]],[]],[[45,-1,[40,[-1]]],[[40,[-1]]],[]],[[45,-1],[[40,[-1]]],[]],[[45,-1],[[40,[-1]]],[]],[[[51,[-1]]],40,27],[[[57,[-1]]],40,27],[[[54,[-1]]],[[46,[-1]]],27],[[[54,[-1]],-2],[[46,[-1]]],27,[[59,[],[[58,[]]]]]],[[53,-1],[[40,[-1]]],[]],[[44,-1],[[40,[-1]]],[]],[[45,-1],[[40,[-1]]],[]],[[[47,[-1]]],[[47,[-1]]],27],[[[46,[-1]]],[[47,[-1]]],27],[[[47,[-1]]],[[47,[-1]]],27],[[[46,[-1]]],[[47,[-1]]],27],[[44,-1],[[40,[-1]]],[]],[[44,-1,[40,[-1]]],[[40,[-1]]],[]],[[45,-1],[[40,[-1]]],[]],[[45,-1,[40,[-1]]],[[40,[-1]]],[]],[[[48,[-1]],[9,[-2]],[9,[-3]]],[[51,[-1]]],24,[7,55],[7,55]],[[44,-1],11,[]],[[45,-1],11,[]],[[[46,[-1]]],40,27],[[44,-1,[40,[-1]],[40,[-1]]],11,[]],[[45,-1,[40,[-1]],[40,[-1]]],11,[]],[[[46,[-1]]],30,27],[[53,-1],[[40,[-1]]],[]],[[44,-1],[[40,[-1]]],[]],[[45,-1],[[40,[-1]]],[]],[[44,-1,[40,[-1]],[40,[-1]]],11,[]],[[45,-1,[40,[-1]],[40,[-1]]],11,[]],[[53,-1,52],11,[]],[[44,-1,52],11,[]],[[45,-1,52],11,[]],[[53,-1,[40,[-1]]],11,[]],[[44,-1,[40,[-1]]],11,[]],[[45,-1,[40,[-1]]],11,[]],[[44,-1,[40,[-1]]],11,[]],[[44,-1,[40,[-1]]],11,[]],[[45,-1,[40,[-1]]],11,[]],[[45,-1,[40,[-1]]],11,[]],[[53,-1,[40,[-1]]],11,[]],[[44,-1,[40,[-1]]],11,[]],[[45,-1,[40,[-1]]],11,[]],[[44,-1,[40,[-1]]],11,[]],[[45,-1,[40,[-1]]],11,[]],[[53,-1,[40,[-1]]],11,[]],[[44,-1,[40,[-1]]],11,[]],[[45,-1,[40,[-1]]],11,[]],[[[48,[-1]]],[[48,[-1]]],[10,27]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[48,[-1]],[9,[-2]]],[[47,[-1]]],24,[7,55]],[[[48,[-1]],[9,[-2]]],[[46,[-1]]],24,[7,55]],0,0,0,0,0,0,0,0,0,0,[[60,-1],3,[]],[[61,-1],3,[]],[[[62,[-1]]],[[63,[-1]]],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[64,[-1]]],11,27],[65,65],[66,66],[[[63,[-1]]],[[63,[-1]]],27],[[[67,[-1]]],[[67,[-1]]],27],[60,60],[61,61],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[63,[-1]]],40,27],[[[64,[-1]]],[[63,[-1]]],27],[[[64,[-1]]],[[63,[-1]]],27],[[[64,[-1]]],[[62,[-1]]],27],[[[64,[-1]]],[[62,[-1]]],27],[[],65],[[],66],[[],[[64,[-1]]],[27,41]],[[],60],[[],61],[[[64,[-1]]],11,27],[[[64,[-1]]],11,27],[[65,13],14],[[66,13],14],[[[64,[-1]],13],14,27],[65,11],[66,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[64,[-1]]],[[63,[-1]]],27],[[[64,[-1]]],[[62,[-1]]],27],[[[63,[-1]]],40,27],[[[62,[-1]]],40,27],[[[62,[-1]]],11,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[64,[-1]]],[[68,[-1]]],27],[[[64,[-1]]],[[67,[-1]]],27],[-1,-2,[],[]],[-1,-2,[],[]],[[[62,[-1]]],40,27],[[[64,[-1]]],3,27],[65,3],[66,3],[[[63,[-1]]],3,27],[[[62,[-1]]],3,27],[[[64,[-1]]],[[67,[-1]]],27],[[[63,[-1]]],11,27],[[[62,[-1]]],11,27],[[],65],[[],66],[-1,[[64,[-1]]],27],[[69,-1],[[40,[-1]]],[]],[[[67,[-1]]],40,27],[[[68,[-1]]],40,27],[[60,-1,[40,[-1]]],[[40,[-1]]],[]],[[60,-1],[[40,[-1]]],[]],[[61,-1,[40,[-1]]],[[40,[-1]]],[]],[[61,-1],[[40,[-1]]],[]],[[[63,[-1]]],[[63,[-1]]],27],[[[62,[-1]]],[[63,[-1]]],27],[[[64,[-1]]],40,27],[[60,-1,[40,[-1]]],[[40,[-1]]],[]],[[61,-1,[40,[-1]]],[[40,[-1]]],[]],[[[64,[-1]]],11,27],[[60,-1],11,[]],[[61,-1],11,[]],[[[62,[-1]]],40,27],[[60,-1,[40,[-1]],[40,[-1]]],11,[]],[[61,-1,[40,[-1]],[40,[-1]]],11,[]],[[[62,[-1]]],30,27],[[60,-1,[40,[-1]],[40,[-1]]],11,[]],[[61,-1,[40,[-1]],[40,[-1]]],11,[]],[[69,-1,[40,[-1]]],11,[]],[[60,-1,[40,[-1]]],11,[]],[[61,-1,[40,[-1]]],11,[]],[[[62,[-1]],[64,[-1]]],11,27],[[[62,[-1]]],[[64,[-1]]],[10,27]],[[[64,[-1]]],[[64,[-1]]],[10,27]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,0,0,0,0,0,0,0,0,0,[[70,-1],3,[]],[[71,-1],3,[]],[[[72,[-1]]],[[73,[-1]]],27],[[[74,[-1]]],[[73,[-1]]],27],[[[74,[-1]]],[[72,[-1]]],27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[74,[-1]]],11,27],[75,75],[76,76],[[[73,[-1]]],[[73,[-1]]],27],[[[77,[-1]]],[[77,[-1]]],27],[70,70],[71,71],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[73,[-1]]],40,27],[[[74,[-1]]],[[73,[-1]]],27],[[[74,[-1]]],[[73,[-1]]],27],[[[74,[-1]]],[[73,[-1]]],27],[[[74,[-1]]],[[72,[-1]]],27],[[[74,[-1]]],[[72,[-1]]],27],[[[74,[-1]]],[[72,[-1]]],27],[[],75],[[],76],[[],[[74,[-1]]],[27,41]],[[],70],[[],71],[[[74,[-1]]],11,27],[[[74,[-1]]],11,27],[[75,13],14],[[76,13],14],[[[74,[-1]],13],14,27],[75,11],[76,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[74,[-1]]],[[73,[-1]]],27],[[[74,[-1]]],[[72,[-1]]],27],[[[73,[-1]]],40,27],[[[72,[-1]]],40,27],[[[72,[-1]]],11,27],[[[72,[-1]]],11,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[74,[-1]]],[[77,[-1]]],27],[[[74,[-1]]],[[78,[-1]]],27],[-1,-2,[],[]],[-1,-2,[],[]],[[[72,[-1]]],40,27],[[[74,[-1]]],3,27],[75,3],[76,3],[[[73,[-1]]],3,27],[[[72,[-1]]],3,27],[[[74,[-1]]],[[77,[-1]]],27],[[[73,[-1]]],11,27],[[[72,[-1]]],11,27],[[[73,[-1]]],11,27],[[[72,[-1]]],11,27],[[],75],[[],76],[-1,[[74,[-1]]],27],[[79,-1,[40,[-1]]],[[40,[-1]]],[]],[[[77,[-1]]],40,27],[[[78,[-1]]],40,27],[[70,-1],[[40,[-1]]],[]],[[70,-1,[40,[-1]]],[[40,[-1]]],[]],[[71,-1],[[40,[-1]]],[]],[[71,-1,[40,[-1]]],[[40,[-1]]],[]],[[[77,[-1]]],40,27],[[[78,[-1]]],40,27],[[[73,[-1]]],[[73,[-1]]],27],[[[72,[-1]]],[[73,[-1]]],27],[[[73,[-1]]],[[73,[-1]]],27],[[[72,[-1]]],[[73,[-1]]],27],[[[74,[-1]]],40,27],[[[74,[-1]]],40,27],[[79,-1,[40,[-1]]],[[40,[-1]]],[]],[[70,-1,[40,[-1]]],[[40,[-1]]],[]],[[71,-1,[40,[-1]]],[[40,[-1]]],[]],[[[74,[-1]]],11,27],[[[74,[-1]]],11,27],[[70,-1],11,[]],[[71,-1],11,[]],[[[72,[-1]]],40,27],[[79,-1,[40,[-1]],[40,[-1]]],11,[]],[[70,-1,[40,[-1]],[40,[-1]]],11,[]],[[71,-1,[40,[-1]],[40,[-1]]],11,[]],[[[72,[-1]]],30,27],[[[74,[-1]]],11,27],[[79,-1,[40,[-1]],[40,[-1]]],11,[]],[[70,-1,[40,[-1]],[40,[-1]]],11,[]],[[71,-1,[40,[-1]],[40,[-1]]],11,[]],[[70,-1,[40,[-1]]],11,[]],[[71,-1,[40,[-1]]],11,[]],[[[72,[-1]],[74,[-1]]],11,27],[[[72,[-1]],[74,[-1]]],11,27],[[[72,[-1]]],[[74,[-1]]],[10,27]],[[[72,[-1]]],[[74,[-1]]],[10,27]],[[[74,[-1]]],[[74,[-1]]],[10,27]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]]],"c":[],"p":[[17,"LinkPtr"],[10,"LinkOps",0],[1,"bool"],[10,"Copy",873],[10,"Eq",874],[5,"UnsafeRef",0],[10,"Sized",873],[5,"DefaultPointerOps",0],[6,"Bound",0],[10,"Clone",875],[1,"tuple"],[10,"PartialEq",874],[5,"Formatter",876],[8,"Result",876],[10,"Debug",876],[5,"Box",877],[17,"Value"],[17,"Pointer"],[10,"PointerOps",0],[5,"Rc",878],[5,"Pin",879],[5,"Arc",880],[17,"Key"],[10,"KeyAdapter",0],[17,"LinkOps"],[17,"PointerOps"],[10,"Adapter",0],[10,"Hash",881],[10,"Hasher",881],[6,"Result",882],[5,"TypeId",883],[5,"LinkOps",111],[5,"AtomicLinkOps",111],[5,"CursorMut",111],[5,"Cursor",111],[5,"LinkedList",111],[5,"Link",111],[5,"AtomicLink",111],[5,"Iter",111],[6,"Option",884],[10,"Default",885],[5,"IntoIter",111],[10,"LinkedListOps",111],[5,"LinkOps",294],[5,"AtomicLinkOps",294],[5,"CursorMut",294],[5,"Cursor",294],[5,"RBTree",294],[5,"Link",294],[5,"AtomicLink",294],[5,"Iter",294],[6,"Color",294],[10,"RBTreeOps",294],[6,"Entry",294],[10,"Ord",874],[5,"InsertCursor",294],[5,"IntoIter",294],[17,"Output"],[10,"FnOnce",886],[5,"LinkOps",535],[5,"AtomicLinkOps",535],[5,"CursorMut",535],[5,"Cursor",535],[5,"SinglyLinkedList",535],[5,"Link",535],[5,"AtomicLink",535],[5,"Iter",535],[5,"IntoIter",535],[10,"SinglyLinkedListOps",535],[5,"LinkOps",695],[5,"AtomicLinkOps",695],[5,"CursorMut",695],[5,"Cursor",695],[5,"XorLinkedList",695],[5,"Link",695],[5,"AtomicLink",695],[5,"Iter",695],[5,"IntoIter",695],[10,"XorLinkedListOps",695],[10,"DefaultLinkOps",0]],"b":[[58,"impl-PointerOps-for-DefaultPointerOps%3CRc%3CT%3E%3E"],[59,"impl-PointerOps-for-DefaultPointerOps%3CPin%3CUnsafeRef%3CT%3E%3E%3E"],[60,"impl-PointerOps-for-DefaultPointerOps%3CArc%3CT%3E%3E"],[61,"impl-PointerOps-for-DefaultPointerOps%3CPin%3CBox%3CT%3E%3E%3E"],[62,"impl-PointerOps-for-DefaultPointerOps%3CBox%3CT%3E%3E"],[63,"impl-PointerOps-for-DefaultPointerOps%3C%26T%3E"],[64,"impl-PointerOps-for-DefaultPointerOps%3CPin%3CRc%3CT%3E%3E%3E"],[65,"impl-PointerOps-for-DefaultPointerOps%3CPin%3C%26T%3E%3E"],[66,"impl-PointerOps-for-DefaultPointerOps%3CUnsafeRef%3CT%3E%3E"],[67,"impl-PointerOps-for-DefaultPointerOps%3CPin%3CArc%3CT%3E%3E%3E"],[78,"impl-PointerOps-for-DefaultPointerOps%3CArc%3CT%3E%3E"],[79,"impl-PointerOps-for-DefaultPointerOps%3CPin%3CRc%3CT%3E%3E%3E"],[80,"impl-PointerOps-for-DefaultPointerOps%3CRc%3CT%3E%3E"],[81,"impl-PointerOps-for-DefaultPointerOps%3CPin%3C%26T%3E%3E"],[82,"impl-PointerOps-for-DefaultPointerOps%3C%26T%3E"],[83,"impl-PointerOps-for-DefaultPointerOps%3CPin%3CArc%3CT%3E%3E%3E"],[84,"impl-PointerOps-for-DefaultPointerOps%3CUnsafeRef%3CT%3E%3E"],[85,"impl-PointerOps-for-DefaultPointerOps%3CPin%3CUnsafeRef%3CT%3E%3E%3E"],[86,"impl-PointerOps-for-DefaultPointerOps%3CPin%3CBox%3CT%3E%3E%3E"],[87,"impl-PointerOps-for-DefaultPointerOps%3CBox%3CT%3E%3E"],[198,"impl-IntoIterator-for-%26LinkedList%3CA%3E"],[199,"impl-IntoIterator-for-LinkedList%3CA%3E"],[219,"impl-LinkedListOps-for-LinkOps"],[220,"impl-SinglyLinkedListOps-for-LinkOps"],[221,"impl-XorLinkedListOps-for-LinkOps"],[222,"impl-LinkedListOps-for-AtomicLinkOps"],[223,"impl-SinglyLinkedListOps-for-AtomicLinkOps"],[224,"impl-XorLinkedListOps-for-AtomicLinkOps"],[234,"impl-LinkedListOps-for-LinkOps"],[235,"impl-XorLinkedListOps-for-LinkOps"],[236,"impl-LinkedListOps-for-AtomicLinkOps"],[237,"impl-XorLinkedListOps-for-AtomicLinkOps"],[249,"impl-SinglyLinkedListOps-for-LinkOps"],[250,"impl-LinkedListOps-for-LinkOps"],[251,"impl-SinglyLinkedListOps-for-AtomicLinkOps"],[252,"impl-LinkedListOps-for-AtomicLinkOps"],[413,"impl-IntoIterator-for-%26RBTree%3CA%3E"],[414,"impl-IntoIterator-for-RBTree%3CA%3E"],[438,"impl-LinkedListOps-for-LinkOps"],[439,"impl-SinglyLinkedListOps-for-LinkOps"],[440,"impl-XorLinkedListOps-for-LinkOps"],[441,"impl-XorLinkedListOps-for-AtomicLinkOps"],[442,"impl-LinkedListOps-for-AtomicLinkOps"],[443,"impl-SinglyLinkedListOps-for-AtomicLinkOps"],[455,"impl-LinkedListOps-for-LinkOps"],[456,"impl-XorLinkedListOps-for-LinkOps"],[457,"impl-LinkedListOps-for-AtomicLinkOps"],[458,"impl-XorLinkedListOps-for-AtomicLinkOps"],[477,"impl-SinglyLinkedListOps-for-LinkOps"],[478,"impl-LinkedListOps-for-LinkOps"],[479,"impl-SinglyLinkedListOps-for-AtomicLinkOps"],[480,"impl-LinkedListOps-for-AtomicLinkOps"],[619,"impl-IntoIterator-for-SinglyLinkedList%3CA%3E"],[620,"impl-IntoIterator-for-%26SinglyLinkedList%3CA%3E"],[638,"impl-XorLinkedListOps-for-LinkOps"],[639,"impl-SinglyLinkedListOps-for-LinkOps"],[640,"impl-XorLinkedListOps-for-AtomicLinkOps"],[641,"impl-SinglyLinkedListOps-for-AtomicLinkOps"],[784,"impl-IntoIterator-for-%26XorLinkedList%3CA%3E"],[785,"impl-IntoIterator-for-XorLinkedList%3CA%3E"],[805,"impl-SinglyLinkedListOps-for-LinkOps"],[806,"impl-XorLinkedListOps-for-LinkOps"],[807,"impl-SinglyLinkedListOps-for-AtomicLinkOps"],[808,"impl-XorLinkedListOps-for-AtomicLinkOps"]]}],\
["ktest",{"doc":"The kernel mode testing framework of Asterinas.","t":"PGFFFPFPPNNNNNNNNNNNNNNNNNNOONNONNNNONNNNNNNNNNNNXOOOONNOCNCONNNNNCNNNNNNNNNNNNNNNFIIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPNNNNHNNNFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ExpectedPanicNotMatch","KtestError","KtestItem","KtestItemInfo","KtestIter","Panic","PanicInfo","ShouldPanicButNoPanic","Unknown","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","col","col","eq","eq","file","fmt","fmt","fmt","fmt","fn_name","from","from","from","from","from","info","into","into","into","into","into","into_iter","ktest","line","line","message","module_path","new","next","package","path","run","runner","source","to_owned","to_owned","to_owned","to_owned","to_string","tree","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","KtestPath","KtestPathIter","PathElement","SuffixTrie","borrow","borrow","borrow_mut","borrow_mut","contains","default","default","ends_with","fmt","fmt","fmt","from","from","from","from","from_paths","insert","into","into","is_empty","iter","len","matches","new","new","pop_back","pop_front","push_back","push_front","starts_with","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Failed","KtestResult","Ok","borrow","borrow_mut","from","into","run_ktests","try_from","try_into","type_id","KtestCrate","KtestCrateIter","KtestModule","KtestModuleIter","KtestTree","KtestTreeIter","add_ktest","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","fmt","fmt","from","from","from","from","from","from","from_iter","into","into","into","into","into","into","into_iter","into_iter","into_iter","iter","iter","iter","name","name","new","next","next","next","nr_this_tests","nr_tot_crates","nr_tot_tests","nr_tot_tests","nr_tot_tests","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"ktest"],[82,"ktest::path"],[123,"ktest::runner"],[134,"ktest::tree"],[204,"core::fmt"],[205,"core::fmt"],[206,"core::result"],[207,"alloc::string"],[208,"core::any"],[209,"core::ops::deref"],[210,"core::iter::traits::double_ended"],[211,"core::iter::traits::collect"],[212,"core::fmt"],[213,"core::iter::traits::iterator"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The test attribute macro to mark a test function.","","","","","","","","","Run the test with a given catch_unwind implementation.","Test runner enabling control over the tests.","","","","","","","The source module tree of ktests.","","","","","","","","","","","","","","","","","","","","","","","","Find if any suffix of the path exists in the suffix trie.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Find if there is a perfect match in this suffix trie.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Run all the tests registered by <code>#[ktest]</code> in the …","","","","","The <code>KtestCrateIter</code> will iterate over all modules in a …","","The <code>KtestModuleIter</code> will iterate over all tests in a …","","The <code>KtestTreeIter</code> will iterate over all crates. Yeilding …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,0,0,0,0,2,0,2,2,11,1,2,3,4,11,1,2,3,4,1,2,3,4,1,2,3,4,1,3,3,4,1,1,1,3,4,3,11,1,2,3,4,4,11,1,2,3,4,11,0,1,3,1,3,4,11,3,0,4,0,3,1,2,3,4,1,0,11,1,2,3,4,11,1,2,3,4,11,1,2,3,4,0,0,0,0,21,15,21,15,15,21,15,21,21,21,15,21,21,21,15,15,15,21,15,21,21,21,15,21,15,21,21,21,21,21,21,21,15,21,15,21,15,26,0,26,26,26,26,26,0,26,26,26,0,0,0,0,0,0,30,30,33,35,34,31,32,30,33,35,34,31,32,30,31,32,30,33,35,34,31,32,30,30,33,35,34,31,32,33,35,34,30,31,32,31,32,30,33,35,34,31,30,30,31,32,30,33,35,34,31,32,30,33,35,34,31,32,30,33,35,34,31,32],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[[3,3],6],[[4,4],6],0,[[1,7],8],[[1,7],8],[[3,7],8],[[4,7],8],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[[5,[6,[10,[9]]]],3],4],[11,[[10,[-1]]],[]],0,0,[4,[[12,[5,2]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[15,-2],6,[[18,[],[[16,[17]]]]],[[20,[],[[19,[-1]]]]]],[[],21],[[],15],[[21,21],6],[[21,7],8],[[21,7],8],[[15,7],8],[9,21],[-1,-1,[]],[9,21],[-1,-1,[]],[-1,15,[[22,[],[[19,[21]]]]]],[[15,-2],5,[[18,[],[[16,[17]]]]],[[20,[],[[19,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[21,6],[21,23],[21,24],[[15,-2],6,[[18,[],[[16,[17]]]]],[[20,[],[[19,[-1]]]]]],[[],21],[[],15],[21,[[10,[17]]]],[21,[[10,[17]]]],[[21,9],5],[[21,9],5],[[21,21],6],[-1,13,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,[10,[-2]],[10,[[25,[9]]]]],26,[[28,[27]]],[[29,[],[[19,[13]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,14,[]],0,0,0,0,0,0,[[30,4],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],30],[[31,7],8],[[32,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,30,[[22,[],[[19,[4]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[30,33],[31,34],[32,35],[31,17],[32,9],[[],30],[33,[[10,[-1]]],[]],[35,[[10,[-1]]],[]],[34,[[10,[-1]]],[]],[31,24],[30,24],[30,24],[31,24],[32,24],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]]],"c":[],"p":[[5,"PanicInfo",0],[6,"KtestError",0],[5,"KtestItemInfo",0],[5,"KtestItem",0],[1,"tuple"],[1,"bool"],[5,"Formatter",204],[8,"Result",204],[1,"str"],[6,"Option",205],[5,"KtestIter",0],[6,"Result",206],[5,"String",207],[5,"TypeId",208],[5,"SuffixTrie",82],[17,"Target"],[8,"PathElement",82],[10,"Deref",209],[17,"Item"],[10,"DoubleEndedIterator",210],[5,"KtestPath",82],[10,"IntoIterator",211],[8,"KtestPathIter",82],[1,"usize"],[1,"slice"],[6,"KtestResult",123],[5,"Arguments",204],[10,"Fn",212],[10,"Iterator",213],[5,"KtestTree",134],[5,"KtestModule",134],[5,"KtestCrate",134],[5,"KtestTreeIter",134],[5,"KtestModuleIter",134],[5,"KtestCrateIter",134]],"b":[[32,"impl-Display-for-PanicInfo"],[33,"impl-Debug-for-PanicInfo"],[94,"impl-Debug-for-KtestPath"],[95,"impl-Display-for-KtestPath"],[97,"impl-From%3C%26str%3E-for-KtestPath"],[99,"impl-KtestPath"]]}],\
["lazy_static",{"doc":"A macro for declaring lazily evaluated statics.","t":"KHQ","n":["LazyStatic","initialize","lazy_static"],"q":[[0,"lazy_static"]],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[0,[-1,1,2],0],"c":[],"p":[[1,"tuple"],[10,"LazyStatic",0]],"b":[]}],\
["linux_boot_params",{"doc":"The definition of Linux Boot Protocol boot_params struct.","t":"PFFFGFFFFFSPFPPPPPFFPFPOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOONNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNOOOOOOOOOOO","n":["Acpi","ApmBiosInfo","BootE820Entry","BootParams","E820Type","EddDeviceParams","EddInfo","EdidInfo","EfiInfo","IstInfo","LINUX_BOOT_HEADER_MAGIC","Nvs","OlpcOfwHeader","Pmem","Pram","Ram","Reserved","ReservedKern","ScreenInfo","SetupHeader","SoftReserved","SysDescTable","Unusable","_dummy","_pad2","_pad3","_pad4","_pad5","_pad6","_pad7","_pad8","_pad9","_reserved","acpi_rsdp_addr","addr","alt_mem_k","apm_bios_info","blue_pos","blue_size","boot_flag","bootsect_kludge","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","cc_blob_address","cif_handler","cl_magic","cl_offset","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmd_line_ptr","cmdline_size","code32_start","command","cseg","cseg_16","cseg_16_len","cseg_len","device","dseg","dseg_len","dummy","e820_entries","e820_table","edd_mbr_sig_buf_entries","edd_mbr_sig_buffer","eddbuf","eddbuf_entries","edid_info","efi_info","efi_loader_signature","efi_memdesc_size","efi_memdesc_version","efi_memmap","efi_memmap_hi","efi_memmap_size","efi_systab","efi_systab_hi","event","ext_cmd_line_ptr","ext_lfb_base","ext_loader_type","ext_loader_ver","ext_mem_k","ext_ramdisk_image","ext_ramdisk_size","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","green_pos","green_size","handover_offset","hardware_subarch","hardware_subarch_data","hd0_info","hd1_info","hdr","header","heap_end_ptr","init_size","initrd_addr_max","interface_support","into","into","into","into","into","into","into","into","into","into","into","into","into","irq_desc_table","ist_info","jump","kbd_status","kernel_alignment","kernel_info_offset","kernel_version","legacy_max_cylinder","legacy_max_head","legacy_sectors_per_track","length","lfb_base","lfb_depth","lfb_height","lfb_linelength","lfb_size","lfb_width","loadflags","min_alignment","offset","ofw_magic","ofw_version","olpc_ofw_header","orig_video_cols","orig_video_ega_bx","orig_video_is_vga","orig_video_lines","orig_video_mode","orig_video_page","orig_video_points","orig_x","orig_y","pages","params","payload_length","payload_offset","perf_level","pref_address","ram_size","ramdisk_image","ramdisk_size","realmode_swtch","red_pos","red_size","relocatable_kernel","root_dev","root_flags","rsvd_pos","rsvd_size","scratch","screen_info","secure_boot","sentinel","setup_data","setup_move_size","setup_sects","signature","size","start_sys_seg","sys_desc_table","syssize","table","tboot_addr","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of_loader","unused2","unused3","version","version","version","vesa_attributes","vesapm_off","vesapm_seg","vid_mode","xloadflags"],"q":[[0,"linux_boot_params"],[289,"core::fmt"],[290,"core::fmt"],[291,"core::any"]],"d":["","","","Linux 32/64-bit Boot Protocol parameter struct.","The E820 types known to the kernel.","","","","","","Magic stored in the boot protocol header.","","","","","","","","","Linux Boot Protocol header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[10,0,0,0,0,0,0,0,0,0,0,10,0,10,10,10,10,10,0,0,10,0,10,12,1,1,1,1,1,1,1,1,3,1,11,1,1,3,3,2,2,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13,3,1,7,3,3,1,2,3,4,5,6,7,8,9,10,11,12,13,2,2,2,5,4,4,4,4,13,4,4,8,1,1,1,1,1,1,1,1,9,9,9,9,9,9,9,9,5,1,3,2,2,3,1,1,3,4,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13,3,3,2,2,2,1,1,1,2,2,2,2,13,1,2,3,4,5,6,7,8,9,10,11,12,13,7,1,2,1,2,2,2,13,13,13,6,3,3,3,3,3,3,2,2,4,7,7,1,3,3,3,3,3,3,3,3,3,3,13,2,2,5,2,2,2,2,2,3,3,2,2,2,3,3,1,1,1,1,2,2,2,5,11,2,1,2,6,1,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13,11,1,2,3,4,5,6,7,8,9,10,11,12,13,2,3,3,2,4,13,3,3,3,2,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,14],15],[[2,14],15],[[3,14],15],[[4,14],15],[[5,14],15],[[6,14],15],[[7,14],15],[[8,14],15],[[9,14],15],[[10,14],15],[[11,14],15],[[12,14],15],[[13,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[5,"BootParams",0],[5,"SetupHeader",0],[5,"ScreenInfo",0],[5,"ApmBiosInfo",0],[5,"IstInfo",0],[5,"SysDescTable",0],[5,"OlpcOfwHeader",0],[5,"EdidInfo",0],[5,"EfiInfo",0],[6,"E820Type",0],[5,"BootE820Entry",0],[5,"EddDeviceParams",0],[5,"EddInfo",0],[5,"Formatter",289],[8,"Result",289],[6,"Result",290],[5,"TypeId",291]],"b":[]}],\
["lock_api",{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":"RRKRRFFTTTTRRFFFFFFKKKFKKKKKKKKKKFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMMMMNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMMMMNNNMMMMMMMNNNMMMNNNNNNNNNNNNNNNNNMNMNMNNNNNNNNNNNNNNNNNNNNNNMNMMMNNNNNNNNNNMMMMNNNNNNNNNNNMNNN","n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_with_upgraded","try_with_upgraded_for","try_with_upgraded_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","with_upgraded","write"],"q":[[0,"lock_api"],[367,"core::marker"],[368,"core::default"],[369,"core::fmt"],[370,"core::fmt"],[371,"core::num::nonzero"],[372,"core::result"],[373,"core::option"],[374,"core::any"]],"d":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","First, tries to atomically upgrade an upgradable read lock …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into an …","First, atomically upgrades an upgradable read lock lock …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[42,41,0,16,17,0,0,16,4,3,17,42,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,1,1,3,5,7,8,10,11,9,9,9,9,12,12,13,14,15,13,14,15,13,14,15,5,19,7,20,8,10,11,22,23,5,19,10,23,24,10,11,25,10,25,5,19,7,20,8,10,11,22,23,13,14,15,5,5,19,19,7,7,20,20,8,8,10,10,11,11,22,22,23,23,13,14,13,14,15,15,15,15,46,47,13,13,13,3,14,14,14,15,15,15,5,19,7,20,8,10,11,22,23,13,14,15,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,13,14,15,16,16,13,3,14,17,17,15,17,17,15,3,14,5,16,13,3,14,17,17,33,21,5,19,7,20,8,10,22,23,5,13,14,15,4,13,14,15,15,15,7,8,10,11,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,16,13,3,14,17,41,41,42,13,3,14,17,41,33,43,43,41,42,13,3,14,21,44,44,5,19,7,20,8,10,22,23,15,15,15,15,15,15,15,15,15,21,11,44,11,44,11,11,11,11,15,15,15,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,16,3,17,9,1,3,5,19,7,20,8,10,11,22,23,17,9,21,12,5,7,8,10,11,5,7,8,10,11,15,21,11,11,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[1,2],[[[3,[-1,-2]]],2,1,4],[[[5,[-1,-2]]],2,1,6],[[[7,[-1,-2,-3]]],2,1,4,6],[[[8,[-1,-2]]],2,9,6],[[[10,[-1,-2]]],2,9,6],[[[11,[-1,-2]]],2,12,6],[9,2],[9,2],[9,2],[9,2],[12,2],[12,2],[[-1,-2],[[13,[-1,-2]]],[],[]],[[-1,-2,-3],[[14,[-1,-2,-3]]],[],[],[]],[[-1,-2],[[15,[-1,-2]]],[],[]],[[[13,[-1,-2]]],[],16,6],[[[14,[-1,-2,-3]]],[],16,4,6],[[[15,[-1,-2]]],[],17,6],[[],[[13,[-1,-2]]],16,[6,18]],[[],[[14,[-1,-2,-3]]],16,4,[6,18]],[[],[[15,[-1,-2]]],17,[6,18]],[[[5,[-1,-2]]],-2,16,6],[[[19,[-1,-2]]],-2,16,6],[[[7,[-1,-2,-3]]],-3,16,4,6],[[[20,[-1,-2,-3]]],-3,16,4,6],[[[8,[-1,-2]]],-2,17,6],[[[10,[-1,-2]]],-2,17,6],[[[11,[-1,-2]]],-2,21,6],[[[22,[-1,-2]]],-2,17,6],[[[23,[-1,-2]]],-2,17,6],[[[5,[-1,-2]]],-2,16,6],[[[19,[-1,-2]]],-2,16,6],[[[10,[-1,-2]]],-2,17,6],[[[23,[-1,-2]]],-2,17,6],[24,2],[[[10,[-1,-2]]],[[8,[-1,-2]]],24,6],[[[11,[-1,-2]]],[[8,[-1,-2]]],25,6],[25,2],[[[10,[-1,-2]]],[[11,[-1,-2]]],25,6],[25,2],[[[5,[-1,-2]]],2,16,6],[[[19,[-1,-2]]],2,16,6],[[[7,[-1,-2,-3]]],2,16,4,6],[[[20,[-1,-2,-3]]],2,16,4,6],[[[8,[-1,-2]]],2,17,6],[[[10,[-1,-2]]],2,17,6],[[[11,[-1,-2]]],2,21,6],[[[22,[-1,-2]]],2,17,6],[[[23,[-1,-2]]],2,17,6],[[[13,[-1,-2]],26],27,16,[6,28]],[[[14,[-1,-2,-3]],26],27,16,4,[6,28]],[[[15,[-1,-2]],26],27,17,[6,28]],[[[5,[-1,-2]],26],27,16,[28,6]],[[[5,[-1,-2]],26],27,16,[29,6]],[[[19,[-1,-2]],26],27,16,[28,6]],[[[19,[-1,-2]],26],27,16,[29,6]],[[[7,[-1,-2,-3]],26],27,16,4,[29,6]],[[[7,[-1,-2,-3]],26],27,16,4,[28,6]],[[[20,[-1,-2,-3]],26],27,16,4,[29,6]],[[[20,[-1,-2,-3]],26],27,16,4,[28,6]],[[[8,[-1,-2]],26],27,17,[28,6]],[[[8,[-1,-2]],26],27,17,[29,6]],[[[10,[-1,-2]],26],27,17,[28,6]],[[[10,[-1,-2]],26],27,17,[29,6]],[[[11,[-1,-2]],26],27,21,[28,6]],[[[11,[-1,-2]],26],27,21,[29,6]],[[[22,[-1,-2]],26],27,17,[29,6]],[[[22,[-1,-2]],26],27,17,[28,6]],[[[23,[-1,-2]],26],27,17,[29,6]],[[[23,[-1,-2]],26],27,17,[28,6]],[[[13,[-1,-2]]],2,16,6],[[[14,[-1,-2,-3]]],2,16,4,6],[[[13,[-1,-2]]],2,1,6],[[[14,[-1,-2,-3]]],2,1,4,6],[[[15,[-1,-2]]],2,17,6],[[[15,[-1,-2]]],2,9,6],[[[15,[-1,-2]]],2,17,6],[[[15,[-1,-2]]],2,9,6],[-1,-1,[]],[-1,-1,[]],[-1,[[13,[-2,-1]]],[],16],[-1,-1,[]],[30,-1,[]],[-1,-1,[]],[-1,[[14,[-2,-3,-1]]],[],16,4],[30,-1,[]],[-1,-1,[]],[30,-1,[]],[-1,[[15,[-2,-1]]],[],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[13,[-1,-2]]],-2,16,6],[[[14,[-1,-2,-3]]],-3,16,4,6],[[[15,[-1,-2]]],-2,17,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2]]],-2,16,[]],[[[14,[-1,-2,-3]]],-3,16,4,[]],[[[15,[-1,-2]]],-2,17,[]],[[[16,[],[[31,[-1]]]]],32,[]],[[[16,[],[[31,[-1]]]]],32,[]],[[[13,[-1,-2]]],32,16,6],[[[3,[-1,-2]]],32,16,4],[[[14,[-1,-2,-3]]],32,16,4,6],[[[17,[],[[31,[-1]]]]],32,[]],[[[17,[],[[31,[-1]]]]],32,[]],[[[15,[-1,-2]]],32,17,6],[[[17,[],[[31,[-1]]]]],32,[]],[[[17,[],[[31,[-1]]]]],32,[]],[[[15,[-1,-2]]],32,17,6],[[[3,[-1,-2]]],32,16,4],[[[14,[-1,-2,-3]]],32,16,4,6],[[[5,[-1,-2]]],-2,16,6],[[[16,[],[[31,[-1]]]]],2,[]],[[[13,[-1,-2]]],[[5,[-1,-2]]],16,6],[[[3,[-1,-2]]],2,16,4],[[[14,[-1,-2,-3]]],[[7,[-1,-2,-3]]],16,4,6],[[[17,[],[[31,[-1]]]]],2,[]],[[[17,[],[[31,[-1]]]]],2,[]],[33,2],[21,2],[[[5,[-1,-2]],-4],[[19,[-1,-3]]],16,6,6,[[35,[-2],[[34,[-3]]]]]],[[[19,[-1,-2]],-4],[[19,[-1,-3]]],16,6,6,[[35,[-2],[[34,[-3]]]]]],[[[7,[-1,-2,-3]],-5],[[20,[-1,-2,-4]]],16,4,6,6,[[35,[-3],[[34,[-4]]]]]],[[[20,[-1,-2,-3]],-5],[[20,[-1,-2,-4]]],16,4,6,6,[[35,[-3],[[34,[-4]]]]]],[[[8,[-1,-2]],-4],[[22,[-1,-3]]],17,6,6,[[35,[-2],[[34,[-3]]]]]],[[[10,[-1,-2]],-4],[[23,[-1,-3]]],17,6,6,[[35,[-2],[[34,[-3]]]]]],[[[22,[-1,-2]],-4],[[22,[-1,-3]]],17,6,6,[[35,[-2],[[34,[-3]]]]]],[[[23,[-1,-2]],-4],[[23,[-1,-3]]],17,6,6,[[35,[-2],[[34,[-3]]]]]],[[[5,[-1,-2]]],[[13,[-1,-2]]],16,6],[-1,[[13,[-2,-1]]],[],16],[-1,[[14,[-2,-3,-1]]],[],16,4],[-1,[[15,[-2,-1]]],[],17],[4,36],[[[13,[-1,-2]]],-1,16,6],[[[14,[-1,-2,-3]]],-1,16,4,6],[[[15,[-1,-2]]],-1,17,6],[[[15,[-1,-2]]],[[8,[-1,-2]]],17,6],[[[15,[-1,-2]]],[[8,[-1,-2]]],33,6],[[[7,[-1,-2,-3]]],[[14,[-1,-2,-3]]],16,4,6],[[[8,[-1,-2]]],[[15,[-1,-2]]],17,6],[[[10,[-1,-2]]],[[15,[-1,-2]]],17,6],[[[11,[-1,-2]]],[[15,[-1,-2]]],21,6],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[[[16,[],[[31,[-1]]]]],32,[]],[[[13,[-1,-2]]],[[38,[[5,[-1,-2]]]]],16,6],[[[3,[-1,-2]]],32,16,4],[[[14,[-1,-2,-3]]],[[38,[[7,[-1,-2,-3]]]]],16,4,6],[[[17,[],[[31,[-1]]]]],32,[]],[[[41,[],[[39,[-1]],[40,[-2]]]],-1],32,[],[]],[[[41,[],[[39,[-1]],[40,[-2]]]],-2],32,[],[]],[[[42,[],[[39,[-1]],[40,[-2]]]],-1],32,[],[]],[[[13,[-1,-2]]],[[38,[[5,[-1,-2]]]]],42,6],[[[3,[-1,-2]]],32,42,4],[[[14,[-1,-2,-3]]],[[38,[[7,[-1,-2,-3]]]]],42,4,6],[[[17,[],[[31,[-1]]]]],32,[]],[[[41,[],[[39,[-1]],[40,[-2]]]],-1],32,[],[]],[33,32],[[43,-1],32,[]],[[43,-1],32,[]],[[[41,[],[[39,[-1]],[40,[-2]]]],-2],32,[],[]],[[[42,[],[[39,[-1]],[40,[-2]]]],-2],32,[],[]],[[[13,[-1,-2]]],[[38,[[5,[-1,-2]]]]],42,6],[[[3,[-1,-2]]],32,42,4],[[[14,[-1,-2,-3]]],[[38,[[7,[-1,-2,-3]]]]],42,4,6],[21,32],[[44,-1],32,[]],[[44,-1],32,[]],[[[5,[-1,-2]],-4],[[37,[[19,[-1,-3]],[5,[-1,-2]]]]],16,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[19,[-1,-2]],-4],[[37,[[19,[-1,-3]],[19,[-1,-2]]]]],16,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[7,[-1,-2,-3]],-5],[[37,[[20,[-1,-2,-4]],[7,[-1,-2,-3]]]]],16,4,6,6,[[35,[-3],[[34,[[38,[-4]]]]]]]],[[[20,[-1,-2,-3]],-5],[[37,[[20,[-1,-2,-4]],[20,[-1,-2,-3]]]]],16,4,6,6,[[35,[-3],[[34,[[38,[-4]]]]]]]],[[[8,[-1,-2]],-4],[[37,[[22,[-1,-3]],[8,[-1,-2]]]]],17,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[10,[-1,-2]],-4],[[37,[[23,[-1,-3]],[10,[-1,-2]]]]],17,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[22,[-1,-2]],-4],[[37,[[22,[-1,-3]],[22,[-1,-2]]]]],17,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[23,[-1,-2]],-4],[[37,[[23,[-1,-3]],[23,[-1,-2]]]]],17,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],17,6],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],41,6],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],33,6],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],43,6],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],43,6],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],41,6],[[[15,[-1,-2]]],[[38,[[11,[-1,-2]]]]],21,6],[[[15,[-1,-2]]],[[38,[[11,[-1,-2]]]]],44,6],[[[15,[-1,-2]]],[[38,[[11,[-1,-2]]]]],44,6],[21,32],[[[11,[-1,-2]]],[[37,[[10,[-1,-2]],[11,[-1,-2]]]]],21,6],[[44,-1],32,[]],[[[11,[-1,-2]]],[[37,[[10,[-1,-2]],[11,[-1,-2]]]]],44,6],[[44,-1],32,[]],[[[11,[-1,-2]]],[[37,[[10,[-1,-2]],[11,[-1,-2]]]]],44,6],[[[11,[-1,-2]],-4],[[38,[-3]]],25,6,[],[[35,[-2],[[34,[-3]]]]]],[[[11,[-1,-2]],-4],[[38,[-3]]],[44,25],6,[],[[35,[-2],[[34,[-3]]]]]],[[[11,[-1,-2]],-4],[[38,[-3]]],[44,25],6,[],[[35,[-2],[[34,[-3]]]]]],[[[15,[-1,-2]]],[[38,[[10,[-1,-2]]]]],17,6],[[[15,[-1,-2]]],[[38,[[10,[-1,-2]]]]],41,6],[[[15,[-1,-2]]],[[38,[[10,[-1,-2]]]]],41,6],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[[[16,[],[[31,[-1]]]]],2,[]],[[[3,[-1,-2]]],2,16,4],[[[17,[],[[31,[-1]]]]],2,[]],[9,2],[1,2],[[[3,[-1,-2]]],2,1,4],[[[5,[-1,-2]]],2,1,6],[[[19,[-1,-2]]],2,1,6],[[[7,[-1,-2,-3]]],2,1,4,6],[[[20,[-1,-2,-3]]],2,1,4,6],[[[8,[-1,-2]]],2,9,6],[[[10,[-1,-2]]],2,9,6],[[[11,[-1,-2]]],2,12,6],[[[22,[-1,-2]]],2,9,6],[[[23,[-1,-2]]],2,9,6],[[[17,[],[[31,[-1]]]]],2,[]],[9,2],[21,2],[12,2],[[[5,[-1,-2]],-4],-3,16,6,[],[[35,[],[[34,[-3]]]]]],[[[7,[-1,-2,-3]],-5],-4,16,4,6,[],[[35,[],[[34,[-4]]]]]],[[[8,[-1,-2]],-4],-3,17,6,[],[[35,[],[[34,[-3]]]]]],[[[10,[-1,-2]],-4],-3,17,6,[],[[35,[],[[34,[-3]]]]]],[[[11,[-1,-2]],-4],-3,21,6,[],[[35,[],[[34,[-3]]]]]],[[[5,[-1,-2]],-4],-3,1,6,[],[[35,[],[[34,[-3]]]]]],[[[7,[-1,-2,-3]],-5],-4,1,4,6,[],[[35,[],[[34,[-4]]]]]],[[[8,[-1,-2]],-4],-3,9,6,[],[[35,[],[[34,[-3]]]]]],[[[10,[-1,-2]],-4],-3,9,6,[],[[35,[],[[34,[-3]]]]]],[[[11,[-1,-2]],-4],-3,12,6,[],[[35,[],[[34,[-3]]]]]],[[[15,[-1,-2]]],[[11,[-1,-2]]],21,6],[21,2],[[[11,[-1,-2]]],[[10,[-1,-2]]],21,6],[[[11,[-1,-2]],-4],-3,25,6,[],[[35,[-2],[[34,[-3]]]]]],[[[15,[-1,-2]]],[[10,[-1,-2]]],17,6]],"c":[],"p":[[10,"RawMutexFair",0],[1,"tuple"],[5,"RawReentrantMutex",0],[10,"GetThreadId",0],[5,"MutexGuard",0],[10,"Sized",367],[5,"ReentrantMutexGuard",0],[5,"RwLockReadGuard",0],[10,"RawRwLockFair",0],[5,"RwLockWriteGuard",0],[5,"RwLockUpgradableReadGuard",0],[10,"RawRwLockUpgradeFair",0],[5,"Mutex",0],[5,"ReentrantMutex",0],[5,"RwLock",0],[10,"RawMutex",0],[10,"RawRwLock",0],[10,"Default",368],[5,"MappedMutexGuard",0],[5,"MappedReentrantMutexGuard",0],[10,"RawRwLockUpgrade",0],[5,"MappedRwLockReadGuard",0],[5,"MappedRwLockWriteGuard",0],[10,"RawRwLockDowngrade",0],[10,"RawRwLockUpgradeDowngrade",0],[5,"Formatter",369],[8,"Result",369],[10,"Debug",369],[10,"Display",369],[1,"never"],[17,"GuardMarker"],[1,"bool"],[10,"RawRwLockRecursive",0],[17,"Output"],[10,"FnOnce",370],[5,"NonZeroUsize",371],[6,"Result",372],[6,"Option",373],[17,"Duration"],[17,"Instant"],[10,"RawRwLockTimed",0],[10,"RawMutexTimed",0],[10,"RawRwLockRecursiveTimed",0],[10,"RawRwLockUpgradeTimed",0],[5,"TypeId",374],[5,"GuardSend",0],[5,"GuardNoSend",0]],"b":[[123,"impl-Debug-for-MutexGuard%3C\'a,+R,+T%3E"],[124,"impl-Display-for-MutexGuard%3C\'a,+R,+T%3E"],[125,"impl-Debug-for-MappedMutexGuard%3C\'a,+R,+T%3E"],[126,"impl-Display-for-MappedMutexGuard%3C\'a,+R,+T%3E"],[127,"impl-Display-for-ReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[128,"impl-Debug-for-ReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[129,"impl-Display-for-MappedReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[130,"impl-Debug-for-MappedReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[131,"impl-Debug-for-RwLockReadGuard%3C\'a,+R,+T%3E"],[132,"impl-Display-for-RwLockReadGuard%3C\'a,+R,+T%3E"],[133,"impl-Debug-for-RwLockWriteGuard%3C\'a,+R,+T%3E"],[134,"impl-Display-for-RwLockWriteGuard%3C\'a,+R,+T%3E"],[135,"impl-Debug-for-RwLockUpgradableReadGuard%3C\'a,+R,+T%3E"],[136,"impl-Display-for-RwLockUpgradableReadGuard%3C\'a,+R,+T%3E"],[137,"impl-Display-for-MappedRwLockReadGuard%3C\'a,+R,+T%3E"],[138,"impl-Debug-for-MappedRwLockReadGuard%3C\'a,+R,+T%3E"],[139,"impl-Display-for-MappedRwLockWriteGuard%3C\'a,+R,+T%3E"],[140,"impl-Debug-for-MappedRwLockWriteGuard%3C\'a,+R,+T%3E"]]}],\
["log",{"doc":"A lightweight logging facade.","t":"PPPPPPGGKFFPFFFSFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNMNNNNNNNQNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNMQQHNNHNNNNNNNNNNNNNNHHHHNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNQ","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"],[170,"core::fmt"],[171,"core::cmp"],[172,"core::option"],[173,"core::fmt"],[174,"core::hash"],[175,"core::iter::traits::iterator"],[176,"core::any"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,10,4,4,6,6,8,7,12,0,1,3,1,3,10,4,4,6,6,1,3,8,7,17,17,12,12,4,6,1,3,8,7,17,12,4,6,4,6,8,7,0,4,6,1,3,8,7,17,12,4,6,1,3,8,7,1,3,10,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[[],3],[[],7],[[10,8],11],[[4,4],11],[[4,6],11],[[6,6],11],[[6,4],11],[[8,8],11],[[7,7],11],[[12,12],11],0,[1,[[13,[5]]]],[[3,[13,[5]]],3],[1,[[13,[5]]]],[[3,[13,[5]]],3],[10,14],[[4,15],16],[[4,15],16],[[6,15],16],[[6,15],16],[[1,15],16],[[3,15],16],[[8,15],16],[[7,15],16],[[17,15],16],[[17,15],16],[[12,15],16],[[12,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,[[18,[4,-1]]],[]],[5,[[18,[6,-1]]],[]],[[4,-1],14,19],[[6,-1],14,19],[[8,-1],14,19],[[7,-1],14,19],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[0,[[21,[],[[20,[4]]]]]]]],[[],[[0,[[21,[],[[20,[6]]]]]]]],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[13,[22]]]],[[3,[13,[22]]],3],[[10,1],14],0,0,[[],10],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[13,[5]]]],[[3,[13,[5]]],3],[1,[[13,[5]]]],[[3,[13,[5]]],3],[[],3],[[],7],[[4,4],[[13,[9]]]],[[4,6],[[13,[9]]]],[[6,4],[[13,[9]]]],[[6,6],[[13,[9]]]],[[8,8],[[13,[9]]]],[[7,7],[[13,[9]]]],[10,[[18,[14,17]]]],[10,[[18,[14,17]]]],[6,14],[6,14],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[13,[4]]]],[4,6],0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0],"c":[],"p":[[5,"Record",0],[5,"Arguments",170],[5,"RecordBuilder",0],[6,"Level",0],[1,"str"],[6,"LevelFilter",0],[5,"MetadataBuilder",0],[5,"Metadata",0],[6,"Ordering",171],[10,"Log",0],[1,"bool"],[5,"ParseLevelError",0],[6,"Option",172],[1,"tuple"],[5,"Formatter",170],[8,"Result",170],[5,"SetLoggerError",0],[6,"Result",173],[10,"Hasher",174],[17,"Item"],[10,"Iterator",175],[1,"u32"],[5,"TypeId",176]],"b":[[57,"impl-PartialEq-for-Level"],[58,"impl-PartialEq%3CLevelFilter%3E-for-Level"],[59,"impl-PartialEq-for-LevelFilter"],[60,"impl-PartialEq%3CLevel%3E-for-LevelFilter"],[70,"impl-Display-for-Level"],[71,"impl-Debug-for-Level"],[72,"impl-Debug-for-LevelFilter"],[73,"impl-Display-for-LevelFilter"],[78,"impl-Display-for-SetLoggerError"],[79,"impl-Debug-for-SetLoggerError"],[80,"impl-Display-for-ParseLevelError"],[81,"impl-Debug-for-ParseLevelError"],[128,"impl-PartialOrd-for-Level"],[129,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[130,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[131,"impl-PartialOrd-for-LevelFilter"]]}],\
["memoffset",{"doc":"A crate used for calculating offsets of struct members and …","t":"QQQQQQQ","n":["offset_of","offset_of_tuple","offset_of_union","raw_field","raw_field_tuple","raw_field_union","span_of"],"q":[[0,"memoffset"]],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Calculates the offset of the specified union member from …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0],"c":[],"p":[],"b":[]}],\
["multiboot2",{"doc":"Library that assists parsing the Multiboot2 Information …","t":"TTTPPPPPTTPFFFPFPPTTPFPPPPPFFFFFFFFTPPPPPPFFFGPFPFPPFFFGTPPPFPTTTPPSTTGFGFRPPFFTTTPPPTTTPPKYPPTTTTTPTTPPPPPFFTTPFPPTFKGFPPTPPPFFFFFGFFFTPTTPNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONCONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHONNNNONOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOONNNNNOONNNNNNNNNNNNNNNNONNOOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOOOOOONOOOOFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ACPI_NON_VOLATILE","ACPI_RECLAIM","ALLOCATED","AcpiAvailable","AcpiV1","AcpiV2","Apm","Available","BOOT_SERVICES_CODE","BOOT_SERVICES_DATA","BasicMeminfo","BasicMemoryInfoTag","BootInformation","BootInformationHeader","BootLoaderName","BootLoaderNameTag","Bootdev","CGAGraphics","COLOR","CONVENTIONAL","Cmdline","CommandLineTag","Custom","Defective","DirectColor","DynamicLinkingTable","DynamicLoaderSymbolTable","EFIBootServicesNotExitedTag","EFIImageHandle32Tag","EFIImageHandle64Tag","EFIMemoryAreaType","EFIMemoryDesc","EFIMemoryMapTag","EFISdt32Tag","EFISdt64Tag","EXECUTABLE","Efi32","Efi32Ih","Efi64","Efi64Ih","EfiBs","EfiMmap","ElfSection","ElfSectionFlags","ElfSectionIter","ElfSectionType","ElfSections","ElfSectionsTag","End","EndTag","EnvironmentSpecific","Framebuffer","FramebufferColor","FramebufferField","FramebufferTag","FramebufferType","GRAPHICS","HerculesGraphics","IllegalAddress","IllegalTotalSize","ImageLoadPhysAddrTag","Indexed","LINEAR_FRAMEBUFFER","LOADER_CODE","LOADER_DATA","LinkerSymbolTable","LoadBaseAddr","MAGIC","MMIO","MMIO_PORT_SPACE","MbiLoadError","MemoryArea","MemoryAreaType","MemoryMapTag","Metadata","Mmap","Module","ModuleIter","ModuleTag","NOT_VGA_COMPATIBLE","NOT_VGA_COMPATIBLE","NO_VGA_WINDOW","Network","NoEndTag","Note","PAL_CODE","PERSISTENT_MEMORY","PROGRAMMABLE","PackedPixel","Planar","Pointee","Pointee","ProcessorSpecific","ProgramSection","RAMDAC_FIX","READABLE","RELOCATABLE","RESERVED","RESERVED_USABLE","RGB","RUNTIME_SERVICES_CODE","RUNTIME_SERVICES_DATA","RelRelocation","RelaRelocation","Reserved","Reserved","ReservedHibernate","RsdpV1Tag","RsdpV2Tag","SUPPORTED","SWITCHABLE_DAC","Smbios","SmbiosTag","StringTable","SymbolHashTable","TTY_SUPPORTED","Tag","TagTrait","TagType","TagTypeId","Text","Text","UNUSABLE","Unchained","Uninitialized","Unused","VBECapabilities","VBEControlInfo","VBEDirectColorAttributes","VBEField","VBEInfoTag","VBEMemoryModel","VBEModeAttributes","VBEModeInfo","VBEWindowAttributes","VERSION","Vbe","WRITABLE","WRITEABLE","YUV","addralign","address","all","all","all","all","all","as_ptr","att","bank_size","basic_memory_info_tag","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blue","blue_field","boot_loader_name_tag","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpp","bpp","buffer_type","builder","capabilities","cast_tag","character_size","checksum_is_valid","checksum_is_valid","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmdline","cmdline","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","command_line_tag","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","control_info","custom","default","default","default","default","default","default","default","default","default","difference","difference","difference","difference","difference","direct_color_attributes","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","dst_size","efi_32_ih_tag","efi_64_ih_tag","efi_bs_not_exited_tag","efi_memory_map_tag","efi_sdt_32_tag","efi_sdt_64_tag","elf_sections","empty","empty","empty","empty","empty","end_address","end_address","end_address","end_address","entry_size","entry_version","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ext_checksum","extend","extend","extend","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","framebuffer_base_ptr","framebuffer_tag","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base_tag","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","get_dst_str_slice","get_tag","green","green_field","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","image_handle","image_handle","insert","insert","insert","insert","insert","interface_length","interface_offset","interface_segment","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_allocated","is_empty","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","load","load","load_base_addr","load_base_addr_tag","load_with_offset","major","memory_areas","memory_areas","memory_lower","memory_map_tag","memory_model","memory_upper","minor","mode","mode_attributes","mode_info","mode_list_ptr","module_size","module_tags","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","next","not","not","not","not","not","number_of_banks","number_of_image_pages","number_of_planes","oem_id","oem_id","oem_product_name_ptr","oem_product_revision_ptr","oem_software_revision","oem_string_ptr","oem_vendor_name_ptr","offscreen_memory_offset","offscreen_memory_size","page_count","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","phys_start","pitch","pitch","position","position","red","red_field","remove","remove","remove","remove","remove","reserved_field","resolution","revision","revision","rsdp_v1_tag","rsdp_v2_tag","rsdt_address","sdt_address","sdt_address","section_type","section_type_raw","set","set","set","set","set","signature","signature","signature","size","size","size","size","size","size","smbios_tag","start_address","start_address","start_address","start_address","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","tables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","toggle","toggle","toggle","total_memory","total_size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","typ","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","val","vbe_info_tag","version","virt_start","width","window_a_attributes","window_a_segment","window_b_attributes","window_b_segment","window_function_ptr","window_granularity","window_size","xsdt_address","blue","green","palette","red","BoxedDst","InformationBuilder","add_module_tag","add_smbios_tag","basic_memory_info_tag","bootloader_name_tag","borrow","borrow","borrow_mut","borrow_mut","build","command_line_tag","deref","drop","dst_size","dst_size","efi_boot_services_not_exited_tag","efi_image_handle32","efi_image_handle64","efi_memory_map_tag","efisdt32_tag","efisdt64_tag","elf_sections_tag","eq","eq","expected_len","fmt","fmt","framebuffer_tag","from","from","image_load_addr","into","into","memory_map_tag","new","rsdp_v1_tag","rsdp_v2_tag","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"multiboot2"],[1150,"multiboot2::FramebufferType"],[1154,"multiboot2::builder"],[1198,"core::option"],[1199,"core::result"],[1200,"core::marker"],[1201,"core::str::error"],[1202,"core::cmp"],[1203,"core::iter::traits::collect"],[1204,"core::fmt"],[1205,"core::fmt"],[1206,"core::hash"],[1207,"bitflags::iter"],[1208,"bitflags::iter"],[1209,"core::any"],[1210,"core::cmp"]],"d":["Firmware-reserved addresses.","Memory that holds ACPI tables. Can be reclaimed after they …","The section occupies memory during the process execution.","Usable memory holding ACPI information.","Tag <code>14</code>: Also called “AcpiOld” in other multiboot2 …","Tag <code>15</code>: Refers to version 2 and later of Acpi. Also called …","Tag <code>10</code>: APM table. See Advanced Power Management (APM) …","Available memory free to be used by the OS.","Code of the boot drivers.","Memory used to store boot drivers’ data.","Tag <code>4</code>: ‘mem_lower’ and ‘mem_upper’ indicate the …","Basic memory info tag.","A Multiboot 2 Boot Information (MBI) accessor.","The basic header of a boot information.","Tag <code>2</code>: Name of the bootloader, e.g. ‘GRUB …","The bootloader name tag.","Tag <code>5</code>: This tag indicates which BIOS disk device the boot …","","Color support.","Free usable memory.","Tag <code>1</code>: Additional command line string. For example <code>&#39;&#39;</code> or …","This tag contains the command line string.","Custom tag types <code>&gt; 21</code>. The Multiboot2 spec doesn’t …","Memory which is occupied by defective RAM modules.","","The section holds dynamic linking tables.","This section holds a dynamic loader symbol table.","EFI ExitBootServices was not called tag.","Tag that contains the pointer to the boot loader’s UEFI …","Tag that contains the pointer to the boot loader’s UEFI …","The type of a memory range.","A structure describing a region of memory.","EFI memory map tag. The <code>EFIMemoryDesc</code> follows the EFI …","EFI system table in 32 bit mode tag.","EFI system table in 64 bit mode tag.","The section contains executable machine instructions.","Tag <code>11</code>: This tag contains pointer to i386 EFI system table.","Tag <code>19</code>: This tag contains pointer to EFI i386 image …","Tag <code>21</code>: This tag contains pointer to amd64 EFI system …","Tag <code>20</code>: This tag contains pointer to EFI amd64 image …","Tag <code>18</code>: This tag indicates ExitBootServices wasn’t …","Tag <code>17</code>: This tag contains EFI memory map as per EFI …","A single generic ELF Section.","ELF Section bitflags.","An iterator over some ELF sections.","An enum abstraction over raw ELF section types.","Tag <code>9</code>: This tag contains section header table from an ELF …","This tag contains the section header table from an ELF …","Tag <code>0</code>: Marks the end of the tags.","The end tag ends the information struct.","Values in this inclusive range (<code>[0x6000_0000, 0x6FFF_FFFF)</code>…","Tag <code>8</code>: Framebuffer.","A framebuffer color descriptor in the palette.","An RGB color type field.","The VBE Framebuffer information tag.","The type of framebuffer.","Mode type (text or graphics).","","The address is invalid. Make sure that the address is …","The total size of the multiboot2 information structure …","The physical load address tag. Typically, this is only …","Indexed color.","Linear framebuffer availability.","The code portions of a loaded UEFI application.","The data portions of a loaded UEFI applications, as well …","This section holds a linker symbol table.","Tag <code>21</code>: This tag contains image load base physical …","Magic number that a multiboot2-compliant boot loader will …","A region used for memory-mapped I/O.","Address space used for memory-mapped port I/O.","Error type that describes errors while loading/parsing a …","A memory area entry descriptor.","An enum of possible reported region types. Inside the …","This tag provides an initial host memory map (legacy boot, …","The type for metadata in pointers and references to <code>Self</code>.","Tag <code>6</code>: Memory map. The map provided is guaranteed to list …","Tag <code>3</code>: Additional Multiboot modules, which are BLOBs …","An iterator over all module tags.","The module tag can occur multiple times and specifies …","Is the controller VGA compatible.","VGA compatibility.","VGA Window compatibility.","Tag <code>16</code>: This tag contains network information in the …","End tag missing. Each multiboot2 header requires to have …","This section holds information that marks the file in some …","Address space which is part of the processor.","Memory region which is usable and is also non-volatile.","Color ramp is fixed when cleared and programmable when set.","","","Provides the pointer metadata type of any pointed-to type.","Generates an implementation of <code>Pointee</code> for structs with a …","Values in this inclusive range (<code>[0x7000_0000, 0x7FFF_FFFF)</code>…","The section holds information defined by the program, …","The operating behaviour of the RAMDAC.","Window is readable?","Relocatable window(s) supported?","This enum variant is not used.","Bits in Rsvd field when cleared are reserved and usable …","Direct RGB color.","Runtime drivers’ code.","Runtime services’ code.","The section holds relocation entries without explicit …","The section holds relocation entries with explicit …","This section type is reserved but has unspecified …","A reserved area that must not be used.","Reserved memory which needs to be preserved on hibernation.","This tag contains a copy of RSDP as defined per ACPI 1.0 …","This tag contains a copy of RSDP as defined per ACPI 2.0 …","Mode supported by hardware configuration.","Can the DAC be switched between 6 and 8 bit modes.","Tag <code>13</code>: This tag contains a copy of SMBIOS tables as well …","This tag contains a copy of SMBIOS tables as well as their …","The section holds a string table.","The section holds a symbol hash table.","TTY Output functions supported by BIOS","Common base structure for all tags that can be passed via …","A trait to abstract over all sized and unsized tags …","Higher level abstraction for <code>TagTypeId</code> that assigns each …","Serialized form of <code>TagType</code> that matches the binary …","EGA Text.","","Memory in which errors have been detected.","","A section of this type occupies no space in the file but …","This value marks the section header as inactive; it does …","The Capabilities field indicates the support of specific …","VBE controller information.","The DirectColorModeInfo field describes important …","A VBE colour field.","This tag contains VBE metadata, VBE controller information …","The MemoryModel field specifies the general type of memory …","A Mode attributes bitfield.","Extended information about a specific VBE display mode …","The WindowAttributes describe the characteristics of the …","Memory descriptor version number.","Tag <code>7</code>: Contains the VBE control information returned by …","The section contains data that should be writable during …","Window is writeable?","","Get the section’s address alignment constraints.","Contains framebuffer physical address.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get the start address of the boot info as pointer.","The capability attributes of this memory range.","Bank size (Measured in Kilobytes.)","Search for the basic memory info tag.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The Blue component of the color.","Blue colour field.","Search for the BootLoader name tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains number of bits per pixel.","Bits per pixel","The type of framebuffer, one of: <code>Indexed</code>, <code>RGB</code> or <code>Text</code>.","Module for the builder-feature.","Capabilities of the graphics controller.","Casts the base tag to the specific tag type.","Character cell width and height in pixels.","Validation of the RSDPv1 checksum","Validation of the RSDPv2 extended checksum","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reads the command line of the kernel as Rust string slice …","Reads the command line of the boot module as Rust string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Search for the Command line tag.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Contains VBE controller information returned by the VBE …","Construct a custom <code>MemoryType</code>. Values in the range …","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Direct colour mode attributes.","Returns the amount of items in the dynamically sized …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Search for the EFI 32-bit image handle pointer tag.","Search for the EFI 64-bit image handle pointer tag.","Search for the EFI boot services not exited tag.","Search for the EFI Memory map tag, if the boot services …","Search for the EFI 32-bit SDT tag.","Search for the EFI 64-bit SDT tag.","Returns an <code>ElfSectionIter</code> iterator over the ELF Sections, …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get the end address of the boot info.","Get the physical end address of the section.","The end address of the memory region.","End address of the module","Returns the entry size.","Returns the entry version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This field is used to calculate the checksum of the entire …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get the section’s flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Physical address for flat memory frame buffer","Search for the VBE framebuffer tag. The result is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a reference to a (dynamically sized) tag type in a …","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Some multiboot2 tags are a DST as they end with a …","Public getter to find any Multiboot tag by its type, …","The Green component of the color.","Green colour field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains framebuffer height in pixels.","Returns the physical address of the EFI image handle.","Returns the physical address of the EFI image handle.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Contain the segment length of the table of a protected …","Contain the segment offset of the table of a protected …","Contain the segment of the table of a protected mode …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Check if the <code>ALLOCATED</code> flag is set in the section flags.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Safety","Loads the <code>BootInformation</code> from a pointer. The pointer must …","Returns the load base address.","Search for the Image Load Base Physical Address tag.","Safety","","Return the slice with all memory areas.","Return an iterator over ALL marked memory areas.","","Search for the Memory map tag.","Memory model type","","","Indicates current video mode in the format specified in …","Mode attributes.","Contains VBE mode information returned by the VBE Function …","Far pointer to the video mode list.","The size of the module/the BLOB in memory.","Get an iterator of all module tags.","Reads the name of the bootloader that is booting the …","Read the name of the section.","","Create a new command line tag from the given string.","Create a new tag to pass the EFI32 System Table pointer.","Create a new tag to pass the EFI64 System Table pointer.","","","Create a new ElfSectionsTag with the given data.","","","","Create a new MemoryArea.","","Create a new EFI memory map tag with the given memory …","","","","","","Constructor.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Number of banks","Number of images.","Number of memory planes.","An OEM-supplied string that identifies the OEM.","An OEM-supplied string that identifies the OEM.","Far pointer to the product name string.","Far pointer to the product revision string.","VBE implementation software revision.","A far pointer the the OEM String.","Far pointer to the vendor name string.","A pointer to the start of off screen memory.","The amount of off screen memory in 1k units.","Number of 4 KiB pages contained in this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Starting physical address.","Contains the pitch in bytes.","Bytes per scan line","Color field position.","define the bit position within the direct color pixel or …","The Red component of the color.","Red colour field.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Reserved colour field.","Horizontal and vertical resolution in pixels or characters.","The revision of the ACPI.","The revision of the ACPI.","Search for the (ACPI 1.0) RSDP tag.","Search for the (ACPI 2.0 or later) RSDP tag.","The physical (I repeat: physical) address of the RSDT …","The physical address of a i386 EFI system table.","The physical address of a x86_64 EFI system table.","Get the section type as a <code>ElfSectionType</code> enum variant.","Get the “raw” section type as a <code>u32</code>","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The “RSD PTR “ marker signature.","The “RSD PTR “ marker signature.","VBE Signature aka “VESA”.","Get the section’s size in bytes.","The size, in bytes, of the memory region.","Color mask size.","","","The size, in bits, of the color components of a direct …","Search for the SMBIOS tag.","Get the start address of the boot info.","Get the physical start address of the section.","The start address of the memory region.","Start address of the module.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Number of 64KiB memory blocks (Added for VBE 2.0+).","Get the total size of the boot info struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of memory occupying this range.","The type of the memory region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Convenient wrapper to get the underlying <code>u32</code> …","Search for the VBE information tag.","The VBE version.","Starting virtual address.","Contains framebuffer width in pixels.","Window A attributes.","Window A start segment.","Window B attributes.","Window B start segment.","Real mode pointer to window function.","Window granularity (Measured in Kilobytes.)","Window size.","Physical address of the XSDT table.","","","","","A helper type to create boxed DST, i.e., tags with a …","Builder to construct a valid Multiboot2 information …","","","","","","","","","Constructs the bytes for a valid Multiboot2 information …","","","","","","","","","","","","","","","Returns the expected length of the boot information, when …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[32,32,4,37,41,41,41,37,32,32,41,0,0,0,41,0,41,46,6,32,41,0,41,37,46,30,30,0,0,0,0,0,0,0,0,4,41,41,41,41,41,41,0,0,0,0,41,0,41,0,30,41,0,0,0,0,6,46,47,47,0,17,6,32,32,30,41,0,32,32,0,0,0,0,77,41,41,0,0,5,6,6,41,47,30,32,32,8,46,46,0,0,30,30,5,7,7,32,8,17,32,32,30,30,30,37,37,0,0,6,5,41,0,30,30,6,0,0,0,0,17,46,32,46,30,30,0,0,0,0,0,0,0,0,0,31,41,4,7,46,1,3,4,5,6,7,8,9,31,44,9,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,4,4,5,5,6,6,7,7,8,8,4,5,6,7,8,4,5,6,7,8,34,44,9,9,16,49,25,26,27,28,59,29,1,30,4,31,3,32,17,33,34,35,58,36,37,11,54,38,52,39,22,24,55,40,41,19,56,42,43,44,45,5,6,7,8,46,47,48,9,16,49,25,26,27,28,59,29,1,30,4,31,3,32,17,33,34,35,58,36,37,11,54,38,52,39,22,24,55,40,41,19,56,42,43,44,45,5,6,7,8,46,47,48,3,44,3,0,43,19,44,22,24,25,26,27,28,29,1,30,4,31,32,17,33,34,35,36,37,11,38,39,22,24,40,41,19,42,43,44,45,5,6,7,8,46,47,48,25,26,27,28,29,1,30,4,31,32,17,33,34,35,36,37,11,38,39,22,24,40,41,19,42,43,44,45,5,6,7,8,46,47,48,49,52,16,49,25,26,27,28,1,30,4,31,32,17,33,34,35,36,37,11,54,38,52,22,24,55,40,41,42,43,44,45,5,6,7,8,46,47,48,9,4,5,6,7,8,4,5,6,7,8,42,32,29,4,31,38,56,5,6,7,8,4,5,6,7,8,44,20,9,16,49,25,26,27,28,59,29,1,30,4,31,3,32,17,33,34,35,58,36,37,11,54,38,52,39,22,24,55,40,41,19,56,42,43,44,45,5,6,7,8,46,47,48,9,9,9,9,9,9,9,4,5,6,7,8,9,1,36,52,58,58,16,49,25,26,27,28,59,1,30,4,31,3,32,17,33,34,35,58,36,37,11,54,38,52,22,24,55,40,40,40,41,41,41,42,43,44,45,5,6,7,8,46,47,48,24,4,5,6,7,8,1,9,16,49,25,26,27,28,59,29,1,30,4,4,4,4,4,31,3,32,17,33,34,35,58,36,37,11,54,38,52,39,22,24,55,40,41,19,56,42,43,44,45,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,8,8,8,8,8,46,47,47,48,44,9,9,25,26,27,28,29,1,30,4,31,32,17,33,34,35,36,37,11,38,39,22,24,40,40,40,41,41,41,19,56,42,43,44,45,5,6,7,8,46,47,48,20,4,5,6,7,8,4,4,5,5,6,6,7,7,8,8,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,19,9,34,44,16,49,25,26,27,28,1,30,31,32,17,33,34,35,36,37,11,54,38,52,22,24,55,40,41,42,43,44,45,5,6,7,8,46,47,48,3,27,28,4,5,6,7,8,42,42,42,4,5,6,7,8,4,5,6,7,8,9,25,26,27,28,29,1,30,4,31,32,17,33,34,35,36,37,11,38,39,22,24,40,41,19,56,42,43,44,45,5,6,7,8,46,47,48,29,4,39,5,6,7,8,4,5,6,7,8,1,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,0,9,35,9,0,55,58,54,11,9,44,11,55,42,44,42,43,52,9,16,1,16,49,25,26,27,28,59,3,35,58,36,11,54,38,52,22,24,55,40,29,39,4,5,6,7,8,44,44,44,22,24,43,43,43,43,43,44,44,31,16,49,25,26,27,28,1,30,4,31,32,17,33,34,35,36,37,11,54,38,52,22,24,55,40,41,42,43,44,45,5,6,7,8,46,47,48,31,3,44,33,45,34,44,4,5,6,7,8,44,44,22,24,9,9,22,25,26,1,1,4,5,6,7,8,22,24,43,1,36,33,19,56,45,9,9,1,36,52,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,55,25,26,27,28,29,1,30,4,31,32,17,33,34,35,36,37,11,38,39,22,24,40,41,19,42,43,44,45,5,6,7,8,46,47,48,47,4,5,6,7,8,43,9,9,25,26,27,28,29,1,30,4,31,32,17,33,34,35,36,37,11,38,39,22,24,40,41,19,56,42,43,44,45,5,6,7,8,46,47,48,9,25,26,27,28,29,1,30,4,31,32,17,33,34,35,36,37,11,38,39,22,24,40,41,19,56,42,43,44,45,5,6,7,8,46,47,48,31,36,19,56,9,16,49,25,26,27,28,59,29,1,30,4,31,3,32,17,33,34,35,58,36,37,11,54,38,52,39,22,24,55,40,41,19,56,42,43,44,45,5,6,7,8,46,47,48,4,5,6,7,8,41,9,43,31,3,44,44,44,44,44,44,44,24,78,78,79,78,0,0,74,74,74,74,74,70,74,70,74,74,70,70,74,70,74,74,74,74,74,74,74,74,70,74,74,70,74,74,70,74,74,70,74,74,74,74,74,70,74,70,74,70],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],[[],4],[[],5],[[],6],[[],7],[[],8],[9,10],0,0,[9,[[12,[11]]]],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[8,8],10],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[8,8],10],[4,2],[4,2],[5,13],[5,13],[6,14],[6,14],[7,15],[7,15],[8,15],[8,15],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[8,8],10],0,0,[9,[[12,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,15],0,[3,[[18,[17,0]]]],0,0,[19,-1,[20,21]],0,[22,23],[24,23],[25,25],[26,26],[27,27],[28,28],[29,29],[1,1],[30,30],[4,4],[31,31],[32,32],[17,17],[33,33],[34,34],[35,35],[36,36],[37,37],[11,11],[38,38],[39,39],[22,22],[24,24],[40,40],[41,41],[19,19],[42,42],[43,43],[44,44],[45,45],[5,5],[6,6],[7,7],[8,8],[46,46],[47,47],[48,48],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[49,[[18,[50,51]]]],[52,[[18,[50,51]]]],[[16,16],53],[[49,49],53],[[25,25],53],[[26,26],53],[[27,27],53],[[28,28],53],[[1,1],53],[[30,30],53],[[4,4],53],[[31,31],53],[[32,32],53],[[17,17],53],[[33,33],53],[[34,34],53],[[35,35],53],[[36,36],53],[[37,37],53],[[11,11],53],[[54,54],53],[[38,38],53],[[52,52],53],[[22,22],53],[[24,24],53],[[55,55],53],[[40,40],53],[[41,41],53],[[42,42],53],[[43,43],53],[[44,44],53],[[45,45],53],[[5,5],53],[[6,6],53],[[7,7],53],[[8,8],53],[[46,46],53],[[47,47],53],[[48,48],53],[9,[[12,[49]]]],[4,4],[5,5],[6,6],[7,7],[8,8],[[4,4],23],[[5,5],23],[[6,6],23],[[7,7],23],[[8,8],23],0,[13,32],[[],29],[[],4],[[],31],[[],38],[[],56],[[],5],[[],6],[[],7],[[],8],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],0,[19,-1,[]],[19],[19,57],[19,57],[19],[19],[19],[19],[19,57],[19],[19],[19],[19],[19],[19,57],[19],[19],[19],[19],[19],[19,57],[19],[19],[19],[19,57],[19],[19,57],[19],[19],[19],[19,57],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[9,[[12,[27]]]],[9,[[12,[28]]]],[9,[[12,[38]]]],[9,[[12,[54]]]],[9,[[12,[25]]]],[9,[[12,[26]]]],[9,[[12,[29]]]],[[],4],[[],5],[[],6],[[],7],[[],8],[9,57],[1,2],[36,2],[52,13],[58,13],[58,13],[[16,16],23],[[49,49],23],[[25,25],23],[[26,26],23],[[27,27],23],[[28,28],23],[[59,59],23],[[1,1],23],[[30,30],23],[[4,4],23],[[31,31],23],[[3,3],23],[[32,32],23],[[17,17],23],[[33,33],23],[[34,34],23],[[35,35],23],[[58,58],23],[[36,36],23],[[37,37],23],[[11,11],23],[[54,54],23],[[38,38],23],[[52,52],23],[[22,22],23],[[24,24],23],[[55,55],23],[[40,40],23],[[40,41],23],[[40,13],23],[[41,40],23],[[41,13],23],[[41,41],23],[[42,42],23],[[43,43],23],[[44,44],23],[[45,45],23],[[5,5],23],[[6,6],23],[[7,7],23],[[8,8],23],[[46,46],23],[[47,47],23],[[48,48],23],[24,15],[[4,-1],10,[[61,[],[[60,[4]]]]]],[[5,-1],10,[[61,[],[[60,[5]]]]]],[[6,-1],10,[[61,[],[[60,[6]]]]]],[[7,-1],10,[[61,[],[[60,[7]]]]]],[[8,-1],10,[[61,[],[[60,[8]]]]]],[1,4],[[9,62],63],[[16,62],63],[[49,62],63],[[25,62],63],[[26,62],63],[[27,62],63],[[28,62],63],[[59,62],63],[[29,62],63],[[1,62],63],[[30,62],63],[[4,62],63],[[4,62],63],[[4,62],63],[[4,62],63],[[4,62],63],[[31,62],[[18,[10,64]]]],[[3,62],63],[[32,62],[[18,[10,64]]]],[[17,62],63],[[33,62],63],[[34,62],63],[[35,62],63],[[58,62],63],[[36,62],63],[[37,62],63],[[11,62],63],[[54,62],63],[[38,62],63],[[52,62],63],[[39,62],63],[[22,62],63],[[24,62],63],[[55,62],63],[[40,62],63],[[41,62],63],[[19,62],63],[[56,62],63],[[42,62],63],[[43,62],63],[[44,62],63],[[45,62],63],[[5,62],63],[[5,62],63],[[5,62],63],[[5,62],63],[[5,62],63],[[6,62],63],[[6,62],63],[[6,62],63],[[6,62],63],[[6,62],63],[[7,62],63],[[7,62],63],[[7,62],63],[[7,62],63],[[7,62],63],[[8,62],63],[[8,62],63],[[8,62],63],[[8,62],63],[[8,62],63],[[46,62],63],[[47,62],63],[[47,62],63],[[48,62],63],0,[9,[[12,[[18,[3,0]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,40],[13,40],[-1,-1,[]],[-1,-1,[]],[40,41],[13,41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,20],[2,[[12,[4]]]],[13,[[12,[5]]]],[14,[[12,[6]]]],[15,[[12,[7]]]],[15,[[12,[8]]]],[2,4],[2,4],[13,5],[13,5],[14,6],[14,6],[15,7],[15,7],[15,8],[15,8],[2,4],[13,5],[14,6],[15,7],[15,8],[-1,4,[[61,[],[[60,[4]]]]]],[-1,5,[[61,[],[[60,[5]]]]]],[-1,6,[[61,[],[[60,[6]]]]]],[-1,7,[[61,[],[[60,[7]]]]]],[-1,8,[[61,[],[[60,[8]]]]]],[50,[[12,[4]]]],[50,[[12,[5]]]],[50,[[12,[6]]]],[50,[[12,[7]]]],[50,[[12,[8]]]],[[[65,[15]]],[[18,[50,51]]]],[[9,-1],[[12,[-2]]],[[66,[40]]],[20,21]],0,0,[[16,-1],10,67],[[49,-1],10,67],[[25,-1],10,67],[[26,-1],10,67],[[27,-1],10,67],[[28,-1],10,67],[[1,-1],10,67],[[30,-1],10,67],[[31,-1],10,67],[[32,-1],10,67],[[17,-1],10,67],[[33,-1],10,67],[[34,-1],10,67],[[35,-1],10,67],[[36,-1],10,67],[[37,-1],10,67],[[11,-1],10,67],[[54,-1],10,67],[[38,-1],10,67],[[52,-1],10,67],[[22,-1],10,67],[[24,-1],10,67],[[55,-1],10,67],[[40,-1],10,67],[[41,-1],10,67],[[42,-1],10,67],[[43,-1],10,67],[[44,-1],10,67],[[45,-1],10,67],[[5,-1],10,67],[[6,-1],10,67],[[7,-1],10,67],[[8,-1],10,67],[[46,-1],10,67],[[47,-1],10,67],[[48,-1],10,67],[3,13],[27,57],[28,57],[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[8,8],10],0,0,0,[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[[4,4],23],[[5,5],23],[[6,6],23],[[7,7],23],[[8,8],23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,-1,[]],[-1,-2,[],[]],[5,-1,[]],[6,-1,[]],[7,-1,[]],[8,-1,[]],[4,23],[5,23],[6,23],[7,23],[8,23],[1,23],[4,23],[5,23],[6,23],[7,23],[8,23],[4,[[68,[4]]]],[5,[[68,[5]]]],[6,[[68,[6]]]],[7,[[68,[7]]]],[8,[[68,[8]]]],[4,[[69,[4]]]],[5,[[69,[5]]]],[6,[[69,[6]]]],[7,[[69,[7]]]],[8,[[69,[8]]]],[57,[[18,[9,47]]]],[48,[[18,[9,47]]]],[35,13],[9,[[12,[35]]]],[[57,57],[[18,[9,47]]]],0,[58,[[65,[36]]]],0,[11,13],[9,[[12,[58]]]],0,[11,13],0,0,0,0,0,[52,13],[9,39],[16,[[18,[50,51]]]],[1,[[18,[50,51]]]],[50,[[70,[16]]]],[50,[[70,[49]]]],[13,25],[2,26],[13,27],[2,28],[[13,13,13,[65,[15]]],[[70,[59]]]],[[2,13,13,13,15,17],[[70,[3]]]],[13,35],[[[65,[36]]],[[70,[58]]]],[[2,2,37],36],[[13,13],11],[[[65,[31]]],[[70,[54]]]],[[],38],[[13,13,50],[[70,[52]]]],[[[71,[15]],15,[71,[15]],15,13],22],[[[71,[15]],15,[71,[15]],15,13,13,2,15],24],[[15,15,[65,[15]]],[[70,[55]]]],[13,40],[29,[[12,[1]]]],[39,[[12,[52]]]],[4,4],[5,5],[6,6],[7,7],[8,8],0,0,0,[22,[[18,[50,51]]]],[24,[[18,[50,51]]]],0,0,0,0,0,0,0,0,[[16,16],[[12,[53]]]],[[49,49],[[12,[53]]]],[[25,25],[[12,[53]]]],[[26,26],[[12,[53]]]],[[27,27],[[12,[53]]]],[[28,28],[[12,[53]]]],[[1,1],[[12,[53]]]],[[30,30],[[12,[53]]]],[[4,4],[[12,[53]]]],[[31,31],[[12,[53]]]],[[32,32],[[12,[53]]]],[[17,17],[[12,[53]]]],[[33,33],[[12,[53]]]],[[34,34],[[12,[53]]]],[[35,35],[[12,[53]]]],[[36,36],[[12,[53]]]],[[37,37],[[12,[53]]]],[[11,11],[[12,[53]]]],[[54,54],[[12,[53]]]],[[38,38],[[12,[53]]]],[[52,52],[[12,[53]]]],[[22,22],[[12,[53]]]],[[24,24],[[12,[53]]]],[[55,55],[[12,[53]]]],[[40,40],[[12,[53]]]],[[41,41],[[12,[53]]]],[[42,42],[[12,[53]]]],[[43,43],[[12,[53]]]],[[44,44],[[12,[53]]]],[[45,45],[[12,[53]]]],[[5,5],[[12,[53]]]],[[6,6],[[12,[53]]]],[[7,7],[[12,[53]]]],[[8,8],[[12,[53]]]],[[46,46],[[12,[53]]]],[[47,47],[[12,[53]]]],[[48,48],[[12,[53]]]],0,[3,13],0,0,0,0,0,[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[8,8],10],0,0,[22,15],[24,15],[9,[[12,[22]]]],[9,[[12,[24]]]],[22,57],[25,57],[26,57],[1,30],[1,13],[[4,4,23],10],[[5,5,23],10],[[6,6,23],10],[[7,7,23],10],[[8,8,23],10],[22,[[18,[50,51]]]],[24,[[18,[50,51]]]],0,[1,2],[36,2],0,0,0,0,[9,[[12,[55]]]],[9,57],[1,2],[36,2],[52,13],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[8,8],10],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,72,[]],[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[8,8],10],0,[9,57],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],0,[36,37],0,0,[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[-1,73,[]],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[41,13],[9,[[12,[42]]]],0,0,[3,13],0,0,0,0,0,0,0,[24,57],0,0,0,0,0,0,[[74,[70,[52]]],10],[[74,[70,[55]]],10],[[74,11],10],[[74,[70,[16]]],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[74,[70,[49]]],10],[[[70,[-1]]],-2,21,[]],[[[70,[-1]]],10,21],[19],[19],[74,10],[[74,27],10],[[74,28],10],[[74,[70,[54]]],10],[[74,25],10],[[74,26],10],[[74,[70,[59]]],10],[[74,74],23],[[[70,[-1]],[70,[-1]]],23,[21,75]],[74,57],[[74,62],63],[[[70,[-1]],62],63,[76,21]],[[74,[70,[3]]],10],[-1,-1,[]],[-1,-1,[]],[[74,35],10],[-1,-2,[],[]],[-1,-2,[],[]],[[74,[70,[58]]],10],[[],74],[[74,22],10],[[74,24],10],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,73,[]],[-1,73,[]]],"c":[811,815],"p":[[5,"ElfSection",0],[1,"u64"],[5,"FramebufferTag",0],[5,"ElfSectionFlags",0],[5,"VBECapabilities",0],[5,"VBEModeAttributes",0],[5,"VBEWindowAttributes",0],[5,"VBEDirectColorAttributes",0],[5,"BootInformation",0],[1,"tuple"],[5,"BasicMemoryInfoTag",0],[6,"Option",1198],[1,"u32"],[1,"u16"],[1,"u8"],[5,"BootLoaderNameTag",0],[6,"FramebufferType",0],[6,"Result",1199],[5,"Tag",0],[10,"TagTrait",0],[10,"Sized",1200],[5,"RsdpV1Tag",0],[1,"bool"],[5,"RsdpV2Tag",0],[5,"EFISdt32Tag",0],[5,"EFISdt64Tag",0],[5,"EFIImageHandle32Tag",0],[5,"EFIImageHandle64Tag",0],[5,"ElfSectionIter",0],[6,"ElfSectionType",0],[5,"EFIMemoryDesc",0],[5,"EFIMemoryAreaType",0],[5,"FramebufferField",0],[5,"FramebufferColor",0],[5,"ImageLoadPhysAddrTag",0],[5,"MemoryArea",0],[6,"MemoryAreaType",0],[5,"EFIBootServicesNotExitedTag",0],[5,"ModuleIter",0],[5,"TagTypeId",0],[6,"TagType",0],[5,"VBEInfoTag",0],[5,"VBEControlInfo",0],[5,"VBEModeInfo",0],[5,"VBEField",0],[6,"VBEMemoryModel",0],[6,"MbiLoadError",0],[5,"BootInformationHeader",0],[5,"CommandLineTag",0],[1,"str"],[5,"Utf8Error",1201],[5,"ModuleTag",0],[6,"Ordering",1202],[5,"EFIMemoryMapTag",0],[5,"SmbiosTag",0],[5,"EndTag",0],[1,"usize"],[5,"MemoryMapTag",0],[5,"ElfSectionsTag",0],[17,"Item"],[10,"IntoIterator",1203],[5,"Formatter",1204],[8,"Result",1204],[5,"Error",1204],[1,"slice"],[10,"Into",1205],[10,"Hasher",1206],[5,"Iter",1207],[5,"IterNames",1207],[5,"BoxedDst",1154],[1,"array"],[5,"String",1208],[5,"TypeId",1209],[5,"InformationBuilder",1154],[10,"PartialEq",1202],[10,"Debug",1204],[10,"Pointee",0],[15,"RGB",1150],[15,"Indexed",1150]],"b":[[171,"impl-ElfSectionFlags"],[172,"impl-Flags-for-ElfSectionFlags"],[173,"impl-Flags-for-VBECapabilities"],[174,"impl-VBECapabilities"],[175,"impl-Flags-for-VBEModeAttributes"],[176,"impl-VBEModeAttributes"],[177,"impl-Flags-for-VBEWindowAttributes"],[178,"impl-VBEWindowAttributes"],[179,"impl-VBEDirectColorAttributes"],[180,"impl-Flags-for-VBEDirectColorAttributes"],[521,"impl-PartialEq-for-TagTypeId"],[522,"impl-PartialEq%3CTagType%3E-for-TagTypeId"],[523,"impl-PartialEq%3Cu32%3E-for-TagTypeId"],[524,"impl-PartialEq%3CTagTypeId%3E-for-TagType"],[525,"impl-PartialEq%3Cu32%3E-for-TagType"],[526,"impl-PartialEq-for-TagType"],[556,"impl-LowerHex-for-ElfSectionFlags"],[557,"impl-Octal-for-ElfSectionFlags"],[558,"impl-UpperHex-for-ElfSectionFlags"],[559,"impl-Debug-for-ElfSectionFlags"],[560,"impl-Binary-for-ElfSectionFlags"],[587,"impl-UpperHex-for-VBECapabilities"],[588,"impl-Octal-for-VBECapabilities"],[589,"impl-Binary-for-VBECapabilities"],[590,"impl-Debug-for-VBECapabilities"],[591,"impl-LowerHex-for-VBECapabilities"],[592,"impl-LowerHex-for-VBEModeAttributes"],[593,"impl-Debug-for-VBEModeAttributes"],[594,"impl-Octal-for-VBEModeAttributes"],[595,"impl-UpperHex-for-VBEModeAttributes"],[596,"impl-Binary-for-VBEModeAttributes"],[597,"impl-UpperHex-for-VBEWindowAttributes"],[598,"impl-Octal-for-VBEWindowAttributes"],[599,"impl-Debug-for-VBEWindowAttributes"],[600,"impl-LowerHex-for-VBEWindowAttributes"],[601,"impl-Binary-for-VBEWindowAttributes"],[602,"impl-LowerHex-for-VBEDirectColorAttributes"],[603,"impl-Debug-for-VBEDirectColorAttributes"],[604,"impl-Octal-for-VBEDirectColorAttributes"],[605,"impl-UpperHex-for-VBEDirectColorAttributes"],[606,"impl-Binary-for-VBEDirectColorAttributes"],[608,"impl-Debug-for-MbiLoadError"],[609,"impl-Display-for-MbiLoadError"],[635,"impl-From%3CTagType%3E-for-TagTypeId"],[636,"impl-From%3Cu32%3E-for-TagTypeId"],[639,"impl-From%3CTagTypeId%3E-for-TagType"],[640,"impl-From%3Cu32%3E-for-TagType"],[660,"impl-ElfSectionFlags"],[661,"impl-Flags-for-ElfSectionFlags"],[662,"impl-VBECapabilities"],[663,"impl-Flags-for-VBECapabilities"],[664,"impl-VBEModeAttributes"],[665,"impl-Flags-for-VBEModeAttributes"],[666,"impl-Flags-for-VBEWindowAttributes"],[667,"impl-VBEWindowAttributes"],[668,"impl-Flags-for-VBEDirectColorAttributes"],[669,"impl-VBEDirectColorAttributes"]]}],\
["owo_colors",{"doc":"<strong>Quick Links</strong><code>OwoColorize</code><code>Style</code><code>StyledList</code><code>github</code>This crate …","t":"TTPPPPPPGPPPPPPPPPPFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKFPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKGGPPPPPPFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKPPPPPPPFPPPPPPPPPPPPPPPPPPPPPTTPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEFFFFFFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ANSI_BG","ANSI_FG","AeroBlue","AliceBlue","Alto","AltoBeige","AnakiwaBlue","Ansi","AnsiColors","AntiqueWhite","Aqua","Aqua","Aquamarine","Aquamarine","Azure","AzureRadiance","BayLeaf","Beige","Bermuda","BgColorDisplay","BgDynColorDisplay","Bisque","BittersweetOrange","Black","Black","Black","BlanchedAlmond","BlazeOrange","Blink","BlinkFast","Blue","Blue","Blue","BlueRibbon","BlueStone","BlueViolet","BlushPink","Bold","BondiBlue","Boulder","Bouquet","BrightBlack","BrightBlue","BrightCyan","BrightElectricViolet","BrightGreen","BrightGreen","BrightHeliotrope","BrightMagenta","BrightRed","BrightRed","BrightTurquoise","BrightWhite","BrightYellow","BrighterElectricViolet","Brown","Brown","BuddhaGold","BurlyWood","CadetBlue","CamaroneGreen","CanCanPink","Canary","Caramel","CaribbeanGreen","Celadon","Cerulean","Chartreuse","ChartreuseGreen","ChartreuseYellow","ChelseaCucumber","ChetwodeBlue","Chocolate","ClamShell","ClayCreekOlive","CodGray","Color","ComboColorDisplay","ConiferGreen","CopperRose","Copperfield","Coral","Corn","CornflowerBlue","CornflowerBlue","Cornsilk","CosmosSalmon","CottonCandy","CranberryPink","Crimson","Css","CssColors","Cumulus","Cyan","Cyan","Dandelion","DarkAlto","DarkAnakiwaBlue","DarkAquamarine","DarkBlue","DarkBlue","DarkBrightGreen","DarkCodGray","DarkCorn","DarkCornflowerBlue","DarkCyan","DarkDoveGray","DarkFeijoaGreen","DarkFlirt","DarkFreshEggplant","DarkGoldenRod","DarkGray","DarkGray","DarkGreen","DarkGreen","DarkGrey","DarkHeliotropePurple","DarkHotPink","DarkKhaki","DarkLavenderRose","DarkLimeade","DarkMagenta","DarkMalibuBlue","DarkMediumPurple","DarkMineShaft","DarkMintGreen","DarkOliveGreen","DarkOrange","DarkOrchid","DarkPastelGreen","DarkPurple","DarkPurplePizzazz","DarkRed","DarkRose","DarkSalmon","DarkScreaminGreen","DarkSeaGreen","DarkSilver","DarkSilverChalice","DarkSlateBlue","DarkSlateGray","DarkSlateGrey","DarkSpringGreen","DarkTachaOrange","DarkTundora","DarkTurquoise","DarkViolet","DarkViolet","DecoOrange","DeepCerulean","DeepPink","DeepSeaGreen","DeepSkyBlue","Default","DelugePurple","DimGray","DimGrey","Dimmed","DodgerBlue","DollyYellow","DoveGray","DownyTeal","DustyGray","DynColor","DynColors","Effect","ElectricIndigo","ElectricPurple","ElectricViolet","EndeavourBlue","Feijoa","FernGreen","FgColorDisplay","FgDynColorDisplay","FireBrick","Flirt","FloralWhite","FlushOrange","FogPink","ForestGreen","FrenchPassLightBlue","Fuchsia","Fuchsia","FuchsiaPink","Gainsboro","GalleryGray","GhostWhite","GladeGreen","Gold","Gold","GoldenRod","GrandisCaramel","Gray","Gray","Green","Green","Green","GreenYellow","GreenYellow","Grey","GuardsmanRed","GulfStream","HavelockBlue","Heliotrope","Hidden","HillaryOlive","HippieBlue","HollywoodCerise","HoneyDew","Honeysuckle","HopbushPink","HotPink","HotPink","IndianRed","Indigo","Indigo","Italic","Ivory","Jade","JapaneseLaurel","JungleMist","JuniperGreen","Khaki","LaserLemon","Lavender","Lavender","LavenderBlush","LavenderRose","LawnGreen","LemonChiffon","LightAnakiwaBlue","LightAquamarine","LightAzureRadiance","LightBlue","LightCaribbeanGreen","LightCodGray","LightCoral","LightCyan","LightElectricViolet","LightFlirt","LightFreshEggplant","LightGoldenRodYellow","LightGray","LightGray","LightGreen","LightGrey","LightHeliotrope","LightHollywoodCerise","LightJapaneseLaurel","LightLimeade","LightMalibuBlue","LightMineShaft","LightMintGreen","LightOrchid","LightPastelGreen","LightPink","LightSalmon","LightScreaminGreen","LightSeaGreen","LightSilverChalice","LightSkyBlue","LightSlateGray","LightSlateGrey","LightSpringGreen","LightSteelBlue","LightYellow","LighterAquamarine","LighterHeliotrope","Lilac","Lime","Lime","LimeGreen","Limeade","Linen","LochmaraBlue","Magenta","Magenta","Malachite","MalibuBlue","MangoTango","Maroon","Maroon","MatrixPink","Mauve","MediumAquaMarine","MediumBlue","MediumOrchid","MediumPurple","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MediumVioletRed","MelroseLilac","Mercury","MidnightBlue","MidnightBlue","MineShaft","MintCream","MintGreen","MistyRose","Moccasin","MuesliOrange","NavajoWhite","Navy","NavyBlue","NobelGray","OldLace","Olive","Olive","OliveDrab","OliveGreen","Orange","OrangeRed","Orchid","Orchid","OrientBlue","OwoColorize","OysterBay","PaleGoldenRod","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","ParseColorError","PastelGreen","PeachPuff","PersianGreen","Peru","PharlapPink","PigmentIndigo","Pink","PinkFlamingo","PinkLace","PinkSalmon","PirateGold","Pistachio","PixieGreen","Plum","PoloBlue","PompadourMagenta","PortafinoYellow","PowderBlue","Purple","Purple","PurplePizzazz","RAW_ANSI_BG","RAW_ANSI_FG","RazzmatazzCerise","RebeccaPurple","Red","Red","Red","ReefPaleYellow","Reversed","Rgb","Rgb","RioGrandeGreen","RobinEggBlue","RomanOrange","Rose","RoseofSharonOrange","Rosewood","RosyBrown","RoyalBlue","SaddleBrown","Salmon","Salmon","SandyBrown","ScampiIndigo","ScienceBlue","ScorpionGray","ScorpionOlive","ScreaminGreen","SeaGreen","SeaPink","SeaShell","ShakespeareBlue","Sienna","Silver","Silver","SilverChalice","SilverTree","SkyBlue","SlateBlue","SlateBlue","SlateGray","SlateGrey","Snow","SnowyMint","SpringGreen","SpringGreen","SteelBlue","StratosBlue","StrikemasterPurple","Strikethrough","Style","Styled","StyledList","Sundown","Tacao","TachaOrange","Tan","TanBeige","TapestryPink","Teal","Teal","TennOrange","TexasRose","Thistle","ThistlePink","Tomato","Tradewind","Tundora","Turquoise","Underline","UserBlack","UserBlue","UserBrightBlack","UserBrightBlue","UserBrightCyan","UserBrightGreen","UserBrightMagenta","UserBrightRed","UserBrightWhite","UserBrightYellow","UserCyan","UserGreen","UserMagenta","UserRed","UserWhite","UserYellow","VerdunGreen","Viking","Violet","VistaBlue","VividTangerine","Wheat","White","White","White","WhiteSmoke","WildBlueYonder","WildWatermelon","WistfulLilac","Xterm","XtermColors","Yellow","Yellow","Yellow","YellowGreen","YellowSea","bg","bg","bg","bg","bg","bg_rgb","bg_rgb","black","black","black","black","black","blink","blink","blink_fast","blink_fast","blue","blue","blue","blue","blue","bold","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bright_black","bright_black","bright_black","bright_black","bright_black","bright_blue","bright_blue","bright_blue","bright_blue","bright_blue","bright_cyan","bright_cyan","bright_cyan","bright_cyan","bright_cyan","bright_green","bright_green","bright_green","bright_green","bright_green","bright_magenta","bright_magenta","bright_magenta","bright_magenta","bright_magenta","bright_purple","bright_purple","bright_purple","bright_purple","bright_purple","bright_red","bright_red","bright_red","bright_red","bright_red","bright_white","bright_white","bright_white","bright_white","bright_white","bright_yellow","bright_yellow","bright_yellow","bright_yellow","bright_yellow","clone","clone","clone","clone","clone","clone","clone","color","color","color","color","color","color","color","colored","colors","cyan","cyan","cyan","cyan","cyan","default","default_color","default_color","dimmed","dimmed","effect","effects","eq","eq","eq","eq","eq","eq","fg","fg","fg","fg","fg","fg_rgb","fg_rgb","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_ansi_bg","fmt_ansi_bg","fmt_ansi_bg","fmt_ansi_bg","fmt_ansi_bg","fmt_ansi_bg","fmt_ansi_fg","fmt_ansi_fg","fmt_ansi_fg","fmt_ansi_fg","fmt_ansi_fg","fmt_ansi_fg","fmt_prefix","fmt_raw_ansi_bg","fmt_raw_ansi_bg","fmt_raw_ansi_bg","fmt_raw_ansi_bg","fmt_raw_ansi_bg","fmt_raw_ansi_bg","fmt_raw_ansi_fg","fmt_raw_ansi_fg","fmt_raw_ansi_fg","fmt_raw_ansi_fg","fmt_raw_ansi_fg","fmt_raw_ansi_fg","fmt_suffix","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","green","green","green","green","green","hidden","hidden","inner","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_plain","italic","italic","magenta","magenta","magenta","magenta","magenta","new","on_black","on_black","on_black","on_black","on_black","on_blue","on_blue","on_blue","on_blue","on_blue","on_bright_black","on_bright_black","on_bright_black","on_bright_black","on_bright_black","on_bright_blue","on_bright_blue","on_bright_blue","on_bright_blue","on_bright_blue","on_bright_cyan","on_bright_cyan","on_bright_cyan","on_bright_cyan","on_bright_cyan","on_bright_green","on_bright_green","on_bright_green","on_bright_green","on_bright_green","on_bright_magenta","on_bright_magenta","on_bright_magenta","on_bright_magenta","on_bright_magenta","on_bright_purple","on_bright_purple","on_bright_purple","on_bright_purple","on_bright_purple","on_bright_red","on_bright_red","on_bright_red","on_bright_red","on_bright_red","on_bright_white","on_bright_white","on_bright_white","on_bright_white","on_bright_white","on_bright_yellow","on_bright_yellow","on_bright_yellow","on_bright_yellow","on_bright_yellow","on_color","on_color","on_color","on_color","on_color","on_color","on_color","on_cyan","on_cyan","on_cyan","on_cyan","on_cyan","on_default_color","on_default_color","on_green","on_green","on_green","on_green","on_green","on_magenta","on_magenta","on_magenta","on_magenta","on_magenta","on_purple","on_purple","on_purple","on_purple","on_purple","on_red","on_red","on_red","on_red","on_red","on_truecolor","on_truecolor","on_white","on_white","on_white","on_white","on_white","on_yellow","on_yellow","on_yellow","on_yellow","on_yellow","purple","purple","purple","purple","purple","red","red","red","red","red","remove_all_effects","remove_bg","remove_effect","remove_effects","remove_fg","reversed","reversed","strikethrough","strikethrough","style","style","style","style","styles","truecolor","truecolor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","underline","white","white","white","white","white","yellow","yellow","yellow","yellow","yellow","Color","OwoColorize","Black","Blue","BrightBlack","BrightBlue","BrightCyan","BrightGreen","BrightMagenta","BrightRed","BrightWhite","BrightYellow","CustomColor","Cyan","Default","Green","Magenta","Red","White","Yellow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","css","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","xterm","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","DarkBlue","DarkCyan","DarkGoldenRod","DarkGray","DarkGreen","DarkGrey","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkSlateGrey","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DimGrey","DodgerBlue","FireBrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","GoldenRod","Gray","Green","GreenYellow","Grey","HoneyDew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenRodYellow","LightGray","LightGreen","LightGrey","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSlateGrey","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquaMarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenRod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","RebeccaPurple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","SlateGrey","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","AeroBlue","Alto","AltoBeige","AnakiwaBlue","Aqua","Aquamarine","AzureRadiance","BayLeaf","Bermuda","BittersweetOrange","Black","BlazeOrange","Blue","BlueRibbon","BlueStone","BlushPink","BondiBlue","Boulder","Bouquet","BrightElectricViolet","BrightGreen","BrightHeliotrope","BrightRed","BrightTurquoise","BrighterElectricViolet","Brown","BuddhaGold","CamaroneGreen","CanCanPink","Canary","Caramel","CaribbeanGreen","Celadon","Cerulean","ChartreuseGreen","ChartreuseYellow","ChelseaCucumber","ChetwodeBlue","ClamShell","ClayCreekOlive","CodGray","ConiferGreen","CopperRose","Copperfield","Corn","CornflowerBlue","CosmosSalmon","CottonCandy","CranberryPink","Cumulus","Cyan","Dandelion","DarkAlto","DarkAnakiwaBlue","DarkAquamarine","DarkBlue","DarkBrightGreen","DarkCodGray","DarkCorn","DarkCornflowerBlue","DarkDoveGray","DarkFeijoaGreen","DarkFlirt","DarkFreshEggplant","DarkGray","DarkGreen","DarkHeliotropePurple","DarkHotPink","DarkLavenderRose","DarkLimeade","DarkMalibuBlue","DarkMediumPurple","DarkMineShaft","DarkMintGreen","DarkPastelGreen","DarkPurple","DarkPurplePizzazz","DarkRose","DarkScreaminGreen","DarkSilver","DarkSilverChalice","DarkSpringGreen","DarkTachaOrange","DarkTundora","DarkViolet","DecoOrange","DeepCerulean","DeepSeaGreen","DelugePurple","DollyYellow","DoveGray","DownyTeal","DustyGray","ElectricIndigo","ElectricPurple","ElectricViolet","EndeavourBlue","Feijoa","FernGreen","Flirt","FlushOrange","FogPink","FrenchPassLightBlue","Fuchsia","FuchsiaPink","GalleryGray","GladeGreen","Gold","GrandisCaramel","Gray","Green","GreenYellow","GuardsmanRed","GulfStream","HavelockBlue","Heliotrope","HillaryOlive","HippieBlue","HollywoodCerise","Honeysuckle","HopbushPink","HotPink","Indigo","Jade","JapaneseLaurel","JungleMist","JuniperGreen","LaserLemon","Lavender","LavenderRose","LightAnakiwaBlue","LightAquamarine","LightAzureRadiance","LightCaribbeanGreen","LightCodGray","LightElectricViolet","LightFlirt","LightFreshEggplant","LightGray","LightHeliotrope","LightHollywoodCerise","LightJapaneseLaurel","LightLimeade","LightMalibuBlue","LightMineShaft","LightMintGreen","LightOrchid","LightPastelGreen","LightScreaminGreen","LightSilverChalice","LightSpringGreen","LighterAquamarine","LighterHeliotrope","Lilac","Lime","Limeade","LochmaraBlue","Malachite","MalibuBlue","MangoTango","Maroon","MatrixPink","Mauve","MediumPurple","MediumVioletRed","MelroseLilac","Mercury","MidnightBlue","MineShaft","MintGreen","MuesliOrange","NavyBlue","NobelGray","Olive","OliveGreen","Orchid","OrientBlue","OysterBay","PaleGoldenrod","PastelGreen","PersianGreen","PharlapPink","PigmentIndigo","PinkFlamingo","PinkLace","PinkSalmon","PirateGold","Pistachio","PixieGreen","PoloBlue","PompadourMagenta","PortafinoYellow","Purple","PurplePizzazz","RazzmatazzCerise","Red","ReefPaleYellow","RioGrandeGreen","RobinEggBlue","RomanOrange","Rose","RoseofSharonOrange","Rosewood","Salmon","ScampiIndigo","ScienceBlue","ScorpionGray","ScorpionOlive","ScreaminGreen","SeaPink","ShakespeareBlue","Silver","SilverChalice","SilverTree","SlateBlue","SnowyMint","SpringGreen","StratosBlue","StrikemasterPurple","Sundown","Tacao","TachaOrange","TanBeige","TapestryPink","Teal","TennOrange","TexasRose","ThistlePink","Tradewind","Tundora","UserBlack","UserBlue","UserBrightBlack","UserBrightBlue","UserBrightCyan","UserBrightGreen","UserBrightMagenta","UserBrightRed","UserBrightWhite","UserBrightYellow","UserCyan","UserGreen","UserMagenta","UserRed","UserWhite","UserYellow","VerdunGreen","Viking","VistaBlue","VividTangerine","White","WildBlueYonder","WildWatermelon","WistfulLilac","Yellow","YellowSea","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","BlinkDisplay","BlinkFastDisplay","BoldDisplay","DimDisplay","HiddenDisplay","ItalicDisplay","ReversedDisplay","StrikeThroughDisplay","UnderlineDisplay","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"owo_colors"],[919,"owo_colors::colored"],[921,"owo_colors::colors"],[1067,"owo_colors::colors::css"],[1214,"owo_colors::colors::xterm"],[3262,"owo_colors::styles"],[3415,"core::fmt"],[3416,"core::fmt"],[3417,"core::result"],[3418,"core::any"]],"d":["The ANSI format code for setting this color as the …","The ANSI format code for setting this color as the …","","","","","","","Available standard ANSI colors for use with …","","","","","","","","","","","Transparent wrapper around a type which implements all the …","Wrapper around a type which implements all the formatters …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait for describing a type which can be used with …","A wrapper type which applies both a foreground and …","","","","","","","","","","","","","","Available CSS colors for use with <code>OwoColorize::color</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait describing a runtime-configurable color which can …","An enum describing runtime-configurable colors which can …","A runtime-configurable text effect for use with <code>Style</code>","","","","","","","Transparent wrapper around a type which implements all the …","Wrapper around a type which implements all the formatters …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension trait for colorizing a type which implements any …","","","","","","","","An error for when the color can not be parsed from a …","","","","","","","","","","","","","","","","","","","","","","The raw ANSI format for settings this color as the …","The raw ANSI format for settings this color as the …","","","","","","","","Available RGB colors for use with <code>OwoColorize::color</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pre-computed style that can be applied to a struct using …","A wrapper type which applies a <code>Style</code> when displaying the …","A collection of <code>Styled</code> items that are displayed in such a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Available Xterm colors for use with <code>OwoColorize::color</code> or …","","","","","","Set the background color generically.","Set the background color generically.","Set the background color generically.","Set the background color generically.","Set the background color generically.","Set the background color to a specific RGB value.","Set the background color to a specific RGB value.","Change the foreground color to black","Change the foreground color to black","Change the foreground color to black","Change the foreground color to black","Change the foreground color to black","Make the text blink","Make the text blink","Make the text blink (but fast!)","Make the text blink (but fast!)","Change the foreground color to blue","Change the foreground color to blue","Change the foreground color to blue","Change the foreground color to blue","Change the foreground color to blue","Make the text bold","Make the text bold","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Change the foreground color to bright black","Change the foreground color to bright black","Change the foreground color to bright black","Change the foreground color to bright black","Change the foreground color to bright black","Change the foreground color to bright blue","Change the foreground color to bright blue","Change the foreground color to bright blue","Change the foreground color to bright blue","Change the foreground color to bright blue","Change the foreground color to bright cyan","Change the foreground color to bright cyan","Change the foreground color to bright cyan","Change the foreground color to bright cyan","Change the foreground color to bright cyan","Change the foreground color to bright green","Change the foreground color to bright green","Change the foreground color to bright green","Change the foreground color to bright green","Change the foreground color to bright green","Change the foreground color to bright magenta","Change the foreground color to bright magenta","Change the foreground color to bright magenta","Change the foreground color to bright magenta","Change the foreground color to bright magenta","Change the foreground color to bright purple","Change the foreground color to bright purple","Change the foreground color to bright purple","Change the foreground color to bright purple","Change the foreground color to bright purple","Change the foreground color to bright red","Change the foreground color to bright red","Change the foreground color to bright red","Change the foreground color to bright red","Change the foreground color to bright red","Change the foreground color to bright white","Change the foreground color to bright white","Change the foreground color to bright white","Change the foreground color to bright white","Change the foreground color to bright white","Change the foreground color to bright yellow","Change the foreground color to bright yellow","Change the foreground color to bright yellow","Change the foreground color to bright yellow","Change the foreground color to bright yellow","","","","","","","","Set the foreground color at runtime. Only use if you do …","Set the foreground color at runtime. Only use if you do …","Set the foreground color at runtime. Only use if you do …","Set the foreground color at runtime. Only use if you do …","Set the foreground color at runtime. Only use if you do …","Set the foreground color at runtime. Only use if you do …","Set the foreground color at runtime. Only use if you do …","Module for drop-in <code>colored</code> support to aid in porting code …","Color types for used for being generic over the color","Change the foreground color to cyan","Change the foreground color to cyan","Change the foreground color to cyan","Change the foreground color to cyan","Change the foreground color to cyan","","Change the foreground color to the terminal default","Change the foreground color to the terminal default","Make the text dim","Make the text dim","Apply a given effect from the style","Apply a given set of effects to the style","","","","","","","Set the foreground color generically","Set the foreground color generically","Set the foreground color generically","Set the foreground color generically","Set the foreground color generically","Set the foreground color to a specific RGB value.","Set the foreground color to a specific RGB value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A function to output a ANSI code to a formatter to set the …","","","","","","A function to output a ANSI code to a formatter to set the …","","","","","","Applies the ANSI-prefix for this style to the given …","A function to output a raw ANSI code to a formatter to set …","","","","","","A function to output a raw ANSI code to a formatter to set …","","","","","","Applies the ANSI-suffix for this style to the given …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Change the foreground color to green","Change the foreground color to green","Change the foreground color to green","Change the foreground color to green","Change the foreground color to green","Hide the text","Hide the text","Returns a reference to the inner value to be styled","Returns a mutable reference to the inner value to be styled","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns if the style does not apply any formatting","Make the text italicized","Make the text italicized","Change the foreground color to magenta","Change the foreground color to magenta","Change the foreground color to magenta","Change the foreground color to magenta","Change the foreground color to magenta","Create a new style to be applied later","Change the background color to black","Change the background color to black","Change the background color to black","Change the background color to black","Change the foreground color to black","Change the background color to blue","Change the background color to blue","Change the background color to blue","Change the background color to blue","Change the foreground color to blue","Change the background color to bright black","Change the background color to bright black","Change the background color to bright black","Change the background color to bright black","Change the foreground color to bright black","Change the background color to bright blue","Change the background color to bright blue","Change the background color to bright blue","Change the background color to bright blue","Change the foreground color to bright blue","Change the background color to bright cyan","Change the background color to bright cyan","Change the background color to bright cyan","Change the background color to bright cyan","Change the foreground color to bright cyan","Change the background color to bright green","Change the background color to bright green","Change the background color to bright green","Change the background color to bright green","Change the foreground color to bright green","Change the background color to bright magenta","Change the background color to bright magenta","Change the background color to bright magenta","Change the background color to bright magenta","Change the foreground color to bright magenta","Change the background color to bright purple","Change the background color to bright purple","Change the background color to bright purple","Change the background color to bright purple","Change the foreground color to bright purple","Change the background color to bright red","Change the background color to bright red","Change the background color to bright red","Change the background color to bright red","Change the foreground color to bright red","Change the background color to bright white","Change the background color to bright white","Change the background color to bright white","Change the background color to bright white","Change the foreground color to bright white","Change the background color to bright yellow","Change the background color to bright yellow","Change the background color to bright yellow","Change the background color to bright yellow","Change the foreground color to bright yellow","Set the background color at runtime. Only use if you do …","Set the background color at runtime. Only use if you do …","Set the background color at runtime. Only use if you do …","Set the background color at runtime. Only use if you do …","Set the background color at runtime. Only use if you do …","Set the background color at runtime. Only use if you do …","Set the background color at runtime. Only use if you do …","Change the background color to cyan","Change the background color to cyan","Change the background color to cyan","Change the background color to cyan","Change the foreground color to cyan","Change the background color to the terminal default","Change the foreground color to the terminal default","Change the background color to green","Change the background color to green","Change the background color to green","Change the background color to green","Change the foreground color to green","Change the background color to magenta","Change the background color to magenta","Change the background color to magenta","Change the background color to magenta","Change the foreground color to magenta","Change the background color to purple","Change the background color to purple","Change the background color to purple","Change the background color to purple","Change the foreground color to purple","Change the background color to red","Change the background color to red","Change the background color to red","Change the background color to red","Change the foreground color to red","Sets the background color to an RGB value.","Sets the background color to an RGB value.","Change the background color to white","Change the background color to white","Change the background color to white","Change the background color to white","Change the foreground color to white","Change the background color to yellow","Change the background color to yellow","Change the background color to yellow","Change the background color to yellow","Change the foreground color to yellow","Change the foreground color to purple","Change the foreground color to purple","Change the foreground color to purple","Change the foreground color to purple","Change the foreground color to purple","Change the foreground color to red","Change the foreground color to red","Change the foreground color to red","Change the foreground color to red","Change the foreground color to red","Disables all the given effects from the style","Removes the background color from the style. Note that …","Remove a given effect from the style","Remove a given set of effects from the style","Removes the foreground color from the style. Note that …","Swap the foreground and background colors","Swap the foreground and background colors","Cross out the text","Cross out the text","Helper to create <code>Style</code>s more ergonomically","Apply a runtime-determined style","Apply the style to a given struct to output","The style to apply to target","Different display styles (strikethrough, bold, etc.)","Sets the foreground color to an RGB value.","Sets the foreground color to an RGB value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make the text italicized","Make the text italicized","Change the foreground color to white","Change the foreground color to white","Change the foreground color to white","Change the foreground color to white","Change the foreground color to white","Change the foreground color to yellow","Change the foreground color to yellow","Change the foreground color to yellow","Change the foreground color to yellow","Change the foreground color to yellow","","","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A custom RGB color, determined at compile time","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CSS named colors. Not as widely supported as standard ANSI …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","XTerm 256-bit colors. Not as widely supported as standard …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coderansparent wrapper around a type which implements all the …","Transparent wrapper around a type which implements all the …","Transparent wrapper around a type which implements all the …","Transparent wrapper around a type which implements all the …","Transparent wrapper around a type which implements all the …","Transparent wrapper around a type which implements all the …","Transparent wrapper around a type which implements all the …","Transparent wrapper around a type which implements all the …","Transparent wrapper around a type which implements all the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,2,23,22,23,23,23,25,0,22,22,23,22,23,22,23,23,22,23,0,0,22,23,21,22,23,22,23,26,26,21,22,23,23,23,22,23,26,23,23,23,21,21,21,23,21,23,23,21,21,23,23,21,21,23,22,23,23,22,22,23,23,23,23,23,23,23,22,23,23,23,23,22,23,23,23,0,0,23,23,23,22,23,22,23,22,23,23,23,22,25,0,23,21,23,23,23,23,23,22,23,23,23,23,23,22,23,23,23,23,22,22,23,22,23,22,23,23,22,23,23,22,23,23,23,23,22,22,22,23,23,23,22,23,22,23,22,23,23,22,22,22,23,23,23,22,22,23,23,23,22,23,22,21,23,22,22,26,22,23,23,23,23,0,0,0,23,23,23,23,23,23,0,0,22,23,22,23,23,22,23,22,23,23,22,23,22,23,22,23,22,23,22,23,21,22,23,22,23,22,23,23,23,23,26,23,23,23,22,23,23,22,23,22,22,23,26,22,23,23,23,23,22,23,22,23,22,23,22,22,23,23,23,22,23,23,22,22,23,23,23,22,22,23,22,22,23,23,23,23,23,23,23,23,23,22,22,23,22,23,22,22,22,23,22,22,23,23,23,22,23,22,23,22,23,21,22,23,23,23,22,23,23,23,22,22,22,22,23,22,22,22,22,22,23,23,23,22,23,23,22,23,22,22,23,22,22,23,23,22,22,23,22,23,22,22,22,23,23,0,23,22,23,22,22,22,22,0,23,22,23,22,23,23,22,23,23,23,23,23,23,22,23,23,23,22,22,23,23,2,2,23,22,21,22,23,23,26,0,25,23,23,23,23,23,23,22,22,22,22,23,22,23,23,23,23,23,22,23,22,23,22,22,23,23,23,22,22,23,22,22,22,23,22,23,22,23,23,26,0,0,0,23,23,23,22,23,23,22,23,23,23,22,23,22,23,23,22,26,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,22,23,23,22,21,22,23,22,23,23,23,25,0,21,22,23,22,23,1,3,4,5,6,5,6,1,3,4,5,6,5,6,5,6,1,3,4,5,6,5,6,1,46,47,3,4,28,29,21,22,23,24,25,49,26,6,1,46,47,3,4,28,29,21,22,23,24,25,49,26,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,21,22,23,24,25,26,6,1,3,4,28,29,5,6,0,0,1,3,4,5,6,6,5,6,5,6,6,6,21,22,23,24,25,6,1,3,4,5,6,5,6,1,1,1,1,1,1,1,1,1,46,46,46,46,46,46,46,46,46,47,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,21,22,23,24,25,49,26,6,27,21,22,23,24,25,27,21,22,23,24,25,6,27,21,22,23,24,25,27,21,22,23,24,25,6,1,46,47,47,3,4,28,29,21,21,22,23,23,24,25,49,26,6,25,1,3,4,5,6,5,6,46,46,1,46,47,3,4,28,29,21,22,23,24,25,49,26,6,6,5,6,1,3,4,5,6,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,28,29,5,6,1,3,4,5,6,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,1,3,4,5,6,6,6,6,6,6,5,6,5,6,0,5,6,46,0,5,6,1,46,47,3,4,28,29,21,22,23,24,25,49,26,6,1,46,47,3,4,28,29,21,22,23,24,25,49,26,6,1,46,47,3,4,28,29,21,22,23,24,25,49,26,6,5,6,1,3,4,5,6,1,3,4,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,57,53,59,11,56,30,58,31,13,18,16,20,14,17,15,19,7,8,57,53,59,11,56,30,58,31,13,18,16,20,14,17,15,19,0,7,8,57,53,59,11,56,30,58,31,13,18,16,20,14,17,15,19,7,8,57,53,59,11,56,30,58,31,13,18,16,20,14,17,15,19,7,8,57,53,59,11,56,30,58,31,13,18,16,20,14,17,15,19,7,8,57,53,59,11,56,30,58,31,13,18,16,20,14,17,15,19,7,8,57,53,59,11,56,30,58,31,13,18,16,20,14,17,15,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,0,0,0,0,0,0,0,0,0,12,32,55,63,9,10,60,54,61,12,32,55,63,9,10,60,54,61,12,12,12,12,12,12,12,12,12,32,32,32,32,32,32,32,32,32,55,55,55,55,55,55,55,55,55,63,63,63,63,63,63,63,63,63,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,60,60,60,60,60,60,60,60,60,54,54,54,54,54,54,54,54,54,61,61,61,61,61,61,61,61,61,12,32,55,63,9,10,60,54,61,12,32,55,63,9,10,60,54,61,12,32,55,63,9,10,60,54,61,12,32,55,63,9,10,60,54,61,12,32,55,63,9,10,60,54,61],"fc":[],"p":[[5,"ComboColorDisplay",0],[10,"Color",0],[5,"FgColorDisplay",0],[5,"BgColorDisplay",0],[10,"OwoColorize",0],[5,"Style",0],[5,"CustomColor",921],[5,"Black",921],[5,"BlinkDisplay",3262],[5,"BlinkFastDisplay",3262],[5,"Blue",921],[5,"BoldDisplay",3262],[5,"BrightBlack",921],[5,"BrightBlue",921],[5,"BrightCyan",921],[5,"BrightGreen",921],[5,"BrightMagenta",921],[5,"BrightRed",921],[5,"BrightWhite",921],[5,"BrightYellow",921],[6,"AnsiColors",0],[6,"CssColors",0],[6,"XtermColors",0],[5,"Rgb",0],[6,"DynColors",0],[6,"Effect",0],[10,"DynColor",0],[5,"FgDynColorDisplay",0],[5,"BgDynColorDisplay",0],[5,"Cyan",921],[5,"Default",921],[5,"DimDisplay",3262],[1,"slice"],[1,"bool"],[5,"Formatter",3415],[8,"Result",3415],[10,"LowerHex",3415],[10,"Display",3415],[10,"Debug",3415],[10,"Binary",3415],[10,"UpperExp",3415],[10,"UpperHex",3415],[10,"Octal",3415],[10,"LowerExp",3415],[10,"Pointer",3415],[5,"Styled",0],[5,"StyledList",0],[10,"AsRef",3416],[5,"ParseColorError",0],[1,"str"],[1,"u8"],[6,"Result",3417],[5,"Green",921],[5,"HiddenDisplay",3262],[5,"ItalicDisplay",3262],[5,"Magenta",921],[5,"Red",921],[5,"White",921],[5,"Yellow",921],[5,"ReversedDisplay",3262],[5,"StrikeThroughDisplay",3262],[5,"TypeId",3418],[5,"UnderlineDisplay",3262],[5,"UserBlack",1214],[5,"UserRed",1214],[5,"UserGreen",1214],[5,"UserYellow",1214],[5,"UserBlue",1214],[5,"UserMagenta",1214],[5,"UserCyan",1214],[5,"UserWhite",1214],[5,"UserBrightBlack",1214],[5,"UserBrightRed",1214],[5,"UserBrightGreen",1214],[5,"UserBrightYellow",1214],[5,"UserBrightBlue",1214],[5,"UserBrightMagenta",1214],[5,"UserBrightCyan",1214],[5,"UserBrightWhite",1214],[5,"Black",1214],[5,"StratosBlue",1214],[5,"NavyBlue",1214],[5,"MidnightBlue",1214],[5,"DarkBlue",1214],[5,"Blue",1214],[5,"CamaroneGreen",1214],[5,"BlueStone",1214],[5,"OrientBlue",1214],[5,"EndeavourBlue",1214],[5,"ScienceBlue",1214],[5,"BlueRibbon",1214],[5,"JapaneseLaurel",1214],[5,"DeepSeaGreen",1214],[5,"Teal",1214],[5,"DeepCerulean",1214],[5,"LochmaraBlue",1214],[5,"AzureRadiance",1214],[5,"LightJapaneseLaurel",1214],[5,"Jade",1214],[5,"PersianGreen",1214],[5,"BondiBlue",1214],[5,"Cerulean",1214],[5,"LightAzureRadiance",1214],[5,"DarkGreen",1214],[5,"Malachite",1214],[5,"CaribbeanGreen",1214],[5,"LightCaribbeanGreen",1214],[5,"RobinEggBlue",1214],[5,"Aqua",1214],[5,"Green",1214],[5,"DarkSpringGreen",1214],[5,"SpringGreen",1214],[5,"LightSpringGreen",1214],[5,"BrightTurquoise",1214],[5,"Cyan",1214],[5,"Rosewood",1214],[5,"PompadourMagenta",1214],[5,"PigmentIndigo",1214],[5,"DarkPurple",1214],[5,"ElectricIndigo",1214],[5,"ElectricPurple",1214],[5,"VerdunGreen",1214],[5,"ScorpionOlive",1214],[5,"Lilac",1214],[5,"ScampiIndigo",1214],[5,"Indigo",1214],[5,"DarkCornflowerBlue",1214],[5,"DarkLimeade",1214],[5,"GladeGreen",1214],[5,"JuniperGreen",1214],[5,"HippieBlue",1214],[5,"HavelockBlue",1214],[5,"CornflowerBlue",1214],[5,"Limeade",1214],[5,"FernGreen",1214],[5,"SilverTree",1214],[5,"Tradewind",1214],[5,"ShakespeareBlue",1214],[5,"DarkMalibuBlue",1214],[5,"DarkBrightGreen",1214],[5,"DarkPastelGreen",1214],[5,"PastelGreen",1214],[5,"DownyTeal",1214],[5,"Viking",1214],[5,"MalibuBlue",1214],[5,"BrightGreen",1214],[5,"DarkScreaminGreen",1214],[5,"ScreaminGreen",1214],[5,"DarkAquamarine",1214],[5,"Aquamarine",1214],[5,"LightAquamarine",1214],[5,"Maroon",1214],[5,"DarkFreshEggplant",1214],[5,"LightFreshEggplant",1214],[5,"Purple",1214],[5,"ElectricViolet",1214],[5,"LightElectricViolet",1214],[5,"Brown",1214],[5,"CopperRose",1214],[5,"StrikemasterPurple",1214],[5,"DelugePurple",1214],[5,"DarkMediumPurple",1214],[5,"DarkHeliotropePurple",1214],[5,"Olive",1214],[5,"ClayCreekOlive",1214],[5,"DarkGray",1214],[5,"WildBlueYonder",1214],[5,"ChetwodeBlue",1214],[5,"SlateBlue",1214],[5,"LightLimeade",1214],[5,"ChelseaCucumber",1214],[5,"BayLeaf",1214],[5,"GulfStream",1214],[5,"PoloBlue",1214],[5,"LightMalibuBlue",1214],[5,"Pistachio",1214],[5,"LightPastelGreen",1214],[5,"DarkFeijoaGreen",1214],[5,"VistaBlue",1214],[5,"Bermuda",1214],[5,"DarkAnakiwaBlue",1214],[5,"ChartreuseGreen",1214],[5,"LightScreaminGreen",1214],[5,"DarkMintGreen",1214],[5,"MintGreen",1214],[5,"LighterAquamarine",1214],[5,"AnakiwaBlue",1214],[5,"BrightRed",1214],[5,"DarkFlirt",1214],[5,"Flirt",1214],[5,"LightFlirt",1214],[5,"DarkViolet",1214],[5,"BrightElectricViolet",1214],[5,"RoseofSharonOrange",1214],[5,"MatrixPink",1214],[5,"TapestryPink",1214],[5,"FuchsiaPink",1214],[5,"MediumPurple",1214],[5,"Heliotrope",1214],[5,"PirateGold",1214],[5,"MuesliOrange",1214],[5,"PharlapPink",1214],[5,"Bouquet",1214],[5,"Lavender",1214],[5,"LightHeliotrope",1214],[5,"BuddhaGold",1214],[5,"OliveGreen",1214],[5,"HillaryOlive",1214],[5,"SilverChalice",1214],[5,"WistfulLilac",1214],[5,"MelroseLilac",1214],[5,"RioGrandeGreen",1214],[5,"ConiferGreen",1214],[5,"Feijoa",1214],[5,"PixieGreen",1214],[5,"JungleMist",1214],[5,"LightAnakiwaBlue",1214],[5,"Lime",1214],[5,"GreenYellow",1214],[5,"LightMintGreen",1214],[5,"Celadon",1214],[5,"AeroBlue",1214],[5,"FrenchPassLightBlue",1214],[5,"GuardsmanRed",1214],[5,"RazzmatazzCerise",1214],[5,"MediumVioletRed",1214],[5,"HollywoodCerise",1214],[5,"DarkPurplePizzazz",1214],[5,"BrighterElectricViolet",1214],[5,"TennOrange",1214],[5,"RomanOrange",1214],[5,"CranberryPink",1214],[5,"HopbushPink",1214],[5,"Orchid",1214],[5,"LighterHeliotrope",1214],[5,"MangoTango",1214],[5,"Copperfield",1214],[5,"SeaPink",1214],[5,"CanCanPink",1214],[5,"LightOrchid",1214],[5,"BrightHeliotrope",1214],[5,"DarkCorn",1214],[5,"DarkTachaOrange",1214],[5,"TanBeige",1214],[5,"ClamShell",1214],[5,"ThistlePink",1214],[5,"Mauve",1214],[5,"Corn",1214],[5,"TachaOrange",1214],[5,"DecoOrange",1214],[5,"PaleGoldenrod",1214],[5,"AltoBeige",1214],[5,"FogPink",1214],[5,"ChartreuseYellow",1214],[5,"Canary",1214],[5,"Honeysuckle",1214],[5,"ReefPaleYellow",1214],[5,"SnowyMint",1214],[5,"OysterBay",1214],[5,"Red",1214],[5,"DarkRose",1214],[5,"Rose",1214],[5,"LightHollywoodCerise",1214],[5,"PurplePizzazz",1214],[5,"Fuchsia",1214],[5,"BlazeOrange",1214],[5,"BittersweetOrange",1214],[5,"WildWatermelon",1214],[5,"DarkHotPink",1214],[5,"HotPink",1214],[5,"PinkFlamingo",1214],[5,"FlushOrange",1214],[5,"Salmon",1214],[5,"VividTangerine",1214],[5,"PinkSalmon",1214],[5,"DarkLavenderRose",1214],[5,"BlushPink",1214],[5,"YellowSea",1214],[5,"TexasRose",1214],[5,"Tacao",1214],[5,"Sundown",1214],[5,"CottonCandy",1214],[5,"LavenderRose",1214],[5,"Gold",1214],[5,"Dandelion",1214],[5,"GrandisCaramel",1214],[5,"Caramel",1214],[5,"CosmosSalmon",1214],[5,"PinkLace",1214],[5,"Yellow",1214],[5,"LaserLemon",1214],[5,"DollyYellow",1214],[5,"PortafinoYellow",1214],[5,"Cumulus",1214],[5,"White",1214],[5,"DarkCodGray",1214],[5,"CodGray",1214],[5,"LightCodGray",1214],[5,"DarkMineShaft",1214],[5,"MineShaft",1214],[5,"LightMineShaft",1214],[5,"DarkTundora",1214],[5,"Tundora",1214],[5,"ScorpionGray",1214],[5,"DarkDoveGray",1214],[5,"DoveGray",1214],[5,"Boulder",1214],[5,"Gray",1214],[5,"LightGray",1214],[5,"DustyGray",1214],[5,"NobelGray",1214],[5,"DarkSilverChalice",1214],[5,"LightSilverChalice",1214],[5,"DarkSilver",1214],[5,"Silver",1214],[5,"DarkAlto",1214],[5,"Alto",1214],[5,"Mercury",1214],[5,"GalleryGray",1214]],"b":[[594,"impl-LowerHex-for-ComboColorDisplay%3C\'a,+Fg,+Bg,+T%3E"],[595,"impl-Display-for-ComboColorDisplay%3C\'a,+Fg,+Bg,+T%3E"],[596,"impl-Debug-for-ComboColorDisplay%3C\'a,+Fg,+Bg,+T%3E"],[597,"impl-Binary-for-ComboColorDisplay%3C\'a,+Fg,+Bg,+T%3E"],[598,"impl-UpperExp-for-ComboColorDisplay%3C\'a,+Fg,+Bg,+T%3E"],[599,"impl-UpperHex-for-ComboColorDisplay%3C\'a,+Fg,+Bg,+T%3E"],[600,"impl-Octal-for-ComboColorDisplay%3C\'a,+Fg,+Bg,+T%3E"],[601,"impl-LowerExp-for-ComboColorDisplay%3C\'a,+Fg,+Bg,+T%3E"],[602,"impl-Pointer-for-ComboColorDisplay%3C\'a,+Fg,+Bg,+T%3E"],[603,"impl-Octal-for-Styled%3CT%3E"],[604,"impl-UpperHex-for-Styled%3CT%3E"],[605,"impl-Debug-for-Styled%3CT%3E"],[606,"impl-Pointer-for-Styled%3CT%3E"],[607,"impl-LowerExp-for-Styled%3CT%3E"],[608,"impl-UpperExp-for-Styled%3CT%3E"],[609,"impl-Display-for-Styled%3CT%3E"],[610,"impl-Binary-for-Styled%3CT%3E"],[611,"impl-LowerHex-for-Styled%3CT%3E"],[613,"impl-Debug-for-FgColorDisplay%3C\'a,+Color,+T%3E"],[614,"impl-UpperHex-for-FgColorDisplay%3C\'a,+Color,+T%3E"],[615,"impl-Octal-for-FgColorDisplay%3C\'a,+Color,+T%3E"],[616,"impl-UpperExp-for-FgColorDisplay%3C\'a,+Color,+T%3E"],[617,"impl-Pointer-for-FgColorDisplay%3C\'a,+Color,+T%3E"],[618,"impl-LowerHex-for-FgColorDisplay%3C\'a,+Color,+T%3E"],[619,"impl-Binary-for-FgColorDisplay%3C\'a,+Color,+T%3E"],[620,"impl-LowerExp-for-FgColorDisplay%3C\'a,+Color,+T%3E"],[621,"impl-Display-for-FgColorDisplay%3C\'a,+Color,+T%3E"],[622,"impl-LowerHex-for-BgColorDisplay%3C\'a,+Color,+T%3E"],[623,"impl-Pointer-for-BgColorDisplay%3C\'a,+Color,+T%3E"],[624,"impl-Debug-for-BgColorDisplay%3C\'a,+Color,+T%3E"],[625,"impl-Display-for-BgColorDisplay%3C\'a,+Color,+T%3E"],[626,"impl-UpperHex-for-BgColorDisplay%3C\'a,+Color,+T%3E"],[627,"impl-Binary-for-BgColorDisplay%3C\'a,+Color,+T%3E"],[628,"impl-UpperExp-for-BgColorDisplay%3C\'a,+Color,+T%3E"],[629,"impl-LowerExp-for-BgColorDisplay%3C\'a,+Color,+T%3E"],[630,"impl-Octal-for-BgColorDisplay%3C\'a,+Color,+T%3E"],[631,"impl-UpperHex-for-FgDynColorDisplay%3C\'a,+Color,+T%3E"],[632,"impl-Debug-for-FgDynColorDisplay%3C\'a,+Color,+T%3E"],[633,"impl-Binary-for-FgDynColorDisplay%3C\'a,+Color,+T%3E"],[634,"impl-Pointer-for-FgDynColorDisplay%3C\'a,+Color,+T%3E"],[635,"impl-Octal-for-FgDynColorDisplay%3C\'a,+Color,+T%3E"],[636,"impl-LowerHex-for-FgDynColorDisplay%3C\'a,+Color,+T%3E"],[637,"impl-UpperExp-for-FgDynColorDisplay%3C\'a,+Color,+T%3E"],[638,"impl-Display-for-FgDynColorDisplay%3C\'a,+Color,+T%3E"],[639,"impl-LowerExp-for-FgDynColorDisplay%3C\'a,+Color,+T%3E"],[640,"impl-Octal-for-BgDynColorDisplay%3C\'a,+Color,+T%3E"],[641,"impl-LowerHex-for-BgDynColorDisplay%3C\'a,+Color,+T%3E"],[642,"impl-UpperExp-for-BgDynColorDisplay%3C\'a,+Color,+T%3E"],[643,"impl-Debug-for-BgDynColorDisplay%3C\'a,+Color,+T%3E"],[644,"impl-LowerExp-for-BgDynColorDisplay%3C\'a,+Color,+T%3E"],[645,"impl-Pointer-for-BgDynColorDisplay%3C\'a,+Color,+T%3E"],[646,"impl-UpperHex-for-BgDynColorDisplay%3C\'a,+Color,+T%3E"],[647,"impl-Binary-for-BgDynColorDisplay%3C\'a,+Color,+T%3E"],[648,"impl-Display-for-BgDynColorDisplay%3C\'a,+Color,+T%3E"],[3289,"impl-Pointer-for-BoldDisplay%3C\'a,+T%3E"],[3290,"impl-LowerHex-for-BoldDisplay%3C\'a,+T%3E"],[3291,"impl-Binary-for-BoldDisplay%3C\'a,+T%3E"],[3292,"impl-LowerExp-for-BoldDisplay%3C\'a,+T%3E"],[3293,"impl-UpperHex-for-BoldDisplay%3C\'a,+T%3E"],[3294,"impl-Octal-for-BoldDisplay%3C\'a,+T%3E"],[3295,"impl-UpperExp-for-BoldDisplay%3C\'a,+T%3E"],[3296,"impl-Display-for-BoldDisplay%3C\'a,+T%3E"],[3297,"impl-Debug-for-BoldDisplay%3C\'a,+T%3E"],[3298,"impl-UpperHex-for-DimDisplay%3C\'a,+T%3E"],[3299,"impl-LowerExp-for-DimDisplay%3C\'a,+T%3E"],[3300,"impl-Debug-for-DimDisplay%3C\'a,+T%3E"],[3301,"impl-Octal-for-DimDisplay%3C\'a,+T%3E"],[3302,"impl-Pointer-for-DimDisplay%3C\'a,+T%3E"],[3303,"impl-Binary-for-DimDisplay%3C\'a,+T%3E"],[3304,"impl-Display-for-DimDisplay%3C\'a,+T%3E"],[3305,"impl-LowerHex-for-DimDisplay%3C\'a,+T%3E"],[3306,"impl-UpperExp-for-DimDisplay%3C\'a,+T%3E"],[3307,"impl-UpperExp-for-ItalicDisplay%3C\'a,+T%3E"],[3308,"impl-Pointer-for-ItalicDisplay%3C\'a,+T%3E"],[3309,"impl-LowerHex-for-ItalicDisplay%3C\'a,+T%3E"],[3310,"impl-Binary-for-ItalicDisplay%3C\'a,+T%3E"],[3311,"impl-UpperHex-for-ItalicDisplay%3C\'a,+T%3E"],[3312,"impl-Debug-for-ItalicDisplay%3C\'a,+T%3E"],[3313,"impl-Display-for-ItalicDisplay%3C\'a,+T%3E"],[3314,"impl-LowerExp-for-ItalicDisplay%3C\'a,+T%3E"],[3315,"impl-Octal-for-ItalicDisplay%3C\'a,+T%3E"],[3316,"impl-Display-for-UnderlineDisplay%3C\'a,+T%3E"],[3317,"impl-UpperExp-for-UnderlineDisplay%3C\'a,+T%3E"],[3318,"impl-Binary-for-UnderlineDisplay%3C\'a,+T%3E"],[3319,"impl-LowerHex-for-UnderlineDisplay%3C\'a,+T%3E"],[3320,"impl-Pointer-for-UnderlineDisplay%3C\'a,+T%3E"],[3321,"impl-LowerExp-for-UnderlineDisplay%3C\'a,+T%3E"],[3322,"impl-Debug-for-UnderlineDisplay%3C\'a,+T%3E"],[3323,"impl-Octal-for-UnderlineDisplay%3C\'a,+T%3E"],[3324,"impl-UpperHex-for-UnderlineDisplay%3C\'a,+T%3E"],[3325,"impl-Display-for-BlinkDisplay%3C\'a,+T%3E"],[3326,"impl-Octal-for-BlinkDisplay%3C\'a,+T%3E"],[3327,"impl-Binary-for-BlinkDisplay%3C\'a,+T%3E"],[3328,"impl-UpperHex-for-BlinkDisplay%3C\'a,+T%3E"],[3329,"impl-Pointer-for-BlinkDisplay%3C\'a,+T%3E"],[3330,"impl-LowerExp-for-BlinkDisplay%3C\'a,+T%3E"],[3331,"impl-LowerHex-for-BlinkDisplay%3C\'a,+T%3E"],[3332,"impl-UpperExp-for-BlinkDisplay%3C\'a,+T%3E"],[3333,"impl-Debug-for-BlinkDisplay%3C\'a,+T%3E"],[3334,"impl-LowerHex-for-BlinkFastDisplay%3C\'a,+T%3E"],[3335,"impl-Octal-for-BlinkFastDisplay%3C\'a,+T%3E"],[3336,"impl-Pointer-for-BlinkFastDisplay%3C\'a,+T%3E"],[3337,"impl-Debug-for-BlinkFastDisplay%3C\'a,+T%3E"],[3338,"impl-UpperExp-for-BlinkFastDisplay%3C\'a,+T%3E"],[3339,"impl-UpperHex-for-BlinkFastDisplay%3C\'a,+T%3E"],[3340,"impl-LowerExp-for-BlinkFastDisplay%3C\'a,+T%3E"],[3341,"impl-Binary-for-BlinkFastDisplay%3C\'a,+T%3E"],[3342,"impl-Display-for-BlinkFastDisplay%3C\'a,+T%3E"],[3343,"impl-UpperExp-for-ReversedDisplay%3C\'a,+T%3E"],[3344,"impl-UpperHex-for-ReversedDisplay%3C\'a,+T%3E"],[3345,"impl-LowerExp-for-ReversedDisplay%3C\'a,+T%3E"],[3346,"impl-Pointer-for-ReversedDisplay%3C\'a,+T%3E"],[3347,"impl-Binary-for-ReversedDisplay%3C\'a,+T%3E"],[3348,"impl-Debug-for-ReversedDisplay%3C\'a,+T%3E"],[3349,"impl-LowerHex-for-ReversedDisplay%3C\'a,+T%3E"],[3350,"impl-Display-for-ReversedDisplay%3C\'a,+T%3E"],[3351,"impl-Octal-for-ReversedDisplay%3C\'a,+T%3E"],[3352,"impl-UpperExp-for-HiddenDisplay%3C\'a,+T%3E"],[3353,"impl-Octal-for-HiddenDisplay%3C\'a,+T%3E"],[3354,"impl-LowerHex-for-HiddenDisplay%3C\'a,+T%3E"],[3355,"impl-UpperHex-for-HiddenDisplay%3C\'a,+T%3E"],[3356,"impl-Debug-for-HiddenDisplay%3C\'a,+T%3E"],[3357,"impl-LowerExp-for-HiddenDisplay%3C\'a,+T%3E"],[3358,"impl-Pointer-for-HiddenDisplay%3C\'a,+T%3E"],[3359,"impl-Display-for-HiddenDisplay%3C\'a,+T%3E"],[3360,"impl-Binary-for-HiddenDisplay%3C\'a,+T%3E"],[3361,"impl-UpperHex-for-StrikeThroughDisplay%3C\'a,+T%3E"],[3362,"impl-Pointer-for-StrikeThroughDisplay%3C\'a,+T%3E"],[3363,"impl-UpperExp-for-StrikeThroughDisplay%3C\'a,+T%3E"],[3364,"impl-LowerExp-for-StrikeThroughDisplay%3C\'a,+T%3E"],[3365,"impl-Binary-for-StrikeThroughDisplay%3C\'a,+T%3E"],[3366,"impl-Display-for-StrikeThroughDisplay%3C\'a,+T%3E"],[3367,"impl-LowerHex-for-StrikeThroughDisplay%3C\'a,+T%3E"],[3368,"impl-Debug-for-StrikeThroughDisplay%3C\'a,+T%3E"],[3369,"impl-Octal-for-StrikeThroughDisplay%3C\'a,+T%3E"]]}],\
["pod",{"doc":"","t":"KYNNNNN","n":["Pod","Pod","as_bytes","as_bytes_mut","from_bytes","new_uninit","new_zeroed"],"q":[[0,"pod"]],"d":["A marker trait for plain old data (POD).","","As a slice of bytes.","As a mutable slice of bytes.","Creates a new instance from the given bytes.","Creates a new instance of Pod type with uninitialized …","Creates a new instance of Pod type that is filled with …"],"i":[0,0,1,1,1,1,1],"f":[0,0,[1,[[3,[2]]]],[1,[[3,[2]]]],[[[3,[2]]],1],[[],1],[[],1]],"c":[],"p":[[10,"Pod",0],[1,"u8"],[1,"slice"]],"b":[]}],\
["ptr_meta",{"doc":"A radioactive stabilization of the <code>ptr_meta</code> RFC.","t":"FRKKYKRNNNNNNNNHMHNNNHNXNMMNNN","n":["DynMetadata","Metadata","NonNullExt","Pointee","Pointee","PtrExt","Raw","align_of","borrow","borrow_mut","clone","cmp","eq","fmt","from","from_raw_parts","from_raw_parts","from_raw_parts_mut","hash","into","layout","metadata","partial_cmp","pointee","size_of","to_raw_parts","to_raw_parts","try_from","try_into","type_id"],"q":[[0,"ptr_meta"],[30,"core::marker"],[31,"core::cmp"],[32,"core::fmt"],[33,"core::fmt"],[34,"core::hash"],[35,"core::alloc::layout"],[36,"core::option"],[37,"core::result"],[38,"core::any"]],"d":["The metadata for a <code>Dyn = dyn SomeTrait</code> trait object type.","The type for metadata in pointers and references to <code>Self</code>.","Extension methods for <code>NonNull</code>.","Provides the pointer metadata type of any pointed-to type.","Generates an implementation of <code>Pointee</code> for structs with a …","Extension methods for pointers.","The type’s raw pointer (<code>*const ()</code> or <code>*mut ()</code>).","Returns the alignment of the type associated with this …","","","","","","","Returns the argument unchanged.","Forms a (possibly wide) raw pointer from a data address …","Creates a new non-null pointer from its raw parts.","Performs the same functionality as <code>from_raw_parts</code>, except …","","Calls <code>U::from(self)</code>.","Returns the size and alignment together as a <code>Layout</code>.","Returns the metadata component of a pointer.","","Generates an implementation of <code>Pointee</code> for trait objects.","Returns the size of the type associated with this vtable.","Converts a non-null pointer to its raw parts.","Decompose a (possibly wide) pointer into its address and …","","",""],"i":[0,18,0,0,0,0,15,1,1,1,1,1,1,1,1,0,10,0,1,1,1,0,1,0,1,10,15,1,1,1],"f":[0,0,0,0,0,0,0,[[[1,[-1]]],2,3],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],3],[[[1,[-1]],[1,[-1]]],4,3],[[[1,[-1]],[1,[-1]]],5,3],[[[1,[-1]],6],7,3],[-1,-1,[]],[8],[[[9,[8]]],10],[8],[[[1,[-1]],-2],8,3,11],[-1,-2,[],[]],[[[1,[-1]]],12,3],[[]],[[[1,[-1]],[1,[-1]]],[[13,[4]]],3],0,[[[1,[-1]]],2,3],[10,[[8,[[9,[8]]]]]],[[[15,[],[[14,[-1]]]]],[[8,[-1]]],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]]],"c":[],"p":[[5,"DynMetadata",0],[1,"usize"],[10,"Sized",30],[6,"Ordering",31],[1,"bool"],[5,"Formatter",32],[8,"Result",32],[1,"tuple"],[5,"NonNull",33],[10,"NonNullExt",0],[10,"Hasher",34],[5,"Layout",35],[6,"Option",36],[17,"Raw"],[10,"PtrExt",0],[6,"Result",37],[5,"TypeId",38],[10,"Pointee",0]],"b":[]}],\
["radium",{"doc":"<code>radium</code> provides a series of helpers for a uniform API over …","t":"RKMMMMMMMMMMMMQMMCMMMCKKIIIIIIIIIIII","n":["Item","Radium","compare_and_swap","compare_exchange","compare_exchange_weak","fence","fetch_add","fetch_and","fetch_nand","fetch_or","fetch_sub","fetch_update","fetch_xor","get_mut","if_atomic","into_inner","load","marker","new","store","swap","types","BitOps","NumericOps","RadiumBool","RadiumI16","RadiumI32","RadiumI64","RadiumI8","RadiumIsize","RadiumPtr","RadiumU16","RadiumU32","RadiumU64","RadiumU8","RadiumUsize"],"q":[[0,"radium"],[22,"radium::marker"],[24,"radium::types"],[36,"core::sync::atomic"],[37,"core::result"],[38,"core::option"],[39,"core::ops::function"]],"d":["","A maybe-atomic shared mutable fundamental type <code>T</code>.","Stores a value into this object if the currently-stored …","Stores a value into this object if the currently-stored …","Stores a value into this object if the currently-stored …","If the underlying value is atomic, calls <code>fence</code> with the …","Adds <code>value</code> to the currently-stored value, wrapping on …","Performs a bitwise “and” on the currently-stored value …","Performs a bitwise “nand” on the currently-stored …","Performs a bitwise “or” on the currently-stored value …","Subtracts <code>value</code> from the currently-stored value, wrapping …","Fetches the value, and applies a function to it that …","Performs a bitwise “xor” on the currently-stored value …","Returns a mutable reference to the underlying value.","Conditional compilation based on the presence of atomic …","Consumes the wrapper and returns the contained value.","Load a value from this object.","Marker traits used by <code>Radium</code>.","Creates a new value of this type.","Store a value in this object.","Swap with the value stored in this object.","Best-effort atomic types","Types supporting maybe-atomic bitwise operations.","Types supporting maybe-atomic arithmetic operations.","Best-effort atomic <code>bool</code> type.","Best-effort atomic <code>i16</code> type.","Best-effort atomic <code>i32</code> type.","Best-effort atomic <code>i64</code> type.","Best-effort atomic <code>i8</code> type.","Best-effort atomic <code>isize</code> type.","Best-effort atomic pointer type.","Best-effort atomic <code>u16</code> type.","Best-effort atomic <code>u32</code> type.","Best-effort atomic <code>u64</code> type.","Best-effort atomic <code>u8</code> type.","Best-effort atomic <code>usize</code> type."],"i":[2,0,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,[[[2,[],[[1,[-1]]]],-1,-1,3],-1,[]],[[[2,[],[[1,[-1]]]],-1,-1,3,3],[[4,[-1,-1]]],[]],[[[2,[],[[1,[-1]]]],-1,-1,3,3],[[4,[-1,-1]]],[]],[3,5],[[[2,[],[[1,[-1]]]],-1,3],-1,[]],[[[2,[],[[1,[-1]]]],-1,3],-1,[]],[[[2,[],[[1,[-1]]]],-1,3],-1,[]],[[[2,[],[[1,[-1]]]],-1,3],-1,[]],[[[2,[],[[1,[-1]]]],-1,3],-1,[]],[[[2,[],[[1,[-1]]]],3,3,-2],[[4,[-1,-1]]],[],[[8,[-1],[[6,[[7,[-1]]]]]]]],[[[2,[],[[1,[-1]]]],-1,3],-1,[]],[[[2,[],[[1,[-1]]]]],-1,[]],0,[[[2,[],[[1,[-1]]]]],-1,[]],[[[2,[],[[1,[-1]]]],3],-1,[]],0,[-1,[[2,[],[[1,[-1]]]]],[]],[[[2,[],[[1,[-1]]]],-1,3],5,[]],[[[2,[],[[1,[-1]]]],-1,3],-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[2],"p":[[17,"Item"],[10,"Radium",0],[6,"Ordering",36],[6,"Result",37],[1,"tuple"],[17,"Output"],[6,"Option",38],[10,"FnMut",39]],"b":[]}],\
["raw_cpuid",{"doc":"A library to parse the x86 CPUID instruction, written in …","t":"PFGPPPPPSPFFGFFGPFFPFFGPPPFPPPFFFGGFFFFFFPPPPGFPPPPPFFFFFPFFPFPPPPPFFPPFFFFFFPPPFFPPPFGFFFFPFPFPFGFPPPPPPPFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["ACRN","ApmInfo","Associativity","Avx","Avx512Opmask","Avx512ZmmHi16","Avx512ZmmHi256","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","Die","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedRegisterStateLocation","ExtendedRegisterType","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","Hdc","HyperV","Hypervisor","HypervisorInfo","Ia32Xss","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","LoadOnly","MemBwAllocationInfo","MemoryEncryptionInfo","Module","MonitorMwaitInfo","MpxBndcsr","MpxBndregs","NWay","Null","Null","PerformanceMonitoringInfo","PerformanceOptimizationInfo","Pkru","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTopologyInfo","ProcessorTraceInfo","Pt","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","StoreOnly","SvmFeatures","TLB","ThermalPowerInfo","Tile","Tlb1gbPageInfo","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","Unknown","VMware","VendorInfo","Xcr0","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","core_id","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dtlb_l1_1gb_associativity","dtlb_l1_1gb_size","dtlb_l2_1gb_associativity","dtlb_l2_1gb_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_extended_topology_info_v2","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_performance_optimization_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_topology_info","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_svm_info","get_thermal_power_info","get_tlb_1gb_page_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_av512vbmi2","has_avic","has_avx","has_avx2","has_avx512_ifma","has_avx512bitalg","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_avx512vnni","has_avx512vpopcntdq","has_bmi1","has_bmi2","has_cet_ss","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_decode_assists","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_flush_by_asid","has_fma","has_fma4","has_fp128","has_fp256","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_gfni","has_gif","has_gmet","has_hdc","has_hle","has_host_mce_override","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_la57","has_lahf_sahf","has_lbr_virtualization","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_movu","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_nested_paging","has_nrip","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pause_filter","has_pause_filter_threshold","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_spec_ctrl","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_sss_check","has_ssse3","has_succor","has_svm","has_svm_lock","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tlb_ctrl","has_tm","has_tm","has_tm2","has_tme_en","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_tsc_rate_msr","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vaes","has_vmcb_clean_bits","has_vme","has_vmpl","has_vmsave_virtualization","has_vmx","has_volt_id_ctrl","has_vpclmulqdq","has_vte","has_waitpkg","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","itlb_l1_1gb_associativity","itlb_l1_1gb_size","itlb_l2_1gb_associativity","itlb_l2_1gb_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","location","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","new","next","next","next","next","next","next","next","node_id","nodes_per_processor","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","register","revision","rmid_range","secs_attributes","serial","serial_all","serial_lower","serial_middle","serial_upper","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_asids","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","threads_per_core","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","cpuid_count"],"q":[[0,"raw_cpuid"],[1126,"raw_cpuid::native_cpuid"],[1127,"core::option"],[1128,"core::fmt"],[1129,"core::fmt"],[1130,"core::any"]],"d":["","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","","","","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we’…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","Where the extended register state is stored.","What kidn of extended register state this is.","ExtendedState subleaf structure for things that need to be …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities (LEAF=0x8000_001F).","","Information about how monitor/mwait works on this CPU …","","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","Performance Optimization Identifier (LEAF=0x8000_001A).","","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Processor Topology Information (LEAF=0x8000_001E).","Intel Processor Trace Information (LEAF=0x14).","","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","","Information about the SVM features that the processory …","","Query information about thermal and power management …","","TLB 1-GiB Pages Information (LEAF=0x8000_0019).","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to satisfy …","","","","","","Vendor Info String (LEAF=0x0)","","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Core ID","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","L1 Data TLB associativity for 1-GB pages.","L1 Data TLB number of entries for 1-GB pages.","L2 Data TLB associativity for 1-GB pages.","L2 Data TLB number of entries for 1-GB pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Extended information about topology (LEAF=0x1F).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running …","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Informations about performance optimization …","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Informations about processor topology (LEAF=0x8000_001E)","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","This function provides information about the SVM features …","Query information about thermal and power management …","TLB 1-GiB Pages Information (LEAF=0x8000_0019)","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if set.","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","AVX512VBMI2","Support for the AMD advanced virtual interrupt controller …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BITALG","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","AVX512VNNI","AVX512VPOPCNTDQ","BMI1","BMI2","Supports CET shadow stack features. Processors that set …","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache. …","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Indicates support for the decode assists if set.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","Indicates that TLB flush events, including CR3 writes and …","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","The internal FP/SIMD execution datapath is 128 bits wide …","The internal FP/SIMD execution datapath is 256 bits wide …","Floating Point Unit On-Chip. The processor contains an x87 …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","GFNI","GIF – virtualized global interrupt flag if set.","Guest Mode Execution Trap supported if set.","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","When host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …","Max APIC IDs reserved field is Valid. A value of 0 for HTT …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is supported …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested translations …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Supports 57-bit linear addresses and five-level paging if …","Is LAHF/SAHF available in 64-bit mode?","Indicates support for LBR Virtualization.","Reports whether the response of the delay values is linear.","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel MMX …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MOVU (Move Unaligned) SSE instructions are efficient more …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. The …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Nested paging supported if set.","Indicates support for NRIP save on #VMEXIT if set.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Indicates support for the pause intercept filter if set.","Indicates support for the PAUSE filter cycle count …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the 96-bit …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","SPEC_CTRL virtualization supported if set.","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","SVM supervisor shadow stack restrictions if set.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Indicates support for SVM-Lock if set.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Support for INVLPGB/TLBSYNC hypervisor enable in VMCB and …","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","Indicates the following MSRs are supported: …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Indicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if …","Intel Turbo Boost Technology Available (see description of …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","VAES","Indicates support for VMCB clean bits if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","VMSAVE and VMLOAD virtualization supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","VPCLMULQDQ","Virtual Transparent Encryption supported if set.","WAITPKG","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area is …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) is …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L1 Instruction TLB associativity for 1-GB pages.","L1 Instruction TLB number of entries for 1-GB pages.","L2 Instruction TLB associativity for 1-GB pages.","L2 Instruction TLB number of entries for 1-GB pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor’…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for the …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","Node ID","Nodes per processor","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads in the processor.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components save …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Returns which register this specific extended subleaf …","SVM revision number.","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","96 bit processor serial number.","Bits 00-31 of 96 bit processor serial number.","Bits 32-63 of 96 bit processor serial number.","Bits 64-96 of 96 bit processor serial number.","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a unique …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the Processor …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of available address space identifiers (ASID).","Number of C0 sub C-states supported using MWAIT (Bits 03 - …","Number of C1 sub C-states supported using MWAIT (Bits 07 - …","Number of C2 sub C-states supported using MWAIT (Bits 11 - …","Number of C3 sub C-states supported using MWAIT (Bits 15 - …","Number of C4 sub C-states supported using MWAIT (Bits 19 - …","Number of C5 sub C-states supported using MWAIT (Bits 23 - …","Number of C6 sub C-states supported using MWAIT (Bits 27 - …","Number of C7 sub C-states supported using MWAIT (Bits 31 - …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","Threads per core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” * …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …",""],"i":[53,0,0,50,50,50,50,53,0,26,0,0,0,0,0,0,49,0,0,26,0,0,0,21,20,49,0,39,39,64,0,0,0,0,0,0,0,0,0,0,0,39,26,50,53,0,0,51,21,20,49,53,0,0,0,0,0,20,0,0,49,0,50,50,39,21,20,0,0,50,26,0,0,0,0,0,0,50,53,53,0,0,21,49,26,0,0,0,0,0,0,20,0,26,0,49,0,0,0,21,20,39,50,20,53,53,0,51,53,1,3,6,8,10,11,10,11,12,14,14,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,15,14,16,18,19,19,12,22,23,14,24,1,25,26,27,28,12,29,30,31,32,12,33,34,35,36,37,0,38,38,38,38,24,40,27,38,41,38,41,38,41,38,41,42,42,42,42,43,1,1,36,1,1,38,41,39,37,6,44,42,45,35,18,1,10,25,46,12,21,47,48,49,50,51,23,52,20,11,53,14,14,15,47,14,36,36,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,39,37,6,44,42,45,35,18,24,1,10,10,25,26,27,27,46,28,12,21,21,47,29,48,49,49,30,50,50,51,51,23,52,31,64,65,32,20,20,66,11,11,53,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,50,51,23,52,31,64,65,32,20,66,11,53,24,24,24,57,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,63,24,24,24,63,24,63,24,24,24,24,63,63,24,6,37,19,15,19,15,19,19,15,18,14,15,56,14,15,18,15,36,14,43,56,44,14,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,6,14,56,56,14,15,14,14,14,22,12,33,37,14,15,14,14,18,44,14,14,43,43,14,62,62,43,15,15,14,15,56,37,43,44,14,15,45,45,14,56,37,56,14,56,44,44,43,56,44,14,43,18,37,37,43,43,43,43,43,43,43,43,14,15,43,6,6,37,6,6,56,33,61,61,60,56,15,44,52,33,34,15,15,14,37,14,6,61,15,14,15,14,15,14,45,56,14,33,14,15,44,44,34,56,15,14,14,18,14,44,44,14,14,14,14,15,15,15,14,56,43,14,33,37,15,56,18,56,14,14,14,43,33,56,6,14,56,56,56,15,56,6,18,37,33,56,18,18,18,56,62,62,56,56,33,15,56,18,56,14,44,14,14,14,14,14,14,15,44,14,37,15,44,15,14,15,37,44,14,37,14,56,33,33,15,34,33,37,14,56,14,44,43,43,56,6,56,44,14,18,44,14,37,56,18,56,6,15,14,58,15,14,58,58,58,22,23,52,58,58,38,38,38,38,3,14,47,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,25,28,29,30,31,32,66,6,36,36,36,59,36,19,12,59,59,12,36,36,36,12,12,22,23,58,62,38,41,38,41,38,41,38,41,42,42,42,42,61,41,41,41,41,61,60,41,41,41,41,47,12,48,48,6,59,56,19,12,12,62,62,18,52,14,6,6,34,61,18,62,14,0,24,25,28,29,30,31,32,66,35,35,40,27,6,36,40,59,19,6,6,18,65,12,15,16,16,48,59,44,60,62,46,46,46,46,46,19,12,48,59,65,47,14,59,44,47,47,47,47,47,47,47,47,33,33,33,35,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,40,3,27,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,36,19,24,35,48,58,58,58,58,58,58,58,58,58,58,58,58,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,[[5,[4]]]],[6,7],[8,9],[10,9],[11,9],[10,9],[11,9],[12,13],[14,7],[14,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,4],[14,7],[16,17],[18,7],[19,7],[19,20],[12,21],[22,7],[23,7],[14,7],[24,24],[1,1],[25,25],[26,26],[27,27],[28,28],[12,12],[29,29],[30,30],[31,31],[32,32],[12,13],[33,7],[34,4],[35,7],[36,7],[37,4],0,[38,39],[38,7],[38,7],[38,7],[[],24],[40,4],[27,9],[38,39],[41,39],[38,7],[41,17],[38,39],[41,39],[38,7],[41,17],[42,39],[42,7],[42,39],[42,7],[43,7],0,0,[36,7],0,0,[[38,38],2],[[41,41],2],[[39,39],2],[[37,37],2],[[6,6],2],[[44,44],2],[[42,42],2],[[45,45],2],[[35,35],2],[[18,18],2],[[1,1],2],[[10,10],2],[[25,25],2],[[46,46],2],[[12,12],2],[[21,21],2],[[47,47],2],[[48,48],2],[[49,49],2],[[50,50],2],[[51,51],2],[[23,23],2],[[52,52],2],[[20,20],2],[[11,11],2],[[53,53],2],[14,7],[14,7],[15,4],[47,2],[14,7],[36,7],[36,7],[[15,54],55],[[8,54],55],[[14,54],55],[[43,54],55],[[56,54],55],[[57,54],55],[[36,54],55],[[58,54],55],[[59,54],55],[[60,54],55],[[34,54],55],[[61,54],55],[[22,54],55],[[62,54],55],[[33,54],55],[[40,54],55],[[16,54],55],[[19,54],55],[[63,54],55],[[3,54],55],[[38,54],55],[[41,54],55],[[39,54],55],[[39,54],55],[[37,54],55],[[6,54],55],[[44,54],55],[[42,54],55],[[45,54],55],[[35,54],55],[[18,54],55],[[24,54],55],[[1,54],55],[[10,54],55],[[10,54],55],[[25,54],55],[[26,54],55],[[27,54],55],[[27,54],55],[[46,54],55],[[28,54],55],[[12,54],55],[[21,54],55],[[21,54],55],[[47,54],55],[[29,54],55],[[48,54],55],[[49,54],55],[[49,54],55],[[30,54],55],[[50,54],55],[[50,54],55],[[51,54],55],[[51,54],55],[[23,54],55],[[52,54],55],[[31,54],55],[[64,54],55],[[65,54],55],[[32,54],55],[[20,54],55],[[20,54],55],[[66,54],55],[[11,54],55],[[11,54],55],[[53,54],55],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[24,[[5,[37]]]],[24,[[5,[25]]]],[24,[[5,[28]]]],[57,4],[24,[[5,[32]]]],[24,[[5,[57]]]],[24,[[5,[56]]]],[24,[[5,[15]]]],[24,[[5,[58]]]],[24,[[5,[29]]]],[24,[[5,[29]]]],[24,[[5,[14]]]],[24,[[5,[3]]]],[24,[[5,[38]]]],[24,[[5,[41]]]],[24,[[5,[18]]]],[24,[[5,[47]]]],[24,[[5,[36]]]],[24,[[5,[45]]]],[24,[[5,[8]]]],[24,[[5,[6]]]],[24,[[5,[16]]]],[24,[[5,[46]]]],[24,[[5,[35]]]],[24,[[5,[33]]]],[63,4],[24,[[5,[61]]]],[24,[[5,[60]]]],[24,[[5,[62]]]],[63,17],[24,[[5,[63]]]],[63,4],[24,[[5,[44]]]],[24,[[5,[43]]]],[24,[[5,[42]]]],[24,[[5,[40]]]],[63,[[5,[66]]]],[63,[[5,[11]]]],[24,[[5,[10]]]],[6,7],[37,2],[19,2],[15,2],[19,2],[15,2],[19,2],[19,2],[15,2],[18,2],[14,2],[15,2],[56,2],[14,2],[15,2],[18,2],[15,2],[36,2],[14,2],[43,2],[56,2],[44,2],[14,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[6,2],[14,2],[56,2],[56,2],[14,2],[15,2],[14,2],[14,2],[14,2],[22,2],[12,2],[33,2],[37,2],[14,2],[15,2],[14,2],[14,2],[18,2],[44,2],[14,2],[14,2],[43,2],[43,2],[14,2],[62,2],[62,2],[43,2],[15,2],[15,2],[14,2],[15,2],[56,2],[37,2],[43,2],[44,2],[14,2],[15,2],[45,2],[45,2],[14,2],[56,2],[37,2],[56,2],[14,2],[56,2],[44,2],[44,2],[43,2],[56,2],[44,2],[14,2],[43,2],[18,2],[37,2],[37,2],[43,2],[43,2],[43,2],[43,2],[43,2],[43,2],[43,2],[43,2],[14,2],[15,2],[43,2],[6,2],[6,2],[37,2],[6,2],[6,2],[56,2],[33,2],[61,2],[61,2],[60,2],[56,2],[15,2],[44,2],[52,2],[33,2],[34,2],[15,2],[15,2],[14,2],[37,2],[14,2],[6,2],[61,2],[15,2],[14,2],[15,2],[14,2],[15,2],[14,2],[45,2],[56,2],[14,2],[33,2],[14,2],[15,2],[44,2],[44,2],[34,2],[56,2],[15,2],[14,2],[14,2],[18,2],[14,2],[44,2],[44,2],[14,2],[14,2],[14,2],[14,2],[15,2],[15,2],[15,2],[14,2],[56,2],[43,2],[14,2],[33,2],[37,2],[15,2],[56,2],[18,2],[56,2],[14,2],[14,2],[14,2],[43,2],[33,2],[56,2],[6,2],[14,2],[56,2],[56,2],[56,2],[15,2],[56,2],[6,2],[18,2],[37,2],[33,2],[56,2],[18,2],[18,2],[18,2],[56,2],[62,2],[62,2],[56,2],[56,2],[33,2],[15,2],[56,2],[18,2],[56,2],[14,2],[44,2],[14,2],[14,2],[14,2],[14,2],[14,2],[14,2],[15,2],[44,2],[14,2],[37,2],[15,2],[44,2],[15,2],[14,2],[15,2],[37,2],[44,2],[14,2],[37,2],[14,2],[56,2],[33,2],[33,2],[15,2],[34,2],[33,2],[37,2],[14,2],[56,2],[14,2],[44,2],[43,2],[43,2],[56,2],[6,2],[56,2],[44,2],[14,2],[18,2],[44,2],[14,2],[37,2],[56,2],[18,2],[56,2],[6,2],[15,2],[14,2],[58,2],[15,2],[14,2],[58,2],[58,2],[58,2],[22,17],[23,17],[52,17],[58,2],[58,2],[38,39],[38,7],[38,7],[38,7],[3,53],[14,7],[47,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,17],[36,2],[36,2],[36,2],[59,2],[36,2],[19,2],[12,2],[59,2],[59,2],[12,2],[36,2],[36,2],[36,2],[12,2],[12,2],[22,4],[23,4],[58,30],[62,31],[38,39],[41,39],[38,7],[41,17],[38,39],[41,39],[38,7],[41,17],[42,39],[42,7],[42,39],[42,7],[61,[[5,[23]]]],[41,39],[41,7],[41,7],[41,17],[61,[[5,[22]]]],[60,[[5,[34]]]],[41,39],[41,7],[41,7],[41,17],[47,17],[12,7],[48,7],[48,49],[6,7],[59,51],[56,7],[19,17],[12,13],[12,13],[62,7],[62,7],[18,4],[52,17],[14,7],[6,17],[6,13],[34,4],[61,[[5,[52]]]],[18,4],[62,4],[14,7],0,[[],24],[25,[[5,[27]]]],[28,[[5,[12]]]],[29,[[5,[48]]]],[30,[[5,[59]]]],[31,[[5,[64]]]],[32,[[5,[19]]]],[66,[[5,[1]]]],[35,7],[35,7],[40,4],0,[6,13],[36,7],[40,4],[59,4],[19,7],[6,13],[6,7],[18,7],[65,67],[12,13],[15,4],[16,17],[16,17],[48,17],[59,50],[44,7],[60,4],[62,[[68,[67,67]]]],[46,67],[46,69],[46,4],[46,4],[46,4],[19,4],[12,13],[48,4],[59,4],[65,67],[47,17],[14,7],0,[44,4],[47,17],[47,17],[47,17],[47,17],[47,17],[47,17],[47,17],[47,17],[33,17],[33,17],[33,17],[35,7],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[40,[[5,[67]]]],[3,[[5,[4]]]],0,[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[36,7],[19,17],[[],24],[35,4],[48,4],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,4],[58,4],[58,4],[[4,4],1]],"c":[115,116],"p":[[5,"CpuIdResult",0],[1,"bool"],[5,"HypervisorInfo",0],[1,"u32"],[6,"Option",1127],[5,"ProcessorCapacityAndFeatureInfo",0],[1,"u8"],[5,"ProcessorBrandString",0],[1,"str"],[5,"VendorInfo",0],[5,"SoCVendorBrand",0],[5,"CacheParameter",0],[1,"usize"],[5,"FeatureInfo",0],[5,"ExtendedProcessorFeatureIdentifiers",0],[5,"ProcessorFrequencyInfo",0],[1,"u16"],[5,"MemoryEncryptionInfo",0],[5,"DatInfo",0],[6,"DatType",0],[6,"CacheType",0],[5,"L3CatInfo",0],[5,"L2CatInfo",0],[5,"CpuId",0],[5,"CacheInfoIter",0],[6,"CacheInfoType",0],[5,"CacheInfo",0],[5,"CacheParametersIter",0],[5,"ExtendedTopologyIter",0],[5,"ExtendedStateIter",0],[5,"SgxSectionIter",0],[5,"DatIter",0],[5,"ProcessorTraceInfo",0],[5,"L3MonitoringInfo",0],[5,"ProcessorTopologyInfo",0],[5,"PerformanceMonitoringInfo",0],[5,"ApmInfo",0],[5,"L1CacheTlbInfo",0],[6,"Associativity",0],[5,"TscInfo",0],[5,"L2And3CacheTlbInfo",0],[5,"Tlb1gbPageInfo",0],[5,"ThermalPowerInfo",0],[5,"SvmFeatures",0],[5,"PerformanceOptimizationInfo",0],[5,"ProcessorSerial",0],[5,"MonitorMwaitInfo",0],[5,"ExtendedTopologyLevel",0],[6,"TopologyType",0],[6,"ExtendedRegisterType",0],[6,"ExtendedRegisterStateLocation",0],[5,"MemBwAllocationInfo",0],[6,"Hypervisor",0],[5,"Formatter",1128],[8,"Result",1128],[5,"ExtendedFeatures",0],[5,"DirectCacheAccessInfo",0],[5,"ExtendedStateInfo",0],[5,"ExtendedState",0],[5,"RdtMonitoringInfo",0],[5,"RdtAllocationInfo",0],[5,"SgxInfo",0],[5,"SoCVendorInfo",0],[6,"SgxSectionInfo",0],[5,"EpcSection",0],[5,"SoCVendorAttributesIter",0],[1,"u64"],[1,"tuple"],[1,"u128"],[6,"Result",1129],[5,"TypeId",1130]],"b":[[342,"impl-Display-for-Associativity"],[343,"impl-Debug-for-Associativity"],[353,"impl-Display-for-VendorInfo"],[354,"impl-Debug-for-VendorInfo"],[357,"impl-Debug-for-CacheInfo"],[358,"impl-Display-for-CacheInfo"],[362,"impl-Display-for-CacheType"],[363,"impl-Debug-for-CacheType"],[367,"impl-Display-for-TopologyType"],[368,"impl-Debug-for-TopologyType"],[370,"impl-Debug-for-ExtendedRegisterType"],[371,"impl-Display-for-ExtendedRegisterType"],[372,"impl-Display-for-ExtendedRegisterStateLocation"],[373,"impl-Debug-for-ExtendedRegisterStateLocation"],[380,"impl-Display-for-DatType"],[381,"impl-Debug-for-DatType"],[383,"impl-Debug-for-SoCVendorBrand"],[384,"impl-Display-for-SoCVendorBrand"]]}],\
["rsdp",{"doc":"This crate provides types for representing the RSDP (the …","t":"PPPPFGNNNNNNNHNNNNCNNNNNNNNNNNNNNKFNNNNNNNMNNNNNNNMN","n":["IncorrectSignature","InvalidChecksum","InvalidOemId","NoValidRsdp","Rsdp","RsdpError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","find_search_areas","fmt","fmt","from","from","handler","into","into","oem_id","revision","rsdt_address","search_for_on_bios","try_from","try_from","try_into","try_into","type_id","type_id","validate","xsdt_address","AcpiHandler","PhysicalMapping","borrow","borrow_mut","deref","drop","from","handler","into","map_physical_region","mapped_length","new","physical_start","region_length","try_from","try_into","type_id","unmap_physical_region","virtual_start"],"q":[[0,"rsdp"],[33,"rsdp::handler"],[52,"core::ops::range"],[53,"core::fmt"],[54,"core::fmt"],[55,"core::any"],[56,"core::ptr::non_null"]],"d":["","","","","The first structure found in ACPI. It just tells us where …","","","","","","","","","Find the areas we should search for the RSDP in.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","This searches for a RSDP on BIOS systems.","","","","","","","Checks that: 1) The signature is correct 2) The checksum …","","An implementation of this trait must be provided to allow …","Describes a physical mapping created by …","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Given a physical address and a size, map a region of …","","Construct a new <code>PhysicalMapping</code>. <code>mapped_length</code> may differ …","","","","","","Unmap the given physical mapping. This is called when a …",""],"i":[1,1,1,1,0,0,1,2,1,2,1,2,1,0,1,2,1,2,0,1,2,2,2,2,2,1,2,1,2,1,2,2,2,0,0,13,13,13,13,13,13,13,7,13,13,13,13,13,13,13,7,13],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[1,1],3],[-1,[[6,[[5,[4]]]]],7],[[1,8],9],[[2,8],9],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[2,10],[2,11],[2,12],[-1,[[14,[[13,[-1,2]],1]]],7],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[2,[[14,[16,1]]]],[2,17],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2]]],-2,7,[]],[[[13,[-1,-2]]],16,7,[]],[-1,-1,[]],[[[13,[-1,-2]]],-1,7,[]],[-1,-2,[],[]],[[7,4,4],[[13,[7,-1]]],[]],[[[13,[-1,-2]]],4,7,[]],[[4,[18,[-1]],4,4,-2],[[13,[-2,-1]]],[],7],[[[13,[-1,-2]]],4,7,[]],[[[13,[-1,-2]]],4,7,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[[[13,[7,-1]]],16,[]],[[[13,[-1,-2]]],[[18,[-2]]],7,[]]],"c":[],"p":[[6,"RsdpError",0],[5,"Rsdp",0],[1,"bool"],[1,"usize"],[5,"Range",52],[1,"array"],[10,"AcpiHandler",33],[5,"Formatter",53],[8,"Result",53],[1,"str"],[1,"u8"],[1,"u32"],[5,"PhysicalMapping",33],[6,"Result",54],[5,"TypeId",55],[1,"tuple"],[1,"u64"],[5,"NonNull",56]],"b":[]}],\
["scopeguard",{"doc":"A scope guard will run a given closure when it goes out of …","t":"GFKNNNNQNNNNNNNHNNNMNNNNNNNN","n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":[[0,"scopeguard"],[28,"core::ops::function"],[29,"core::fmt"],[30,"core::fmt"],[31,"core::any"]],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,8,1,8,0,1,1,1,1,8,1,8,0,1,8,1,3,8,1,8,1,8,1,8,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[1,[-1,-2,-3]]],-1,[],[[2,[-1]]],3],[[[1,[-1,-2,-3]]],-1,[],[[2,[-1]]],3],[[[1,[-1,-2,-3]]],4,[],[[2,[-1]]],3],[[[1,[-1,-2,-3]],5],6,7,[[2,[-1]]],3],[[8,5],6],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[1,[-1,-2,8]]],[],[[2,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2,-3]]],-1,[],[[2,[-1]]],3],[[],9],[[],9],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[-1,-2],[[1,[-1,-2,-3]]],[],[[2,[-1]]],3]],"c":[],"p":[[5,"ScopeGuard",0],[10,"FnOnce",28],[10,"Strategy",0],[1,"tuple"],[5,"Formatter",29],[8,"Result",29],[10,"Debug",29],[6,"Always",0],[1,"bool"],[6,"Result",30],[5,"TypeId",31]],"b":[]}],\
["smallvec",{"doc":"Small vectors in various sizes. These store a certain …","t":"PKPGFFRFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNQNNNNMNNNNNNNNNNNNNNNNNNO","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[137,"smallvec::CollectionAllocErr"],[138,"core::clone"],[139,"core::cmp"],[140,"core::ops::function"],[141,"core::ops::range"],[142,"core::iter::traits::collect"],[143,"core::fmt"],[144,"core::fmt"],[145,"core::alloc::layout"],[146,"core::mem::maybe_uninit"],[147,"core::hash"],[148,"core::slice::index"],[149,"alloc::boxed"],[150,"core::result"],[151,"core::option"],[152,"alloc::string"],[153,"core::any"]],"d":["The allocator return an error","Types that can be used as the backing store for a <code>SmallVec</code>.","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the <code>SmallVec</code> into an <code>A</code> if possible. Otherwise …","","","","","","Convert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[18,0,18,0,0,0,3,0,0,1,1,1,1,6,1,1,1,6,13,1,1,6,18,13,1,1,6,18,1,1,1,6,1,1,6,1,1,1,1,1,1,1,1,13,1,6,1,1,1,13,1,6,18,18,13,1,1,1,1,6,18,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,1,6,18,1,1,13,1,1,1,6,1,1,13,1,1,13,6,13,6,1,1,1,1,1,1,1,1,1,1,1,1,3,13,6,0,1,1,1,6,27,18,1,13,1,6,18,1,13,1,6,18,1,1,13,1,6,18,1,30],"f":[0,0,0,0,0,0,0,0,0,[[[1,[-1]],[1,[-2]]],2,3,[[3,[],[[4,[]]]]]],[[[1,[-1]]],5,3],[[[1,[-1]]],[],3],[[[1,[-1]]],5,3],[[[6,[-1]]],5,3],[[[1,[-1]]],[],3],[[[1,[-1]]],5,3],[[[1,[-1]]],5,3],[[[6,[-1]]],5,3],[-1,-2,[],[]],[[[1,[-1]]],5,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],5,3],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],7,3],[[[1,[-1]]],2,3],[[[1,[-1]]],[[1,[-1]]],3],[[[6,[-1]]],[[6,[-1]]],[3,8]],[[[1,[-1]],[1,[-1]]],2,3],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[1,[-1]],[1,[-1]]],9,3],[[[1,[-1]]],2,3],[[[1,[-1]],-2],2,3,[[12,[],[[10,[11]]]]]],[[[1,[-1]],-3],2,3,[],[[12,[],[[10,[-2]]]]]],[[],[[1,[-1]]],3],[[[1,[-1]]],5,3],[[[1,[-1]]],5,3],[[[1,[-1]],-2],[[13,[-1]]],3,[[14,[7]]]],[[[13,[-1]]],2,3],[[[1,[-1]]],2,3],[[[6,[-1]]],2,3],[[[1,[-1]],[1,[-2]]],11,3,3],[[[1,[-1]],-2],2,3,[[15,[],[[4,[]]]]]],[[[1,[-1]],5],2,3],[[[13,[-1]],16],17,3],[[[1,[-1]],16],17,3],[[[6,[-1]],16],17,3],[[18,16],17],[[18,16],17],[-1,-1,[]],[-1,-1,[]],[19,[[1,[-1]]],3],[-1,[[1,[-1]]],3],[5,[[1,[-1]]],3],[-1,-1,[]],[20,18],[-1,-1,[]],[-1,[[1,[-1]]],3],[[-1,7],[[1,[-1]]],3],[[[21,[-1]],7],[[1,[-1]]],3],[7,[[1,[-1]]],3],[-1,[[1,[-2]]],[[15,[],[[4,[]]]]],3],[[7,7],[[1,[-1]]],3],[5,[[1,[-1]]],3],[19,[[1,[-1]]],3],[[[1,[-1]],7],2,3],[[[1,[-1]],-2],2,3,22],[[[1,[-1]],-2],[],3,[[23,[5]]]],[[[1,[-1]],-2],[],3,[[23,[5]]]],[[[1,[-1]]],7,3],[[[1,[-1]],7],2,3],[[[1,[-1]],7,5],2,3],[[[1,[-1]],7,-2],2,3,[[15,[],[[4,[]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[24,[5]]],3],[[[1,[-1]]],[[25,[-1,[1,[-1]]]]],3],[-1,-2,[],[]],[[[1,[-1]]],-2,3,[]],[[[1,[-1]]],-2,3,[]],[[[1,[-1]]],-2,3,[]],[-1,-2,[],[]],[[[1,[-1]]],19,3],[[[1,[-1]]],11,3],[[[13,[-1]]],7,3],[[[1,[-1]]],7,3],[[],[[1,[-1]]],3],[[[13,[-1]]],26,3],[[[6,[-1]]],26,3],[[[13,[-1]]],26,3],[[[6,[-1]]],26,3],[[[1,[-1]],[1,[-1]]],[[26,[9]]],3],[[[1,[-1]]],26,3],[[[1,[-1]]],2,3],[[[1,[-1]],7],[],3],[[[1,[-1]],7],2,3],[[[1,[-1]],7],2,3],[[[1,[-1]],7],2,3],[[[1,[-1]],7,-2],2,3,[[12,[],[[10,[]]]]]],[[[1,[-1]],-2],2,3,[[12,[],[[10,[11]]]]]],[[[1,[-1]],-2],2,3,[[12,[],[[10,[11]]]]]],[[[1,[-1]],7],2,3],[[[1,[-1]]],2,3],[[],7],[[[13,[-1]]],[[2,[7,[26,[7]]]]],3],[[[6,[-1]]],[[2,[7,[26,[7]]]]],3],0,[[[1,[-1]]],11,3],[[[1,[-1]],7],[],3],[-1,-2,[],[]],[-1,-2,[],[]],[27,[[1,[-1]]],3],[-1,28,[]],[[[1,[-1]],7],2,3],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[[[1,[-1]],7],[[25,[2,18]]],3],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[[[1,[-1]],7],[[25,[2,18]]],3],[[[1,[-1]],7],[[25,[2,18]]],3],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[7,[[1,[-1]]],3],0],"c":[],"p":[[5,"SmallVec",0],[1,"tuple"],[10,"Array",0],[17,"Item"],[1,"slice"],[5,"IntoIter",0],[1,"usize"],[10,"Clone",138],[6,"Ordering",139],[17,"Output"],[1,"bool"],[10,"FnMut",140],[5,"Drain",0],[10,"RangeBounds",141],[10,"IntoIterator",142],[5,"Formatter",143],[8,"Result",143],[6,"CollectionAllocErr",0],[5,"Vec",144],[8,"LayoutErr",145],[20,"MaybeUninit",146],[10,"Hasher",147],[10,"SliceIndex",148],[5,"Box",149],[6,"Result",150],[6,"Option",151],[10,"ToSmallVec",0],[5,"String",152],[5,"TypeId",153],[15,"AllocErr",137]],"b":[[52,"impl-Debug-for-CollectionAllocErr"],[53,"impl-Display-for-CollectionAllocErr"],[56,"impl-From%3CVec%3C%3CA+as+Array%3E::Item%3E%3E-for-SmallVec%3CA%3E"],[57,"impl-From%3CA%3E-for-SmallVec%3CA%3E"],[58,"impl-From%3C%26%5B%3CA+as+Array%3E::Item%5D%3E-for-SmallVec%3CA%3E"],[85,"impl-IntoIterator-for-%26SmallVec%3CA%3E"],[86,"impl-IntoIterator-for-SmallVec%3CA%3E"],[87,"impl-IntoIterator-for-%26mut+SmallVec%3CA%3E"]]}],\
["spin",{"doc":"This crate provides spin-based versions of the primitives …","t":"IIIEIEIEIIECCCCCCCFFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNIIIIIIFFEENNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTFNNNNNNNNNNNNNNNNNNNNNNNNNNFKFNNNNNNNNMNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Barrier","Lazy","Mutex","MutexGuard","Once","RelaxStrategy","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","Spin","barrier","lazy","lock_api","mutex","once","relax","rwlock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","as_mut_ptr","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Mutex","MutexGuard","SpinMutex","SpinMutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","SpinMutex","SpinMutexGuard","as_mut_ptr","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","INIT","Once","as_mut_ptr","borrow","borrow_mut","call_once","default","drop","fmt","from","from","from","get","get_mut","get_mut_unchecked","get_unchecked","initialized","into","into_inner_unchecked","is_completed","new","poll","try_call_once","try_from","try_into","try_into_inner","type_id","wait","Loop","RelaxStrategy","Spin","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","as_mut_ptr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","is_locked","leak","leak","leak","lock_exclusive","lock_shared","lock_upgradable","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock_exclusive","try_lock_shared","try_lock_upgradable","try_read","try_upgrade","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","upgrade","upgradeable_read","write","writer_count"],"q":[[0,"spin"],[18,"spin::barrier"],[37,"spin::lazy"],[51,"spin::lock_api"],[57,"spin::mutex"],[96,"spin::mutex::spin"],[134,"spin::once"],[162,"spin::relax"],[182,"spin::rwlock"],[266,"core::result"],[267,"core::any"],[268,"core::default"],[269,"core::ops::function"],[270,"core::fmt"],[271,"core::fmt"],[272,"core::fmt"]],"d":["A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See …","A primitive that synchronizes the execution of multiple …","","A primitive that provides lazy one-time initialization. …","","A lock that provides data access to either one writer or …","","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See …","","Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Spin synchronisation primitives, but compatible with …","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","Strategies that determine the behaviour of locks when …","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","","","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible with …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides immutable data access but can be …","A guard that provides mutable data access (compatible with …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","","","","","","","","","","","","","Force unlock this <code>Mutex</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>Mutex</code> and returns a guard that permits access to …","Creates a new <code>Mutex</code> wrapping the supplied data.","A naïve spinning mutex.","","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Returns a mutable pointer to the underlying data.","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","Force unlock this <code>SpinMutex</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","Returns <code>true</code> if the lock is currently held.","","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>SpinMutex</code> and returns a guard that permits …","Creates a new <code>SpinMutex</code> wrapping the supplied data.","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","Retrieve a pointer to the inner data.","","","Performs an initialization routine once and only once. The …","","","","","Returns the argument unchanged.","","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code> …","Returns a mutable reference to the inner value","Returns a reference to the inner value on the unchecked …","Creates a new initialized <code>Once</code>.","Calls <code>U::from(self)</code>.","Returns a the inner value if the <code>Once</code> has been initialized.","Checks whether the value has been initialized.","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","This method is similar to <code>call_once</code>, but allows the given …","","","Returns a the inner value if the <code>Once</code> has been initialized.","","Spins until the <code>Once</code> contains a value.","A strategy that rapidly spins, without telling the CPU to …","A trait implemented by spinning relax strategies.","A strategy that rapidly spins while informing the CPU that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform the relaxing operation during a period of …","","","","","","","","","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","Returns a mutable pointer to the underying data.","","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>RwLock</code>, returning the underlying data.","","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","","","","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Attempt to acquire this lock with shared read access.","","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,1,4,1,4,1,1,4,4,1,4,1,4,1,4,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,15,17,15,17,15,17,17,15,17,17,15,15,15,15,17,15,15,17,15,15,15,17,15,15,15,0,15,17,15,17,15,15,15,17,15,0,0,22,22,23,22,23,22,23,23,23,22,23,23,22,22,22,22,23,22,22,23,22,22,22,23,22,22,22,22,23,22,23,22,22,22,23,22,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,29,30,29,30,29,30,29,30,7,29,30,29,30,29,30,29,30,0,0,0,0,25,25,26,27,28,25,26,27,28,25,26,27,28,27,25,27,28,27,26,27,28,25,26,26,27,27,28,28,25,25,25,25,25,26,27,28,25,25,26,27,28,25,25,26,27,28,25,25,25,25,25,25,25,26,27,28,25,26,27,28,25,25,25,25,25,28,25,25,25,26,27,28,25,25,25,25,28,25,25,25],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[3,[[4,[-1]]],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[[[4,[-1]]],1,7],0,[[[8,[-1,-2,-3]]],[],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[8,[-1,-2]]],9,[]],[[[8,[-1,-2,-3]]],-1,[],[[11,[],[[10,[-1]]]]],7],[[[8,[-1,-2,-3]],12],13,14,[],[]],[[[8,[-1,-2,-3]]],-1,[],[[11,[],[[10,[-1]]]]],7],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2,-1,-3]]],[],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[15,[-1,-2]]],[16,9],[]],[[[17,[-1]]],-1,16],[[[17,[-1]]],-1,16],[[[15,[-1,-2]],12],13,[16,14],[]],[[[17,[-1]],12],13,[16,18]],[[[17,[-1]],12],13,[16,14]],[[[15,[-1,-2]]],19,16,[]],[-1,[[15,[-1,-2]]],[],[]],[-1,-1,[]],[20,-1,[]],[-1,-1,[]],[[[15,[-1,-2]]],-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1,-2]]],-1,[],[]],[[[15,[19,-1]]],2,7],[[[15,[-1,-2]]],2,16,[]],[[[17,[-1]]],-1,16],[[[15,[19,-1]]],19,7],[[[15,[-1,-2]]],[[17,[-1]]],16,7],[-1,[[15,[-1,-2]]],[],[]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[15,[19,-1]]],2,7],[[[15,[-1,-2]]],[[21,[[17,[-1]]]]],16,[]],[-1,6,[]],[-1,6,[]],[[[15,[19,-1]]],19,7],0,0,[[[22,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[22,[-1,-2]]],[16,9],[]],[[[23,[-1]]],-1,16],[[[23,[-1]]],-1,16],[[[23,[-1]]],19,16],[[[22,[-1,-2]],12],13,[16,14],[]],[[[23,[-1]],12],13,[16,18]],[[[23,[-1]],12],13,[16,14]],[[[22,[-1,-2]]],19,16,[]],[20,-1,[]],[-1,-1,[]],[-1,[[22,[-1,-2]]],[],[]],[-1,-1,[]],[[[22,[-1,-2]]],-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1,-2]]],-1,[],[]],[[[22,[-1,-2]]],2,16,[]],[[[22,[19,-1]]],2,7],[[[23,[-1]]],-1,16],[[[22,[19,-1]]],19,7],[[[22,[-1,-2]]],[[23,[-1]]],16,7],[-1,[[22,[-1,-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[22,[-1,-2]]],[[21,[[23,[-1]]]]],16,[]],[[[22,[19,-1]]],2,7],[-1,6,[]],[-1,6,[]],[[[22,[19,-1]]],19,7],0,0,[[[24,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1,-2]],-3],-1,[],7,[[11,[],[[10,[-1]]]]]],[[],[[24,[-1,-2]]],[],[]],[[[24,[-1,-2]]],19,[],[]],[[[24,[-1,-2]],12],13,14,[]],[-1,[[24,[-1,-2]]],[],[]],[-1,-1,[]],[20,-1,[]],[[[24,[-1,-2]]],[[21,[-1]]],[],[]],[[[24,[-1,-2]]],[[21,[-1]]],[],[]],[[[24,[-1,-2]]],-1,[],[]],[[[24,[-1,-2]]],-1,[],[]],[-1,[[24,[-1,-2]]],[],[]],[-1,-2,[],[]],[[[24,[-1,-2]]],-1,[],[]],[[[24,[-1,-2]]],2,[],[]],[[],[[24,[-1,-2]]],[],[]],[[[24,[-1,-2]]],[[21,[-1]]],[],7],[[[24,[-1,-2]],-4],[[5,[-1,-3]]],[],7,[],[[11,[],[[10,[[5,[-1,-3]]]]]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[24,[-1,-2]]],[[21,[-1]]],[],[]],[-1,6,[]],[[[24,[-1,-2]]],-1,[],7],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],19],[[],19],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],0,0,0,0,[[[25,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[25,[-1,-2]]],[16,9],[]],[[[26,[-1]]],-1,16],[[[27,[-1,-2]]],-1,16,[]],[[[28,[-1,-2]]],-1,16,[]],[[[27,[-1,-2]]],-1,16,[]],[[[25,[19,-1]]],19,7],[[[27,[-1,-2]]],[[26,[-1]]],16,[]],[[[28,[-1,-2]]],[[26,[-1]]],16,[]],[[[27,[-1,-2]]],[[28,[-1,-2]]],16,[]],[[[26,[-1]]],19,16],[[[27,[-1,-2]]],19,16,[]],[[[28,[-1,-2]]],19,16,[]],[[[25,[-1,-2]],12],13,[16,14],[]],[[[26,[-1]],12],13,[16,14]],[[[26,[-1]],12],13,[16,18]],[[[27,[-1,-2]],12],13,[16,18],[]],[[[27,[-1,-2]],12],13,[16,14],[]],[[[28,[-1,-2]],12],13,[16,18],[]],[[[28,[-1,-2]],12],13,[16,14],[]],[[[25,[-1,-2]]],19,16,[]],[[[25,[-1,-2]]],19,16,[]],[-1,-1,[]],[-1,[[25,[-1,-2]]],[],[]],[20,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[25,[-1,-2]]],-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,-2]]],-1,[],[]],[[[25,[19,-1]]],2,7],[[[26,[-1]]],-1,16],[[[27,[-1,-2]]],-1,16,[]],[[[28,[-1,-2]]],-1,16,[]],[[[25,[19,-1]]],19,7],[[[25,[19,-1]]],19,7],[[[25,[19,-1]]],19,7],[-1,[[25,[-1,-2]]],[],[]],[[[25,[-1,-2]]],[[26,[-1]]],16,7],[[[25,[-1,-2]]],3,16,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[25,[19,-1]]],2,7],[[[25,[19,-1]]],2,7],[[[25,[19,-1]]],2,7],[[[25,[-1,-2]]],[[21,[[26,[-1]]]]],16,[]],[[[25,[19,-1]]],2,7],[[[28,[-1,-2]]],[[5,[[27,[-1,-2]],[28,[-1,-2]]]]],16,[]],[[[25,[-1,-2]]],[[21,[[28,[-1,-2]]]]],16,[]],[[[25,[-1,-2]]],[[21,[[27,[-1,-2]]]]],16,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[[[25,[19,-1]]],19,7],[[[25,[19,-1]]],19,7],[[[25,[19,-1]]],19,7],[[[25,[19,-1]]],19,7],[[[28,[-1,-2]]],[[27,[-1,-2]]],16,7],[[[25,[-1,-2]]],[[28,[-1,-2]]],16,7],[[[25,[-1,-2]]],[[27,[-1,-2]]],16,7],[[[25,[-1,-2]]],3,16,[]]],"c":[],"p":[[5,"BarrierWaitResult",18],[1,"bool"],[1,"usize"],[5,"Barrier",18],[6,"Result",266],[5,"TypeId",267],[10,"RelaxStrategy",162],[5,"Lazy",37],[10,"Default",268],[17,"Output"],[10,"FnOnce",269],[5,"Formatter",270],[8,"Result",270],[10,"Debug",270],[5,"Mutex",57],[10,"Sized",271],[5,"MutexGuard",57],[10,"Display",270],[1,"tuple"],[1,"never"],[6,"Option",272],[5,"SpinMutex",96],[5,"SpinMutexGuard",96],[5,"Once",134],[5,"RwLock",182],[5,"RwLockReadGuard",182],[5,"RwLockWriteGuard",182],[5,"RwLockUpgradableGuard",182],[5,"Spin",162],[5,"Loop",162]],"b":[[69,"impl-Display-for-MutexGuard%3C\'a,+T%3E"],[70,"impl-Debug-for-MutexGuard%3C\'a,+T%3E"],[80,"impl-RawMutex-for-Mutex%3C(),+R%3E"],[81,"impl-Mutex%3CT,+R%3E"],[83,"impl-RawMutex-for-Mutex%3C(),+R%3E"],[84,"impl-Mutex%3CT,+R%3E"],[91,"impl-RawMutex-for-Mutex%3C(),+R%3E"],[92,"impl-Mutex%3CT,+R%3E"],[108,"impl-Display-for-SpinMutexGuard%3C\'a,+T%3E"],[109,"impl-Debug-for-SpinMutexGuard%3C\'a,+T%3E"],[119,"impl-SpinMutex%3CT,+R%3E"],[120,"impl-RawMutex-for-SpinMutex%3C(),+R%3E"],[122,"impl-RawMutex-for-SpinMutex%3C(),+R%3E"],[123,"impl-SpinMutex%3CT,+R%3E"],[129,"impl-SpinMutex%3CT,+R%3E"],[130,"impl-RawMutex-for-SpinMutex%3C(),+R%3E"],[208,"impl-Debug-for-RwLockReadGuard%3C\'rwlock,+T%3E"],[209,"impl-Display-for-RwLockReadGuard%3C\'rwlock,+T%3E"],[210,"impl-Display-for-RwLockWriteGuard%3C\'rwlock,+T,+R%3E"],[211,"impl-Debug-for-RwLockWriteGuard%3C\'rwlock,+T,+R%3E"],[212,"impl-Display-for-RwLockUpgradableGuard%3C\'rwlock,+T,+R%3E"],[213,"impl-Debug-for-RwLockUpgradableGuard%3C\'rwlock,+T,+R%3E"]]}],\
["spinning_top",{"doc":"Provides a simple spinlock based on the abstractions …","t":"IFIINNHNNNNNENNNNN","n":["MappedSpinlockGuard","RawSpinlock","Spinlock","SpinlockGuard","borrow","borrow_mut","const_spinlock","fmt","from","into","is_locked","lock","lock_api","try_from","try_into","try_lock","type_id","unlock"],"q":[[0,"spinning_top"],[18,"core::fmt"],[19,"core::fmt"],[20,"core::any"]],"d":["A RAII guard returned by <code>SpinlockGuard::map</code>.","Provides mutual exclusion based on spinning on an …","A mutual exclusion (Mutex) type based on busy-waiting.","A RAII guard that frees the spinlock when it goes out of …","","","Create an unlocked <code>Spinlock</code> in a <code>const</code> context.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","The spinlock implemenation is based on the abstractions …","","","","",""],"i":[0,0,0,0,2,2,0,2,2,2,2,2,0,2,2,2,2,2],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-1]]],[]],[[2,3],4],[-1,-1,[]],[-1,-2,[],[]],[2,5],[2,6],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[2,5],[-1,8,[]],[2,6]],"c":[],"p":[[8,"Spinlock",0],[5,"RawSpinlock",0],[5,"Formatter",18],[8,"Result",18],[1,"bool"],[1,"tuple"],[6,"Result",19],[5,"TypeId",20]],"b":[]}],\
["static_assertions",{"doc":"Banner","t":"QQQQQQQQQQQQQQQQQQQ","n":["assert_cfg","assert_eq_align","assert_eq_size","assert_eq_size_ptr","assert_eq_size_val","assert_fields","assert_impl_all","assert_impl_any","assert_impl_one","assert_not_impl_all","assert_not_impl_any","assert_obj_safe","assert_trait_sub_all","assert_trait_super_all","assert_type_eq_all","assert_type_ne_all","const_assert","const_assert_eq","const_assert_ne"],"q":[[0,"static_assertions"]],"d":["Asserts that a given configuration is set.","Asserts that types are equal in alignment.","Asserts that types are equal in size.","Asserts that values pointed to are equal in size.","Asserts that values are equal in size.","Asserts that the type has the given fields.","Asserts that the type implements <em>all</em> of the given traits.","Asserts that the type implements <em>any</em> of the given traits.","Asserts that the type implements exactly one in a set of …","Asserts that the type does <strong>not</strong> implement <em>all</em> of the given …","Asserts that the type does <strong>not</strong> implement <em>any</em> of the given …","Asserts that the traits support dynamic dispatch (…","Asserts that the trait is a child of all of the other …","Asserts that the trait is a parent of all of the other …","Asserts that <em>all</em> types in a list are equal to each other.","Asserts that <em>all</em> types are <strong>not</strong> equal to each other.","Asserts that constant expressions evaluate to <code>true</code>.","Asserts that constants are equal in value.","Asserts that constants are <strong>not</strong> equal in value."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[],"b":[]}],\
["tap",{"doc":"<code>tap</code> – Syntactical Plumb-Lines","t":"KRRKKKKKRCNCNNNNNNNNNCCNNNNNNNNNNMNMNNNMNMNMNNNNNMNMNNKKNNKNNNNNNNNNKRRKKKKKRNNNNNNNNNNNNNNNNNNNNMNMNNNMNMNMNNNNNMNMNNRRKKKRNNNNNNNNNNMNMNNNMNMNMNNNNNMNMN","n":["Conv","Err","Ok","Pipe","Tap","TapFallible","TapOptional","TryConv","Val","conv","conv","pipe","pipe","pipe_as_mut","pipe_as_ref","pipe_borrow","pipe_borrow_mut","pipe_deref","pipe_deref_mut","pipe_ref","pipe_ref_mut","prelude","tap","tap","tap_borrow","tap_borrow_dbg","tap_borrow_mut","tap_borrow_mut_dbg","tap_dbg","tap_deref","tap_deref_dbg","tap_deref_mut","tap_deref_mut_dbg","tap_err","tap_err_dbg","tap_err_mut","tap_err_mut_dbg","tap_mut","tap_mut_dbg","tap_none","tap_none_dbg","tap_ok","tap_ok_dbg","tap_ok_mut","tap_ok_mut_dbg","tap_ref","tap_ref_dbg","tap_ref_mut","tap_ref_mut_dbg","tap_some","tap_some_dbg","tap_some_mut","tap_some_mut_dbg","try_conv","Conv","TryConv","conv","try_conv","Pipe","pipe","pipe_as_mut","pipe_as_ref","pipe_borrow","pipe_borrow_mut","pipe_deref","pipe_deref_mut","pipe_ref","pipe_ref_mut","Conv","Err","Ok","Pipe","Tap","TapFallible","TapOptional","TryConv","Val","conv","pipe","pipe_as_mut","pipe_as_ref","pipe_borrow","pipe_borrow_mut","pipe_deref","pipe_deref_mut","pipe_ref","pipe_ref_mut","tap","tap_borrow","tap_borrow_dbg","tap_borrow_mut","tap_borrow_mut_dbg","tap_dbg","tap_deref","tap_deref_dbg","tap_deref_mut","tap_deref_mut_dbg","tap_err","tap_err_dbg","tap_err_mut","tap_err_mut_dbg","tap_mut","tap_mut_dbg","tap_none","tap_none_dbg","tap_ok","tap_ok_dbg","tap_ok_mut","tap_ok_mut_dbg","tap_ref","tap_ref_dbg","tap_ref_mut","tap_ref_mut_dbg","tap_some","tap_some_dbg","tap_some_mut","tap_some_mut_dbg","try_conv","Err","Ok","Tap","TapFallible","TapOptional","Val","tap","tap_borrow","tap_borrow_dbg","tap_borrow_mut","tap_borrow_mut_dbg","tap_dbg","tap_deref","tap_deref_dbg","tap_deref_mut","tap_deref_mut_dbg","tap_err","tap_err_dbg","tap_err_mut","tap_err_mut_dbg","tap_mut","tap_mut_dbg","tap_none","tap_none_dbg","tap_ok","tap_ok_dbg","tap_ok_mut","tap_ok_mut_dbg","tap_ref","tap_ref_dbg","tap_ref_mut","tap_ref_mut_dbg","tap_some","tap_some_dbg","tap_some_mut","tap_some_mut_dbg"],"q":[[0,"tap"],[54,"tap::conv"],[58,"tap::pipe"],[68,"tap::prelude"],[118,"tap::tap"],[154,"core::marker"],[155,"core::ops::function"],[156,"core::result"]],"d":["Wraps <code>Into::&lt;T&gt;::into</code> as a method that can be placed in …","The interior type used to indicate a failed construction.","The interior type used to indicate a successful …","Provides universal suffix-position call syntax for any …","Point-free value inspection and modification.","Fallible tapping, conditional on the optional success of …","Optional tapping, conditional on the optional presence of …","Wraps <code>TryInto::&lt;T&gt;::try_into</code> as a method that can be …","The interior type that the container may or may not carry.","Method-Directed Type Conversion","Converts <code>self</code> into <code>T</code> using <code>Into&lt;T&gt;</code>.","Universal Suffix Calls","Pipes by value. This is generally the method you want to …","Mutably borrows <code>self</code>, then passes <code>self.as_mut()</code> into the …","Borrows <code>self</code>, then passes <code>self.as_ref()</code> into the pipe …","Borrows <code>self</code>, then passes <code>self.borrow()</code> into the pipe …","Mutably borrows <code>self</code>, then passes <code>self.borrow_mut()</code> into …","Borrows <code>self</code>, then passes <code>self.deref()</code> into the pipe …","Mutably borrows <code>self</code>, then passes <code>self.deref_mut()</code> into …","Borrows <code>self</code> and passes that borrow into the pipe function.","Mutably borrows <code>self</code> and passes that borrow into the pipe …","Reëxports all traits in one place, for easy import.","Point-Free Inspection","Immutable access to a value.","Immutable access to the <code>Borrow&lt;B&gt;</code> of a value.","Calls <code>.tap_borrow()</code> only in debug builds, and is erased in …","Mutable access to the <code>BorrowMut&lt;B&gt;</code> of a value.","Calls <code>.tap_borrow_mut()</code> only in debug builds, and is …","Calls <code>.tap()</code> only in debug builds, and is erased in …","Immutable access to the <code>Deref::Target</code> of a value.","Calls <code>.tap_deref()</code> only in debug builds, and is erased in …","Mutable access to the <code>Deref::Target</code> of a value.","Calls <code>.tap_deref_mut()</code> only in debug builds, and is erased …","Immutably accesses an interior failure value.","Calls <code>.tap_err()</code> only in debug builds, and is erased in …","Mutably accesses an interior failure value.","Calls <code>.tap_err_mut()</code> only in debug builds, and is erased …","Mutable access to a value.","Calls <code>.tap_mut()</code> only in debug builds, and is erased in …","Runs an effect function when the container is empty.","Calls <code>.tap_none()</code> only in debug builds, and is erased in …","Immutably accesses an interior success value.","Calls <code>.tap_ok()</code> only in debug builds, and is erased in …","Mutably accesses an interior success value.","Calls <code>.tap_ok_mut()</code> only in debug builds, and is erased in …","Immutable access to the <code>AsRef&lt;R&gt;</code> view of a value.","Calls <code>.tap_ref()</code> only in debug builds, and is erased in …","Mutable access to the <code>AsMut&lt;R&gt;</code> view of a value.","Calls <code>.tap_ref_mut()</code> only in debug builds, and is erased …","Immutabily accesses an interior value only when it is …","Calls <code>.tap_some()</code> only in debug builds, and is erased in …","Mutably accesses an interor value only when it is present.","Calls <code>.tap_some_mut()</code> only in debug builds, and is erased …","Attempts to convert <code>self</code> into <code>T</code> using <code>TryInto&lt;T&gt;</code>.","Wraps <code>Into::&lt;T&gt;::into</code> as a method that can be placed in …","Wraps <code>TryInto::&lt;T&gt;::try_into</code> as a method that can be …","Converts <code>self</code> into <code>T</code> using <code>Into&lt;T&gt;</code>.","Attempts to convert <code>self</code> into <code>T</code> using <code>TryInto&lt;T&gt;</code>.","Provides universal suffix-position call syntax for any …","Pipes by value. This is generally the method you want to …","Mutably borrows <code>self</code>, then passes <code>self.as_mut()</code> into the …","Borrows <code>self</code>, then passes <code>self.as_ref()</code> into the pipe …","Borrows <code>self</code>, then passes <code>self.borrow()</code> into the pipe …","Mutably borrows <code>self</code>, then passes <code>self.borrow_mut()</code> into …","Borrows <code>self</code>, then passes <code>self.deref()</code> into the pipe …","Mutably borrows <code>self</code>, then passes <code>self.deref_mut()</code> into …","Borrows <code>self</code> and passes that borrow into the pipe function.","Mutably borrows <code>self</code> and passes that borrow into the pipe …","Wraps <code>Into::&lt;T&gt;::into</code> as a method that can be placed in …","The interior type used to indicate a failed construction.","The interior type used to indicate a successful …","Provides universal suffix-position call syntax for any …","Point-free value inspection and modification.","Fallible tapping, conditional on the optional success of …","Optional tapping, conditional on the optional presence of …","Wraps <code>TryInto::&lt;T&gt;::try_into</code> as a method that can be …","The interior type that the container may or may not carry.","Converts <code>self</code> into <code>T</code> using <code>Into&lt;T&gt;</code>.","Pipes by value. This is generally the method you want to …","Mutably borrows <code>self</code>, then passes <code>self.as_mut()</code> into the …","Borrows <code>self</code>, then passes <code>self.as_ref()</code> into the pipe …","Borrows <code>self</code>, then passes <code>self.borrow()</code> into the pipe …","Mutably borrows <code>self</code>, then passes <code>self.borrow_mut()</code> into …","Borrows <code>self</code>, then passes <code>self.deref()</code> into the pipe …","Mutably borrows <code>self</code>, then passes <code>self.deref_mut()</code> into …","Borrows <code>self</code> and passes that borrow into the pipe function.","Mutably borrows <code>self</code> and passes that borrow into the pipe …","Immutable access to a value.","Immutable access to the <code>Borrow&lt;B&gt;</code> of a value.","Calls <code>.tap_borrow()</code> only in debug builds, and is erased in …","Mutable access to the <code>BorrowMut&lt;B&gt;</code> of a value.","Calls <code>.tap_borrow_mut()</code> only in debug builds, and is …","Calls <code>.tap()</code> only in debug builds, and is erased in …","Immutable access to the <code>Deref::Target</code> of a value.","Calls <code>.tap_deref()</code> only in debug builds, and is erased in …","Mutable access to the <code>Deref::Target</code> of a value.","Calls <code>.tap_deref_mut()</code> only in debug builds, and is erased …","Immutably accesses an interior failure value.","Calls <code>.tap_err()</code> only in debug builds, and is erased in …","Mutably accesses an interior failure value.","Calls <code>.tap_err_mut()</code> only in debug builds, and is erased …","Mutable access to a value.","Calls <code>.tap_mut()</code> only in debug builds, and is erased in …","Runs an effect function when the container is empty.","Calls <code>.tap_none()</code> only in debug builds, and is erased in …","Immutably accesses an interior success value.","Calls <code>.tap_ok()</code> only in debug builds, and is erased in …","Mutably accesses an interior success value.","Calls <code>.tap_ok_mut()</code> only in debug builds, and is erased in …","Immutable access to the <code>AsRef&lt;R&gt;</code> view of a value.","Calls <code>.tap_ref()</code> only in debug builds, and is erased in …","Mutable access to the <code>AsMut&lt;R&gt;</code> view of a value.","Calls <code>.tap_ref_mut()</code> only in debug builds, and is erased …","Immutabily accesses an interior value only when it is …","Calls <code>.tap_some()</code> only in debug builds, and is erased in …","Mutably accesses an interor value only when it is present.","Calls <code>.tap_some_mut()</code> only in debug builds, and is erased …","Attempts to convert <code>self</code> into <code>T</code> using <code>TryInto&lt;T&gt;</code>.","The interior type used to indicate a failed construction.","The interior type used to indicate a successful …","Point-free value inspection and modification.","Fallible tapping, conditional on the optional success of …","Optional tapping, conditional on the optional presence of …","The interior type that the container may or may not carry.","Immutable access to a value.","Immutable access to the <code>Borrow&lt;B&gt;</code> of a value.","Calls <code>.tap_borrow()</code> only in debug builds, and is erased in …","Mutable access to the <code>BorrowMut&lt;B&gt;</code> of a value.","Calls <code>.tap_borrow_mut()</code> only in debug builds, and is …","Calls <code>.tap()</code> only in debug builds, and is erased in …","Immutable access to the <code>Deref::Target</code> of a value.","Calls <code>.tap_deref()</code> only in debug builds, and is erased in …","Mutable access to the <code>Deref::Target</code> of a value.","Calls <code>.tap_deref_mut()</code> only in debug builds, and is erased …","Immutably accesses an interior failure value.","Calls <code>.tap_err()</code> only in debug builds, and is erased in …","Mutably accesses an interior failure value.","Calls <code>.tap_err_mut()</code> only in debug builds, and is erased …","Mutable access to a value.","Calls <code>.tap_mut()</code> only in debug builds, and is erased in …","Runs an effect function when the container is empty.","Calls <code>.tap_none()</code> only in debug builds, and is erased in …","Immutably accesses an interior success value.","Calls <code>.tap_ok()</code> only in debug builds, and is erased in …","Mutably accesses an interior success value.","Calls <code>.tap_ok_mut()</code> only in debug builds, and is erased in …","Immutable access to the <code>AsRef&lt;R&gt;</code> view of a value.","Calls <code>.tap_ref()</code> only in debug builds, and is erased in …","Mutable access to the <code>AsMut&lt;R&gt;</code> view of a value.","Calls <code>.tap_ref_mut()</code> only in debug builds, and is erased …","Immutabily accesses an interior value only when it is …","Calls <code>.tap_some()</code> only in debug builds, and is erased in …","Mutably accesses an interor value only when it is present.","Calls <code>.tap_some_mut()</code> only in debug builds, and is erased …"],"i":[0,9,9,0,0,0,0,0,11,0,1,0,3,3,3,3,3,3,3,3,3,0,0,6,6,6,6,6,6,6,6,6,6,9,9,9,9,6,6,11,11,9,9,9,9,6,6,6,6,11,11,11,11,12,0,0,1,12,0,3,3,3,3,3,3,3,3,3,0,9,9,0,0,0,0,0,11,1,3,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6,6,6,9,9,9,9,6,6,11,11,9,9,9,9,6,6,6,6,11,11,11,11,12,9,9,0,0,0,11,6,6,6,6,6,6,6,6,6,6,9,9,9,9,6,6,11,11,9,9,9,9,6,6,6,6,11,11,11,11],"f":[0,0,0,0,0,0,0,0,0,0,[1,-1,2],0,[[3,-2],-1,2,[[5,[3],[[4,[-1]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-2],-1,2,[[5,[3],[[4,[-1]]]]]],[[3,-2],-1,2,[[5,[3],[[4,[-1]]]]]],0,0,[[6,-1],6,[[5,[6]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-1],6,[[5,[6]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[6,-1],6,[[5,[6]]]],[[6,-1],6,[[5,[6]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,5],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,5],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[12,[[13,[-1,-2]]],2,[]],0,0,[1,-1,2],[12,[[13,[-1,-2]]],2,[]],0,[[3,-2],-1,2,[[5,[3],[[4,[-1]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-2],-1,2,[[5,[3],[[4,[-1]]]]]],[[3,-2],-1,2,[[5,[3],[[4,[-1]]]]]],0,0,0,0,0,0,0,0,0,[1,-1,2],[[3,-2],-1,2,[[5,[3],[[4,[-1]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-3],-2,2,2,[[5,[-1],[[4,[-2]]]]]],[[3,-2],-1,2,[[5,[3],[[4,[-1]]]]]],[[3,-2],-1,2,[[5,[3],[[4,[-1]]]]]],[[6,-1],6,[[5,[6]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-1],6,[[5,[6]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[6,-1],6,[[5,[6]]]],[[6,-1],6,[[5,[6]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,5],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,5],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[12,[[13,[-1,-2]]],2,[]],0,0,0,0,0,0,[[6,-1],6,[[5,[6]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-1],6,[[5,[6]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-2]]]],[[6,-1],6,[[5,[6]]]],[[6,-1],6,[[5,[6]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,5],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,5],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[[9,[],[[7,[-1]],[8,[-2]]]],-3],[[9,[],[[7,[-1]],[8,[-2]]]]],2,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[6,-2],6,2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]],[[[11,[],[[10,[-1]]]],-2],[[11,[],[[10,[-1]]]]],2,[[5,[-1]]]]],"c":[],"p":[[10,"Conv",0],[10,"Sized",154],[10,"Pipe",0],[17,"Output"],[10,"FnOnce",155],[10,"Tap",0],[17,"Ok"],[17,"Err"],[10,"TapFallible",0],[17,"Val"],[10,"TapOptional",0],[10,"TryConv",0],[6,"Result",156]],"b":[]}],\
["trapframe",{"doc":"","t":"FFFONNNNNNNNNNNNONNNNNOONNNNNNOONNNNOHNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNOONNNNNNNNN","n":["GeneralRegs","TrapFrame","UserContext","_pad","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cs","default","default","default","eq","eq","error_code","error_code","fmt","fmt","fmt","from","from","from","fsbase","general","get_sp","get_syscall_args","get_syscall_num","get_syscall_ret","gsbase","init","into","into","into","r10","r10","r11","r11","r12","r12","r13","r13","r14","r14","r15","r15","r8","r8","r9","r9","rax","rax","rbp","rbp","rbx","rbx","rcx","rcx","rdi","rdi","rdx","rdx","rflags","rflags","rip","rip","rsi","rsi","rsp","rsp","run","set_ip","set_sp","set_syscall_ret","set_tls","to_owned","to_owned","to_owned","trap_num","trap_num","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"trapframe"],[96,"core::fmt"],[97,"core::fmt"],[98,"core::any"]],"d":["General registers","Trap frame of kernel interrupt","User space context","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get stack pointer","Get syscall args","Get number of syscall","Get return value of syscall","","Initialize interrupt handling on x86_64.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Go to user space with the context, and come back when a …","Set instruction pointer","Set stack pointer","Set return value of syscall","Set tls pointer","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,2,3,1,2,3,1,2,3,1,2,3,1,1,2,3,2,3,1,2,1,2,3,1,2,3,3,2,2,2,2,2,3,0,1,2,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,2,2,2,2,2,1,2,3,1,2,1,2,3,1,2,3,1,2,3],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[[],1],[[],2],[[],3],[[2,2],5],[[3,3],5],0,0,[[1,6],7],[[2,6],7],[[3,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[2,8],[2,[[9,[8]]]],[2,8],[2,8],0,[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,4],[[2,8],4],[[2,8],4],[[2,8],4],[[2,8],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]]],"c":[],"p":[[5,"TrapFrame",0],[5,"UserContext",0],[5,"GeneralRegs",0],[1,"tuple"],[1,"bool"],[5,"Formatter",96],[8,"Result",96],[1,"usize"],[1,"array"],[6,"Result",97],[5,"TypeId",98]],"b":[]}],\
["uefi_raw",{"doc":"Raw interface for working with UEFI.","t":"TTTTTTTIITTTTIFTITTTTTTTTTTTTTTTITTFTTTTTITTTTTTTTTNNNNCNNNNNNNNNNNNNNNNQNNNNNNNQNNNCCCNNNNNNNNNNNNFFFTTTTTTTTTTTTTTTTTTTONNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNCCCTTFFFFONNNNNNNNONNOOONNONNNNNNNNNNNNOOOOOOOOOOOOONNNNNNNNNNNNOOFTNNNNNOOONNNTTTTTTTTFFNNNNNNNNNOONNNNNNNNTTTTTTTTTTTTTTFFCNNNNNNNNCONNNNNNNNNNNNNNNNNNOOCOOCNNNNNNTTTTTFTTTTIFTTTFTTTTTFFFTTTTTFTTTTTTTTTTTTTFTTTTTTTTONNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNONNOOOONNNNNNONNNNNNNNOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOONNNNONNOOONNNNNNNNNNNNNNNNNNNNNNOOOOONNOOOONNNNOOOOONNOONNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOONNOOOFNNNNNNNNNOOTTTTTTTTTTTFFTTFFFTONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNONNNNNNNNNNNNNNNNOONOONOOOOONNNNNNNNNNNNNNNNNNNNOTFONNNONNOONNONOOOOOOOONNNTFTFTNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNOOONOONNONNNNONNNNNNNNO","n":["ABORTED","ACCESS_DENIED","ALREADY_STARTED","BAD_BUFFER_SIZE","BUFFER_TOO_SMALL","COMPROMISED_DATA","CRC_ERROR","Char16","Char8","DEVICE_ERROR","END_OF_FILE","END_OF_MEDIA","ERROR_BIT","Event","Guid","HTTP_ERROR","Handle","ICMP_ERROR","INCOMPATIBLE_VERSION","INVALID_LANGUAGE","INVALID_PARAMETER","IP_ADDRESS_CONFLICT","LOAD_ERROR","MEDIA_CHANGED","NOT_FOUND","NOT_READY","NOT_STARTED","NO_MAPPING","NO_MEDIA","NO_RESPONSE","OUT_OF_RESOURCES","PROTOCOL_ERROR","PhysicalAddress","SECURITY_VIOLATION","SUCCESS","Status","TFTP_ERROR","TIMEOUT","UNSUPPORTED","VOLUME_CORRUPTED","VOLUME_FULL","VirtualAddress","WARN_BUFFER_TOO_SMALL","WARN_DELETE_FAILURE","WARN_FILE_SYSTEM","WARN_RESET_REQUIRED","WARN_STALE_DATA","WARN_UNKNOWN_GLYPH","WARN_WRITE_FAILURE","WRITE_PROTECTED","ZERO","borrow","borrow","borrow_mut","borrow_mut","capsule","clock_seq_high_and_reserved","clock_seq_low","clone","clone","cmp","default","eq","eq","fmt","fmt","fmt","fmt","from","from","from_bytes","from_str","guid","hash","into","into","is_error","is_success","is_warning","new","newtype_enum","node","parse_or_panic","partial_cmp","protocol","table","time","time_high_and_version","time_low","time_mid","to_ascii_hex_lower","to_bytes","try_from","try_from","try_into","try_into","try_parse","type_id","type_id","CapsuleBlockDescriptor","CapsuleFlags","CapsuleHeader","INITIATE_RESET","PERSIST_ACROSS_RESET","POPULATE_SYSTEM_TABLE","TYPE_SPECIFIC_BIT_0","TYPE_SPECIFIC_BIT_1","TYPE_SPECIFIC_BIT_10","TYPE_SPECIFIC_BIT_11","TYPE_SPECIFIC_BIT_12","TYPE_SPECIFIC_BIT_13","TYPE_SPECIFIC_BIT_14","TYPE_SPECIFIC_BIT_15","TYPE_SPECIFIC_BIT_2","TYPE_SPECIFIC_BIT_3","TYPE_SPECIFIC_BIT_4","TYPE_SPECIFIC_BIT_5","TYPE_SPECIFIC_BIT_6","TYPE_SPECIFIC_BIT_7","TYPE_SPECIFIC_BIT_8","TYPE_SPECIFIC_BIT_9","address","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capsule_guid","capsule_image_size","clone","clone","clone","cmp","cmp","cmp","complement","contains","default","default","default","difference","empty","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hash","hash","hash","header_size","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","iter","iter_names","length","not","partial_cmp","partial_cmp","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","console","device_path","rng","GUID","GUID","InputKey","SimpleTextInputProtocol","SimpleTextOutputMode","SimpleTextOutputProtocol","attribute","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_screen","clone","clone","cursor_column","cursor_row","cursor_visible","default","default","enable_cursor","eq","eq","fmt","fmt","from","from","from","from","into","into","into","into","max_mode","mode","mode","output_string","query_mode","read_key_stroke","reset","reset","scan_code","set_attribute","set_cursor_position","set_mode","test_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unicode_char","wait_for_key","DevicePathProtocol","GUID","borrow","borrow_mut","fmt","from","into","length","major_type","sub_type","try_from","try_into","type_id","ALGORITHM_RAW","ALGORITHM_SP800_90_CTR_256","ALGORITHM_SP800_90_HASH_256","ALGORITHM_SP800_90_HMAC_256","ALGORITHM_X9_31_3DES","ALGORITHM_X9_31_AES","EMPTY_ALGORITHM","GUID","RngAlgorithmType","RngProtocol","borrow","borrow","borrow_mut","borrow_mut","clone","eq","fmt","from","from","get_info","get_rng","into","into","try_from","try_from","try_into","try_into","type_id","type_id","EFI_1_02","EFI_1_10","EFI_2_00","EFI_2_10","EFI_2_100","EFI_2_20","EFI_2_30","EFI_2_31","EFI_2_40","EFI_2_50","EFI_2_60","EFI_2_70","EFI_2_80","EFI_2_90","Header","Revision","boot","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","configuration","crc","default","default","eq","eq","fmt","fmt","fmt","from","from","hash","hash","into","into","major","minor","new","partial_cmp","partial_cmp","reserved","revision","runtime","signature","size","system","try_from","try_from","try_into","try_into","type_id","type_id","ACPI_NON_VOLATILE","ACPI_RECLAIM","APPLICATION","BOOT_SERVICES_CODE","BOOT_SERVICES_DATA","BootServices","CALLBACK","CONVENTIONAL","CPU_CRYPTO","EXECUTE_PROTECT","EventNotifyFn","EventType","HIGH_LEVEL","ISA_MASK","ISA_VALID","InterfaceType","LOADER_CODE","LOADER_DATA","MMIO","MMIO_PORT_SPACE","MORE_RELIABLE","MemoryAttribute","MemoryDescriptor","MemoryType","NATIVE_INTERFACE","NON_VOLATILE","NOTIFY","NOTIFY_SIGNAL","NOTIFY_WAIT","OpenProtocolInformationEntry","PAL_CODE","PERSISTENT_MEMORY","READ_ONLY","READ_PROTECT","RESERVED","RUNTIME","RUNTIME","RUNTIME_SERVICES_CODE","RUNTIME_SERVICES_DATA","SIGNAL_EXIT_BOOT_SERVICES","SIGNAL_VIRTUAL_ADDRESS_CHANGE","SPECIAL_PURPOSE","TIMER","Tpl","UNCACHABLE_EXPORTED","UNCACHEABLE","UNUSABLE","VERSION","WRITE_BACK","WRITE_COMBINE","WRITE_PROTECT","WRITE_THROUGH","agent_handle","all","all","allocate_pages","allocate_pool","att","attributes","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_crc32","check_event","clone","clone","clone","clone","clone","clone","close_event","close_protocol","cmp","cmp","cmp","cmp","complement","complement","connect_controller","contains","contains","controller_handle","copy_mem","create_event","create_event_ex","custom","default","default","default","difference","difference","disconnect_controller","empty","empty","eq","eq","eq","eq","eq","eq","exit","exit_boot_services","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_pages","free_pool","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","get_memory_map","get_next_monotonic_count","handle_protocol","hash","hash","hash","hash","header","insert","insert","install_configuration_table","install_multiple_protocol_interfaces","install_protocol_interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","load_image","locate_device_path","locate_handle","locate_handle_buffer","locate_protocol","not","not","open_count","open_protocol","open_protocol_information","page_count","partial_cmp","partial_cmp","partial_cmp","partial_cmp","phys_start","protocols_per_handle","raise_tpl","register_protocol_notify","reinstall_protocol_interface","remove","remove","reserved","restore_tpl","set","set","set_mem","set_timer","set_watchdog_timer","signal_event","stall","start_image","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uninstall_multiple_protocol_interfaces","uninstall_protocol_interface","union","union","unload_image","virt_start","wait_for_event","ConfigurationTable","borrow","borrow_mut","eq","fmt","from","into","try_from","try_into","type_id","vendor_guid","vendor_table","APPEND_WRITE","AUTHENTICATED_WRITE_ACCESS","BOOTSERVICE_ACCESS","COLD","ENHANCED_AUTHENTICATED_ACCESS","GLOBAL_VARIABLE","HARDWARE_ERROR_RECORD","IMAGE_SECURITY_DATABASE","NON_VOLATILE","PLATFORM_SPECIFIC","RUNTIME_ACCESS","ResetType","RuntimeServices","SHUTDOWN","TIME_BASED_AUTHENTICATED_WRITE_ACCESS","TimeCapabilities","VariableAttributes","VariableVendor","WARM","accuracy","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","cmp","cmp","complement","contains","convert_pointer","default","default","difference","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","get_next_high_monotonic_count","get_next_variable_name","get_time","get_variable","get_wakeup_time","hash","hash","header","insert","intersection","intersects","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","not","partial_cmp","partial_cmp","query_capsule_capabilities","query_variable_info","remove","reset_system","resolution","set","set_time","set_variable","set_virtual_address_map","set_wakeup_time","sets_to_zero","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","update_capsule","SIGNATURE","SystemTable","boot_services","borrow","borrow_mut","clone","configuration_table","default","eq","firmware_revision","firmware_vendor","fmt","from","header","into","number_of_configuration_table_entries","runtime_services","stderr","stderr_handle","stdin","stdin_handle","stdout","stdout_handle","try_from","try_into","type_id","ADJUST_DAYLIGHT","Daylight","IN_DAYLIGHT","Time","UNSPECIFIED_TIMEZONE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","complement","contains","day","daylight","default","default","difference","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hour","insert","intersection","intersects","into","into","into_iter","invalid","is_all","is_empty","is_valid","iter","iter_names","minute","month","nanosecond","not","pad1","pad2","partial_cmp","remove","second","set","sub","sub_assign","symmetric_difference","time_zone","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","year"],"q":[[0,"uefi_raw"],[99,"uefi_raw::capsule"],[209,"uefi_raw::protocol"],[212,"uefi_raw::protocol::console"],[275,"uefi_raw::protocol::device_path"],[288,"uefi_raw::protocol::rng"],[317,"uefi_raw::table"],[374,"uefi_raw::table::boot"],[650,"uefi_raw::table::configuration"],[662,"uefi_raw::table::runtime"],[794,"uefi_raw::table::system"],[820,"uefi_raw::time"],[903,"core::cmp"],[904,"core::fmt"],[905,"core::fmt"],[906,"core::fmt"],[907,"core::option"],[908,"uguid::error"],[909,"core::any"],[910,"core::iter::traits::collect"],[911,"bitflags::iter"],[912,"bitflags::iter"]],"d":["The operation was aborted.","Access was denied.","The protocol has already been started.","The buffer was not the proper size for the request.","The buffer is not large enough to hold the requested data. …","The security status of the data is unknown or compromised …","A CRC error was detected.","Two-byte character.","One-byte character.","The physical device reported an error while attempting the …","The end of the file was reached.","Beginning or end of media was reached","Bit indicating that an UEFI status code is an error.","Handle to an event structure.","Globally-unique identifier.","A HTTP error occurred during the network operation.","Handle to a UEFI entity (protocol, image, etc).","An ICMP error occurred during the network operation.","The function encountered an internal version that was …","The language specified was invalid.","A parameter was incorrect.","There is an address conflict address allocation","The image failed to load.","The medium in the device has changed since the last access.","The item was not found.","There is no data pending upon return.","The protocol has not been started.","A mapping to a device does not exist.","The device does not contain any medium to perform the …","The server was not found or did not respond to the request.","A resource has run out.","A protocol error occurred during the network operation.","Physical memory address. This is always a 64-bit value, …","The function was not performed due to a security violation.","The operation completed successfully.","UEFI uses status codes in order to report successes, …","A TFTP error occurred during the network operation.","The timeout time expired.","The operation is not supported.","An inconstency was detected on the file system.","There is no more space on the file system.","Virtual memory address. This is always a 64-bit value, …","The resulting buffer was too small, and the data was …","The handle was closed, but the file was not deleted.","The resulting buffer contains UEFI-compliant file system.","The operation will be processed across a system reset.","The data has not been updated within the timeframe set by …","The string contained characters that could not be rendered …","The handle was closed, but the data to the file was not …","The device cannot be written to.","GUID with all fields set to zero.","","","","","UEFI update capsules.","The high field of the clock sequence multiplexed with the …","The low field of the clock sequence.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a GUID from a 16-byte array. No changes to byte …","Parse a GUID from a string, panicking on failure.","Create a <code>Guid</code> from a string at compile time.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the status code indicates an error.","Returns true if status code indicates success.","Returns true if status code indicates a warning.","Create a new GUID.","Interface a C-style enum as an integer newtype.","The spatially unique node identifier.","Parse a GUID from a string, panicking on failure.","","Protocol definitions.","Standard UEFI tables.","Date and time types.","The little-endian high field of the timestamp multiplexed …","The little-endian low field of the timestamp.","The little-endian middle field of the timestamp.","Convert to a lower-case hex ASCII string.","Convert to a 16-byte array.","","","","","Parse a GUID from a string.","","","Descriptor that defines a scatter-gather list for passing …","Capsule update flags.","Common header at the start of a capsule.","Trigger a system reset after passing the capsule to the …","Indicates the firmware should process the capsule after …","Causes the contents of the capsule to be coalesced from the","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","The meaning of this bit depends on the capsule GUID.","Either a data block pointer or a continuation pointer.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","GUID that defines the type of data in the capsule.","Size in bytes of the entire capsule, including the header.","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Capsule update flags.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","Size in bytes of the capsule header. This may be larger …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Size in bytes of the data block. If zero, the block is …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","<code>Rng</code> protocol.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Device path protocol.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","The “raw” algorithm, when supported, is intended to …","ALGORITHM_SP800_90_CTR_256","ALGORITHM_SP800_90_HASH_256","ALGORITHM_SP800_90_HMAC_256","ALGORITHM_X9_31_3DES","ALGORITHM_X9_31_AES","Indicates a empty algorithm, used to instantiate a buffer …","","The algorithms listed are optional, not meant to be …","Rng protocol.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The common header that all UEFI tables begin with.","A revision of the UEFI specification.","UEFI services available during boot.","","","","","","","","","","32-bit CRC-32-Castagnoli of the entire table, calculated …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the major revision.","Returns the minor revision.","Creates a new revision.","","","Reserved field that must be set to 0.","Revision of the spec this table conforms to.","UEFI services available at runtime, even after the OS …","Unique identifier for this table.","The size in bytes of the entire table.","","","","","","","","Firmware-reserved addresses.","Memory that holds ACPI tables. Can be reclaimed after they …","Normal task execution level.","Code of the boot drivers.","Memory used to store boot drivers’ data.","Table of pointers to all the boot services.","Async interrupt-style callbacks run at this TPL.","Free usable memory.","This memory region is capable of being protected with the …","Supports disabling code execution.","Raw event notification function.","Flags describing the type of an UEFI event and its …","Highest priority level.","These bits are reserved for describing optional …","This memory region is described with additional …","Interface type of a protocol interface.","The code portions of a loaded UEFI application.","The data portions of a loaded UEFI applications, as well …","A region used for memory-mapped I/O.","Address space used for memory-mapped port I/O.","This memory region is more reliable than other memory.","Flags describing the capabilities of a memory range.","A structure describing a region of memory.","The type of a memory range.","Native interface","Persistent memory.","Notifications are masked at this level.","The notification function will be enqueued when the event …","Calling wait_for_event or check_event will enqueue the …","","Address space which is part of the processor.","Memory region which is usable and is also non-volatile.","This memory range can be set as read-only.","Supports read-protection.","This enum variant is not used.","The event is allocated from runtime memory. This must be …","This memory must be mapped by the OS when a runtime …","Runtime drivers’ code.","Runtime services’ code.","The event will be signaled at ExitBootServices time. This …","The event will be notified when SetVirtualAddressMap is …","This memory is earmarked for specific purposes such as for …","The event is a timer event and may be passed to …","Task priority level.","Supports marking as uncacheable, exported and supports the …","Supports marking as uncacheable.","Memory in which errors have been detected.","Memory descriptor version number.","Support write-back.","Supports write-combining.","Supports write-protection.","Supports write-through.","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","The capability attributes of this memory range.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","Construct a custom <code>MemoryType</code>. Values in the range …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","Number of 4 KiB pages contained in this range.","","","","","Starting physical address.","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","Type of memory occupying this range.","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Starting virtual address.","","UEFI configuration table.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","This is never set in the attributes returned by …","Deprecated.","Variable is accessible during the time that boot services …","System-wide reset.","Variable payload begins with an …","Used to access global variables.","Variable is stored in the portion of NVR allocated for …","Used to access EFI signature database variables.","Variable is maintained across a power cycle.","A platform-specific reset type.","Variable is accessible during the time that runtime …","The type of system reset.","Table of pointers to all the runtime services.","The system is powered off.","Variable payload begins with an …","Real time clock capabilities.","Flags describing the attributes of a variable.","Variable vendor GUID. This serves as a namespace for …","System-wide re-initialization.","Timekeeping accuracy in units of 1e-6 parts per million.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","The intersection of a source flags value with the …","","Reporting resolution of the clock in counts per second. 1 …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","Whether a time set operation clears the device’s time …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","Create a <code>SystemTable</code> with most fields set to zero.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Time is affected by daylight savings time.","A bitmask containing daylight savings time information.","Time has been adjusted for daylight savings time.","Date and time representation.","Indicates the time should be interpreted as local time.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Day of the month. Valid range: <code>1..=31</code>.","Daylight savings time information.","","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Hour. Valid range: <code>0..=23</code>.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create an invalid <code>Time</code> with all fields set to zero.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","True if all fields are within valid ranges, false …","Yield a set of contained flags values.","Yield a set of contained named flags values.","Minute. Valid range: <code>0..=59</code>.","Month. Valid range: <code>1..=12</code>.","Nanosececond. Valid range: <code>0..=999_999_999</code>.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Unused padding.","Unused padding.","","The intersection of a source flags value with the …","Second. Valid range: <code>0..=59</code>.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Offset in minutes from UTC. Valid range: <code>-1440..=1440</code>, or …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Year. Valid range: <code>1900..=9999</code>."],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,2],[1,2],[1,1],[3,3],[[1,1],4],[[],1],[[1,1],5],[[3,3],5],[[1,6],[[9,[7,8]]]],[[1,6],[[9,[7,8]]]],[[3,6],10],[[3,6],10],[-1,-1,[]],[-1,-1,[]],[[[11,[2]]],1],[12,[[9,[1]]]],0,[[1,-1],7,13],[-1,-2,[],[]],[-1,-2,[],[]],[3,5],[3,5],[3,5],[[[11,[2]],[11,[2]],[11,[2]],2,2,[11,[2]]],1],0,[1,[[11,[2]]]],[12,1],[[1,1],[[14,[4]]]],0,0,0,[1,[[11,[2]]]],[1,[[11,[2]]]],[1,[[11,[2]]]],[1,[[11,[2]]]],[1,[[11,[2]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[12,[[9,[1,15]]]],[-1,16,[]],[-1,16,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],17],[[17,17],17],[[17,17],7],[[17,17],17],[[17,17],7],[17,18],[17,18],[[17,17],17],[[17,17],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[19,19],[17,17],[20,20],[[19,19],4],[[17,17],4],[[20,20],4],[17,17],[[17,17],5],[[],19],[[],17],[[],20],[[17,17],17],[[],17],[[19,19],5],[[17,17],5],[[20,20],5],[[17,-1],7,[[22,[],[[21,[17]]]]]],0,[[19,6],10],[[17,6],10],[[17,6],10],[[17,6],10],[[17,6],10],[[17,6],10],[[20,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[14,[17]]]],[18,17],[18,17],[18,17],[-1,17,[[22,[],[[21,[17]]]]]],[12,[[14,[17]]]],[[19,-1],7,13],[[17,-1],7,13],[[20,-1],7,13],0,[[17,17],7],[[17,17],17],[[17,17],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,-1,[]],[17,5],[17,5],[17,[[23,[17]]]],[17,[[24,[17]]]],0,[17,17],[[19,19],[[14,[4]]]],[[17,17],[[14,[4]]]],[[20,20],[[14,[4]]]],[[17,17],7],[[17,17,5],7],[[17,17],17],[[17,17],7],[[17,17],17],[[17,17],7],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[17,17],17],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[25,25],[26,26],0,0,0,[[],25],[[],26],0,[[25,25],5],[[26,26],5],[[25,6],10],[[26,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[27,6],10],[-1,-1,[]],[-1,-2,[],[]],0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,16,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,28],[[28,28],5],[[28,6],10],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[30,30],[[29,29],4],[[30,30],4],0,0,[[],29],[[],30],[[29,29],5],[[30,30],5],[[29,6],10],[[30,6],10],[[30,6],10],[-1,-1,[]],[-1,-1,[]],[[29,-1],7,13],[[30,-1],7,13],[-1,-2,[],[]],[-1,-2,[],[]],[30,31],[30,31],[[31,31],30],[[29,29],[[14,[4]]]],[[30,30],[[14,[4]]]],0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],32],[[],33],0,0,0,0,[[32,32],32],[[33,33],33],[[32,32],7],[[33,33],7],[[32,32],32],[[33,33],33],[[32,32],7],[[33,33],7],[32,18],[32,18],[33,34],[33,34],[[32,32],32],[[33,33],33],[[32,32],7],[[33,33],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[32,32],[35,35],[33,33],[36,36],[37,37],[38,38],0,0,[[32,32],4],[[33,33],4],[[36,36],4],[[37,37],4],[32,32],[33,33],0,[[32,32],5],[[33,33],5],0,0,0,0,[18,37],[[],32],[[],33],[[],36],[[32,32],32],[[33,33],33],0,[[],32],[[],33],[[32,32],5],[[35,35],5],[[33,33],5],[[36,36],5],[[37,37],5],[[38,38],5],0,0,[[32,-1],7,[[22,[],[[21,[32]]]]]],[[33,-1],7,[[22,[],[[21,[33]]]]]],[[32,6],10],[[32,6],10],[[32,6],10],[[32,6],10],[[32,6],10],[[35,6],10],[[33,6],10],[[33,6],10],[[33,6],10],[[33,6],10],[[33,6],10],[[36,6],10],[[37,6],10],[[38,6],10],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[14,[32]]]],[34,[[14,[33]]]],[18,32],[18,32],[34,33],[34,33],[18,32],[34,33],[-1,32,[[22,[],[[21,[32]]]]]],[-1,33,[[22,[],[[21,[33]]]]]],[12,[[14,[32]]]],[12,[[14,[33]]]],0,0,0,[[32,-1],7,13],[[33,-1],7,13],[[36,-1],7,13],[[37,-1],7,13],0,[[32,32],7],[[33,33],7],0,0,0,[[32,32],32],[[33,33],33],[[32,32],5],[[33,33],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,-1,[]],[33,-1,[]],[32,5],[33,5],[32,5],[33,5],[32,[[23,[32]]]],[33,[[23,[33]]]],[32,[[24,[32]]]],[33,[[24,[33]]]],0,0,0,0,0,[32,32],[33,33],0,0,0,0,[[32,32],[[14,[4]]]],[[33,33],[[14,[4]]]],[[36,36],[[14,[4]]]],[[37,37],[[14,[4]]]],0,0,0,0,0,[[32,32],7],[[33,33],7],0,0,[[32,32,5],7],[[33,33,5],7],0,0,0,0,0,0,[[32,32],32],[[33,33],33],[[32,32],7],[[33,33],7],[[32,32],32],[[33,33],33],[[32,32],7],[[33,33],7],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,0,[[32,32],32],[[33,33],33],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[39,39],5],[[39,6],10],[-1,-1,[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,16,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],40],[[40,40],40],[[40,40],7],[[40,40],40],[[40,40],7],[40,18],[40,18],[[40,40],40],[[40,40],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,41],[42,42],[40,40],[43,43],[[42,42],4],[[40,40],4],[40,40],[[40,40],5],0,[[],42],[[],40],[[40,40],40],[[],40],[[41,41],5],[[42,42],5],[[40,40],5],[[43,43],5],[[40,-1],7,[[22,[],[[21,[40]]]]]],[[41,6],10],[[42,6],10],[[40,6],10],[[40,6],10],[[40,6],10],[[40,6],10],[[40,6],10],[[43,6],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[14,[40]]]],[18,40],[18,40],[18,40],[-1,40,[[22,[],[[21,[40]]]]]],[12,[[14,[40]]]],0,0,0,0,0,[[42,-1],7,13],[[40,-1],7,13],0,[[40,40],7],[[40,40],40],[[40,40],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,-1,[]],[40,5],[40,5],[40,[[23,[40]]]],[40,[[24,[40]]]],[40,40],[[42,42],[[14,[4]]]],[[40,40],[[14,[4]]]],0,0,[[40,40],7],0,0,[[40,40,5],7],0,0,0,0,0,[[40,40],40],[[40,40],7],[[40,40],40],[[40,40],7],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[40,40],40],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[44,44],0,[[],44],[[44,44],5],0,0,[[44,6],10],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,16,[]],0,0,0,0,0,[[],45],[[45,45],45],[[45,45],7],[[45,45],45],[[45,45],7],[45,2],[45,2],[[45,45],45],[[45,45],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[45,45],[[45,45],4],[45,45],[[45,45],5],0,0,[[],46],[[],45],[[45,45],45],[[],45],[[46,46],5],[[45,45],5],[[45,-1],7,[[22,[],[[21,[45]]]]]],[[46,6],10],[[46,6],10],[[45,6],10],[[45,6],10],[[45,6],10],[[45,6],10],[[45,6],10],[-1,-1,[]],[-1,-1,[]],[2,[[14,[45]]]],[2,45],[2,45],[2,45],[-1,45,[[22,[],[[21,[45]]]]]],[12,[[14,[45]]]],0,[[45,45],7],[[45,45],45],[[45,45],5],[-1,-2,[],[]],[-1,-2,[],[]],[45,-1,[]],[[],46],[45,5],[45,5],[46,5],[45,[[23,[45]]]],[45,[[24,[45]]]],0,0,0,[45,45],0,0,[[45,45],[[14,[4]]]],[[45,45],7],0,[[45,45,5],7],[[45,45],45],[[45,45],7],[[45,45],45],0,[[45,45],7],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[[45,45],45],0],"c":[],"p":[[5,"Guid",0],[1,"u8"],[5,"Status",0],[6,"Ordering",903],[1,"bool"],[5,"Formatter",904],[1,"tuple"],[5,"Error",904],[6,"Result",905],[8,"Result",904],[1,"array"],[1,"str"],[10,"Hasher",906],[6,"Option",907],[6,"GuidFromStrError",908],[5,"TypeId",909],[5,"CapsuleFlags",99],[1,"u32"],[5,"CapsuleBlockDescriptor",99],[5,"CapsuleHeader",99],[17,"Item"],[10,"IntoIterator",910],[5,"Iter",911],[5,"IterNames",911],[5,"InputKey",212],[5,"SimpleTextOutputMode",212],[5,"DevicePathProtocol",275],[5,"RngAlgorithmType",288],[5,"Header",317],[5,"Revision",317],[1,"u16"],[5,"EventType",374],[5,"MemoryAttribute",374],[1,"u64"],[5,"InterfaceType",374],[5,"MemoryDescriptor",374],[5,"MemoryType",374],[5,"Tpl",374],[5,"ConfigurationTable",650],[5,"VariableAttributes",662],[5,"ResetType",662],[5,"TimeCapabilities",662],[5,"VariableVendor",662],[5,"SystemTable",794],[5,"Daylight",820],[5,"Time",820],[5,"SimpleTextInputProtocol",212],[5,"SimpleTextOutputProtocol",212],[5,"RngProtocol",288],[5,"OpenProtocolInformationEntry",374],[5,"BootServices",374],[5,"RuntimeServices",662]],"b":[[64,"impl-Display-for-Guid"],[65,"impl-Debug-for-Guid"],[66,"impl-Debug-for-Status"],[67,"impl-Display-for-Status"],[127,"impl-Flags-for-CapsuleFlags"],[128,"impl-CapsuleFlags"],[158,"impl-LowerHex-for-CapsuleFlags"],[159,"impl-Octal-for-CapsuleFlags"],[160,"impl-Binary-for-CapsuleFlags"],[161,"impl-Debug-for-CapsuleFlags"],[162,"impl-UpperHex-for-CapsuleFlags"],[168,"impl-CapsuleFlags"],[169,"impl-Flags-for-CapsuleFlags"],[349,"impl-Display-for-Revision"],[350,"impl-Debug-for-Revision"],[441,"impl-Flags-for-EventType"],[442,"impl-EventType"],[443,"impl-Flags-for-MemoryAttribute"],[444,"impl-MemoryAttribute"],[507,"impl-LowerHex-for-EventType"],[508,"impl-Debug-for-EventType"],[509,"impl-Binary-for-EventType"],[510,"impl-UpperHex-for-EventType"],[511,"impl-Octal-for-EventType"],[513,"impl-Binary-for-MemoryAttribute"],[514,"impl-LowerHex-for-MemoryAttribute"],[515,"impl-UpperHex-for-MemoryAttribute"],[516,"impl-Debug-for-MemoryAttribute"],[517,"impl-Octal-for-MemoryAttribute"],[533,"impl-Flags-for-EventType"],[534,"impl-EventType"],[535,"impl-Flags-for-MemoryAttribute"],[536,"impl-MemoryAttribute"],[687,"impl-Flags-for-VariableAttributes"],[688,"impl-VariableAttributes"],[721,"impl-LowerHex-for-VariableAttributes"],[722,"impl-Debug-for-VariableAttributes"],[723,"impl-UpperHex-for-VariableAttributes"],[724,"impl-Octal-for-VariableAttributes"],[725,"impl-Binary-for-VariableAttributes"],[733,"impl-VariableAttributes"],[734,"impl-Flags-for-VariableAttributes"],[830,"impl-Daylight"],[831,"impl-Flags-for-Daylight"],[852,"impl-Debug-for-Time"],[853,"impl-Display-for-Time"],[854,"impl-LowerHex-for-Daylight"],[855,"impl-Binary-for-Daylight"],[856,"impl-UpperHex-for-Daylight"],[857,"impl-Debug-for-Daylight"],[858,"impl-Octal-for-Daylight"],[862,"impl-Daylight"],[863,"impl-Flags-for-Daylight"]]}],\
["uguid",{"doc":"Library providing a GUID (Globally Unique Identifier) …","t":"FGPPPTNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNN","n":["Guid","GuidFromStrError","Hex","Length","Separator","ZERO","borrow","borrow","borrow_mut","borrow_mut","clock_seq_high_and_reserved","clock_seq_low","clone","clone","cmp","cmp","default","default","eq","eq","fmt","fmt","fmt","fmt","from","from","from_bytes","from_str","guid","hash","hash","into","into","new","node","parse_or_panic","partial_cmp","partial_cmp","time_high_and_version","time_low","time_mid","to_ascii_hex_lower","to_bytes","try_from","try_from","try_into","try_into","try_parse","type_id","type_id"],"q":[[0,"uguid"],[50,"core::cmp"],[51,"core::fmt"],[52,"core::fmt"],[53,"core::hash"],[54,"core::option"],[55,"core::any"]],"d":["Globally-unique identifier.","Error type for <code>Guid::try_parse</code> and <code>Guid::from_str</code>.","Input contains invalid ASCII hex at this byte index.","Input has the wrong length, expected 36 bytes.","Input is missing a separator (<code>-</code>) at this byte index.","GUID with all fields set to zero.","","","","","The high field of the clock sequence multiplexed with the …","The low field of the clock sequence.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a GUID from a 16-byte array. No changes to byte …","Parse a GUID from a string, panicking on failure.","Create a <code>Guid</code> from a string at compile time.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new GUID.","The spatially unique node identifier.","Parse a GUID from a string, panicking on failure.","","","The little-endian high field of the timestamp multiplexed …","The little-endian low field of the timestamp.","The little-endian middle field of the timestamp.","Convert to a lower-case hex ASCII string.","Convert to a 16-byte array.","","","","","Parse a GUID from a string.","",""],"i":[0,0,3,3,3,1,3,1,3,1,1,1,3,1,3,1,3,1,3,1,3,3,1,1,3,1,1,1,0,3,1,3,1,1,1,1,3,1,1,1,1,1,1,3,1,3,1,1,3,1],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[1,2],[3,3],[1,1],[[3,3],4],[[1,1],4],[[],3],[[],1],[[3,3],5],[[1,1],5],[[3,6],7],[[3,6],7],[[1,6],7],[[1,6],7],[-1,-1,[]],[-1,-1,[]],[[[8,[2]]],1],[9,[[10,[1,-1]]],[]],0,[[3,-1],11,12],[[1,-1],11,12],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[2]],[8,[2]],[8,[2]],2,2,[8,[2]]],1],[1,[[8,[2]]]],[9,1],[[3,3],[[13,[4]]]],[[1,1],[[13,[4]]]],[1,[[8,[2]]]],[1,[[8,[2]]]],[1,[[8,[2]]]],[1,[[8,[2]]]],[1,[[8,[2]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[9,[[10,[1,3]]]],[-1,14,[]],[-1,14,[]]],"c":[],"p":[[5,"Guid",0],[1,"u8"],[6,"GuidFromStrError",0],[6,"Ordering",50],[1,"bool"],[5,"Formatter",51],[8,"Result",51],[1,"array"],[1,"str"],[6,"Result",52],[1,"tuple"],[10,"Hasher",53],[6,"Option",54],[5,"TypeId",55]],"b":[[20,"impl-Display-for-GuidFromStrError"],[21,"impl-Debug-for-GuidFromStrError"],[22,"impl-Debug-for-Guid"],[23,"impl-Display-for-Guid"]]}],\
["unwinding",{"doc":"Unwinding library in Rust and for Rust","t":"CCCTTTTTTTTTTTTTITFFFIFIIHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNHHTKHHMM","n":["abi","panic","panicking","CLEANUP_PHASE","CONTINUE_UNWIND","END_OF_STACK","END_OF_STACK","FATAL_PHASE1_ERROR","FATAL_PHASE2_ERROR","FORCE_UNWIND","FOREIGN_EXCEPTION_CAUGHT","HANDLER_FOUND","HANDLER_FRAME","INSTALL_CONTEXT","NORMAL_STOP","NO_REASON","PersonalityRoutine","SEARCH_PHASE","UnwindAction","UnwindContext","UnwindException","UnwindExceptionCleanupFn","UnwindReasonCode","UnwindStopFn","UnwindTraceFn","_Unwind_Backtrace","_Unwind_DeleteException","_Unwind_FindEnclosingFunction","_Unwind_ForcedUnwind","_Unwind_GetCFA","_Unwind_GetDataRelBase","_Unwind_GetGR","_Unwind_GetIP","_Unwind_GetIPInfo","_Unwind_GetLanguageSpecificData","_Unwind_GetRegionStart","_Unwind_GetTextRelBase","_Unwind_RaiseException","_Unwind_Resume","_Unwind_Resume_or_Rethrow","_Unwind_SetGR","_Unwind_SetIP","bitor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains","empty","eq","eq","exception_class","exception_cleanup","from","from","from","from","into","into","into","into","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","begin_panic","catch_unwind","CLASS","Exception","begin_panic","catch_unwind","unwrap","wrap"],"q":[[0,"unwinding"],[3,"unwinding::abi"],[83,"unwinding::panic"],[85,"unwinding::panicking"],[91,"core::ffi"],[92,"core::result"],[93,"core::any"],[94,"core::any"],[95,"core::ops::function"],[96,"core::option"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,11,3,3,11,3,3,11,3,3,11,3,3,3,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,4,7,3,11,4,7,3,11,3,11,3,11,11,11,3,11,4,4,4,7,3,11,4,7,3,11,3,11,4,7,3,11,4,7,3,11,4,7,3,11,0,0,19,0,0,0,19,19],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[4,5],[2,2],[[4,6,2],3],[7,8],[7,8],[[7,9],8],[7,8],[[7,9],8],[7,2],[7,8],[7,8],[4,3],[4,10],[4,3],[[7,9,8],5],[[7,8],5],[[11,11],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[11,11],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[11,11],12],[[],11],[[3,3],12],[[11,11],12],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[[16,[15]]],3],[-2,[[13,[-1,[16,[15]]]]],[],[[18,[],[[17,[-1]]]]]],0,0,[-1,3,19],[-2,[[13,[-1,[20,[-3]]]]],[],[[18,[],[[17,[-1]]]]],19],[4,19],[19,4]],"c":[],"p":[[8,"UnwindTraceFn",3],[6,"c_void",91],[5,"UnwindReasonCode",3],[5,"UnwindException",3],[1,"tuple"],[8,"UnwindStopFn",3],[5,"UnwindContext",3],[1,"usize"],[1,"i32"],[1,"never"],[5,"UnwindAction",3],[1,"bool"],[6,"Result",92],[5,"TypeId",93],[10,"Any",93],[5,"Box",94],[17,"Output"],[10,"FnOnce",95],[10,"Exception",85],[6,"Option",96]],"b":[]}],\
["volatile",{"doc":"Provides the wrapper type <code>Volatile</code>, which wraps a …","t":"FCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKKFNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Volatile","access","as_mut_slice","as_slice","borrow","borrow_mut","clone","copy_from_slice","copy_into_slice","copy_within","extract_inner","fill","fmt","fmt","from","index","index_mut","into","map","map_mut","new","new_read_only","new_write_only","read","read_only","try_from","try_into","type_id","update","write","write_only","ReadOnly","ReadWrite","Readable","Writable","WriteOnly","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","fmt","fmt","fmt","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"volatile"],[31,"volatile::access"],[63,"core::ops::deref"],[64,"core::ops::deref"],[65,"core::marker"],[66,"core::ops::range"],[67,"core::fmt"],[68,"core::fmt"],[69,"core::marker"],[70,"core::result"],[71,"core::any"]],"d":["Wraps a reference to make accesses to the referenced value …","Allows creating read-only and write-only <code>Volatile</code> values.","Converts a mutable array reference to a mutable slice.","Converts an array reference to a shared slice.","","","","Copies all elements from <code>src</code> into <code>self</code>, using a volatile …","Copies all elements from <code>self</code> into <code>dst</code>, using a volatile …","Copies elements from one part of the slice to another part …","Extracts the inner value stored in the wrapper type.","Sets all elements of the byte slice to the given <code>value</code> …","","","Returns the argument unchanged.","Applies the index operation on the wrapped slice.","Applies the mutable index operation on the wrapped slice.","Calls <code>U::from(self)</code>.","Constructs a new <code>Volatile</code> reference by mapping the wrapped …","Constructs a new mutable <code>Volatile</code> reference by mapping the …","Constructs a new volatile instance wrapping the given …","Constructs a new read-only volatile instance wrapping the …","Constructs a new write-only volatile instance wrapping the …","Performs a volatile read of the contained value.","Restricts access permissions to read-only.","","","","Updates the contained value using the given closure and …","Performs a volatile write, setting the contained value to …","Restricts access permissions to write-only.","Zero-sized marker type for allowing only read access.","Zero-sized marker type for allowing both read and write …","Helper trait that is implemented by <code>ReadWrite</code> and <code>ReadOnly</code>.","Helper trait that is implemented by <code>ReadWrite</code> and <code>WriteOnly</code>…","Zero-sized marker type for allowing only write access.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,26,22,17,26,22,17,26,22,17,26,22,17,26,22,17,26,22,17,26,22,17,26,22,17,26,22,17],"f":[0,0,[[[1,[-2,-3]]],[[1,[[2,[-1]],-3]]],[],[3,[6,[],[[4,[[5,[-1]]]]]]],[]],[[[1,[-2,-3]]],[[1,[[2,[-1]],-3]]],[],[[6,[],[[4,[[5,[-1]]]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[[1,[-1,-2]]],7,7],[[[1,[-2,-3]],[2,[-1]]],8,9,[3,[6,[],[[4,[[2,[-1]]]]]]],[]],[[[1,[-2,-3]],[2,[-1]]],8,9,[[6,[],[[4,[[2,[-1]]]]]]],[]],[[[1,[-2,-3]],-4,10],8,9,[3,[6,[],[[4,[[2,[-1]]]]]]],[],[[11,[10]]]],[[[1,[-1,-2]]],-1,[],[]],[[[1,[-1,-2]],12],8,[3,[6,[],[[4,[[2,[12]]]]]]],[]],[[[1,[-2,-3]],13],14,[9,15],[[6,[],[[4,[-1]]]]],16],[[[1,[-1,17]],13],14,6],[-1,-1,[]],[[[1,[-2,-3]],-4],[[1,[-3]]],[],[[6,[],[[4,[[2,[-1]]]]]]],[],[[18,[[2,[-1]]]]]],[[[1,[-2,-3]],-4],[[1,[-3]]],[],[3,[6,[],[[4,[[2,[-1]]]]]]],[],[[18,[[2,[-1]]]]]],[-1,-2,[],[]],[[[1,[-2,-3]],-5],[[1,[-4,-3]]],19,[[6,[],[[4,[-1]]]]],[],19,[[21,[-1],[[20,[-4]]]]]],[[[1,[-2,-3]],-5],[[1,[-4,-3]]],19,[3,[6,[],[[4,[-1]]]]],[],19,[[21,[-1],[[20,[-4]]]]]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1,22]]],[]],[-1,[[1,[-1,17]]],[]],[[[1,[-2,-3]]],-1,9,[[6,[],[[4,[-1]]]]],16],[[[1,[-1]]],[[1,[-1,22]]],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[[[1,[-2,-3]],-4],8,9,[3,[6,[],[[4,[-1]]]]],[16,25],[[21,[-1]]]],[[[1,[-2,-3]],-1],8,9,[3,[6,[],[[4,[-1]]]]],25],[[[1,[-1]]],[[1,[-1,17]]],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[22,22],[17,17],[[26,13],14],[[22,13],14],[[17,13],14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]]],"c":[],"p":[[5,"Volatile",0],[1,"slice"],[10,"DerefMut",63],[17,"Target"],[1,"array"],[10,"Deref",63],[10,"Clone",64],[1,"tuple"],[10,"Copy",65],[1,"usize"],[10,"RangeBounds",66],[1,"u8"],[5,"Formatter",67],[8,"Result",67],[10,"Debug",67],[10,"Readable",31],[5,"WriteOnly",31],[10,"SliceIndex",68],[10,"Sized",65],[17,"Output"],[10,"FnOnce",69],[5,"ReadOnly",31],[6,"Result",70],[5,"TypeId",71],[10,"Writable",31],[5,"ReadWrite",31]],"b":[[12,"impl-Debug-for-Volatile%3CR,+A%3E"],[13,"impl-Debug-for-Volatile%3CR,+WriteOnly%3E"]]}],\
["wyz",{"doc":"<code>wyz</code> – myrrlyn’s wyzyrdly library","t":"CCCCFKNNNNNNNNNNNNNNNNNNFTFTRFFKFTTRIKTKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNFFKFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMMM","n":["bidi","comu","fmt","range","Bidi","BidiIterator","bidi","borrow","borrow_mut","count","from","into","into_iter","last","len","new","next","next_back","nth","nth_back","size_hint","try_from","try_into","type_id","Address","CONTAINS_MUTABILITY","Const","DANGLING","ElementAddr","Frozen","Mut","Mutability","NullPtrError","PEANO_NUMBER","RENDER","Ref","Reference","Referential","SELF","SliceReferential","add","align_offset","as_mut","as_ref","assert_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","copy_from","copy_from_nonoverlapping","copy_to","copy_to_nonoverlapping","default","default","default","default","drop_in_place","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","freeze","from","from","from","from","from","from","from","from_raw_parts","from_raw_parts","from_raw_parts","from_raw_parts","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","immut","into","into","into","into","into","into_inner","new","offset","offset_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","read","read_unaligned","read_volatile","replace","sub","swap","thaw","thaw","to_const","to_mut","to_ref","to_ref","to_ref","to_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wrapping_add","wrapping_offset","wrapping_sub","write","write_unaligned","write_volatile","FmtBinary","FmtDisplay","FmtForward","FmtList","FmtLowerExp","FmtLowerHex","FmtOctal","FmtPointer","FmtUpperExp","FmtUpperHex","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_binary","fmt_display","fmt_list","fmt_lower_exp","fmt_lower_hex","fmt_octal","fmt_pointer","fmt_upper_exp","fmt_upper_hex","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","RangeExt","intersection","normalize","union"],"q":[[0,"wyz"],[4,"wyz::bidi"],[24,"wyz::comu"],[161,"wyz::fmt"],[359,"wyz::range"],[363,"core::iter::traits::double_ended"],[364,"core::option"],[365,"core::iter::traits::exact_size"],[366,"core::iter::traits::collect"],[367,"core::result"],[368,"core::any"],[369,"core::marker"],[370,"core::clone"],[371,"core::cmp"],[372,"core::cmp"],[373,"core::cmp"],[374,"core::fmt"],[375,"core::hash"],[376,"core::hash"],[377,"core::cmp"],[378,"core::convert"]],"d":["A bidirectional iterator that only checks its direction …","Trait-level <code>co</code>nst/<code>mu</code>table tracking.","Format forwarding","Range utilities.","An iterator that conditionally reverses itself upon …","Extension trait that provides <code>.bidi()</code> for all double-ended …","Conditionally reverses the direction of iteration.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Applies the <code>Bidi</code> adapter to a double-ended iterator and …","","","","","","","","","A generic non-null pointer with type-system mutability …","Marks whether this type contains mutability permissions …","A basic <code>const</code> marker.","The dangling pointer.","The type of the element pointer.","A frozen wrapper over some other <code>Mutability</code> marker.","A basic <code>mut</code> marker.","Generalized mutability permissions.","<code>Address</code> cannot be constructed over null pointers.","Counts the layers of <code>Frozen&lt;&gt;</code> wrapping around a base <code>Const</code> …","One of <code>*const</code> or <code>*mut</code>.","The created reference type. Must be one of <code>&amp;T</code> or <code>&amp;mut T</code>.","A generically-mutable reference.","Allows an <code>Address</code> to produce an ordinary reference.","Allow instances to be constructed generically.","Allows an <code>Address&lt;M, [T]&gt;</code> to produce an ordinary slice …","Applies <code>&lt;*T&gt;::add</code>.","Applies <code>&lt;*T&gt;::align_offset</code>.","Applies <code>&lt;*T&gt;::as_mut</code>.","Applies <code>&lt;*T&gt;::as_ref</code>.","Force an <code>Address&lt;Const&gt;</code> to be <code>Address&lt;Mut&gt;</code>.","","","","","","","","","","","Applies <code>&lt;*T&gt;::cast</code>.","","","","","","","","","","","Applies <code>&lt;*T&gt;::copy_from</code>.","Applies <code>&lt;*T&gt;::copy_from_nonoverlapping</code>.","Applies <code>&lt;*T&gt;::copy_to</code>.","Applies <code>&lt;*T&gt;::copy_to_nonoverlapping</code>.","","","","","Applies <code>&lt;*T&gt;::drop_in_place</code>.","","","","","","","","","","","","","Freeze this type, wrapping it in a <code>const</code> marker that may …","Freezes the <code>Address</code> so that it is read-only.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an ordinary slice reference from a base-address …","","","","Converts a reference back into an <code>Address</code>.","","","","","","","","","Permanently converts an <code>Address&lt;_&gt;</code> into an <code>Address&lt;Const&gt;</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Removes the <code>Address</code> type marker, returning the original …","Constructs a new <code>Address</code> over some pointer value.","Applies <code>&lt;*T&gt;::offset</code>.","Applies <code>&lt;*T&gt;::offset_from</code>.","","","","","","Applies <code>&lt;*T&gt;::read</code>.","Applies <code>&lt;*T&gt;::read_unaligned</code>.","Applies <code>&lt;*T&gt;::read_volatile</code>.","Applies <code>&lt;*T&gt;::replace</code>.","Applies <code>&lt;*T&gt;::sub</code>.","Applies <code>&lt;*T&gt;::swap</code>.","Thaw a previously-frozen type, removing its <code>Frozen</code> marker …","Thaws the <code>Address</code> to its original mutability permission.","Gets the address as a read-only pointer.","Gets the address as a write-capable pointer.","Converts the <code>Address</code> to a reference.","","","","","","","","","","","","","","","","","","","","","Applies <code>&lt;*T&gt;::wrapping_add</code>.","Applies <code>&lt;*T&gt;::wrapping_offset</code>.","Applies <code>&lt;*T&gt;::wrapping_sub</code>.","Applies <code>&lt;*T&gt;::write</code>.","Applies <code>&lt;*T&gt;::write_unaligned</code>.","Applies <code>&lt;*T&gt;::write_volatile</code>.","Forwards a type’s <code>Binary</code> formatting implementation to …","Forwards a type’s <code>Display</code> formatting implementation to …","Wraps any value with a format-forward to <code>Debug</code>.","Renders each element of a stream into a list.","Forwards a type’s <code>LowerExp</code> formatting implementation to …","Forwards a type’s <code>LowerHex</code> formatting implementation to …","Forwards a type’s <code>Octal</code> formatting implementation to …","Forwards a type’s <code>Pointer</code> formatting implementation to …","Forwards a type’s <code>UpperExp</code> formatting implementation to …","Forwards a type’s <code>UpperHex</code> formatting implementation to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Causes <code>self</code> to use its <code>Binary</code> implementation when <code>Debug</code>…","Causes <code>self</code> to use its <code>Display</code> implementation when <code>Debug</code>…","Formats each item in a sequence.","Causes <code>self</code> to use its <code>LowerExp</code> implementation when <code>Debug</code>…","Causes <code>self</code> to use its <code>LowerHex</code> implementation when <code>Debug</code>…","Causes <code>self</code> to use its <code>Octal</code> implementation when <code>Debug</code>…","Causes <code>self</code> to use its <code>Pointer</code> implementation when <code>Debug</code>…","Causes <code>self</code> to use its <code>UpperExp</code> implementation when <code>Debug</code>…","Causes <code>self</code> to use its <code>UpperHex</code> implementation when <code>Debug</code>…","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension methods for working with various range types.","Finds the intersection between two range-likes. The …","Normalizes a range-like type to a canonical half-open <code>Range</code>…","Finds the union between two range-likes. The produced <code>Range</code>…"],"i":[0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,14,0,13,57,0,0,0,0,14,14,29,0,0,14,0,13,13,13,13,13,13,17,15,18,20,13,17,15,18,20,13,13,17,15,18,20,13,17,15,18,20,13,13,13,13,17,15,18,20,13,13,17,15,18,20,13,13,17,15,18,20,20,14,13,13,13,13,17,15,18,20,57,13,13,13,29,13,13,13,13,17,15,18,20,13,13,17,15,18,20,13,13,13,13,13,17,15,18,20,13,13,13,13,13,13,14,13,13,13,29,13,13,13,13,13,13,17,15,18,20,13,17,15,18,20,13,17,15,18,20,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,36,38,40,41,43,45,47,49,51,36,38,40,41,43,45,47,49,51,36,38,40,41,43,45,47,49,51,36,38,40,41,43,45,47,49,51,36,38,40,41,43,45,47,49,51,36,38,40,41,43,45,47,49,51,36,36,36,36,36,36,36,36,36,38,38,38,38,38,38,38,38,38,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,43,43,43,43,43,43,43,43,43,45,45,45,45,45,45,45,45,45,47,47,47,47,47,47,47,47,47,49,49,49,49,49,49,49,49,49,51,51,51,51,51,51,51,51,51,53,53,53,53,53,53,53,53,53,36,38,40,41,43,45,47,49,51,36,38,40,41,43,45,47,49,51,36,38,40,41,43,45,47,49,51,36,38,40,41,43,45,47,49,51,36,38,40,41,43,45,47,49,51,0,54,54,54],"f":[0,0,0,0,0,0,[[1,2],[[3,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],4,5],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],[[6,[-2]]],5,[]],[[[3,[-1]]],4,[5,7]],[[-2,2],[[3,[-1]]],5,[[9,[],[[8,[-1]]]]]],[[[3,[-1]]],[[6,[-2]]],5,[]],[[[3,[-1]]],[[6,[-2]]],5,[]],[[[3,[-1]],4],[[6,[-2]]],5,[]],[[[3,[-1]],4],[[6,[-2]]],5,[]],[[[3,[-1]]],[[10,[4,[6,[4]]]]],5],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[13,[-1,-2]],4],[[13,[-1,-2]]],14,[]],[[[13,[-1,-2]],4],4,14,[]],[[[13,[15,-1]]],[[6,[-1]]],16],[[[13,[-1,-2]]],[[6,[-2]]],14,16],[[[13,[-1,-2]]],[[13,[15,-2]]],14,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2]]],[[13,[-1,-3]]],14,[],[]],[[[13,[-1,-2]]],[[13,[-1,-2]]],14,16],[17,17],[15,15],[[[18,[-1]]],[[18,[-1]]],[14,19]],[20,20],[[[13,[-1,-2]],[13,[-1,-2]]],21,14,[]],[[17,17],21],[[15,15],21],[[[18,[-1]],[18,[-1]]],21,[14,22]],[[20,20],21],[[[13,[15,-1]],[13,[-2,-1]],4],10,[],14],[[[13,[15,-1]],[13,[-2,-1]],4],10,[],14],[[[13,[-1,-2]],[13,[15,-2]],4],10,14,[]],[[[13,[-1,-2]],[13,[15,-2]],4],10,14,[]],[[],17],[[],15],[[],[[18,[-1]]],[14,23]],[[],20],[[[13,[15,-1]]],10,16],[[[13,[-1,-2]],[13,[-3,-4]]],2,14,[],14,[]],[[17,17],2],[[15,15],2],[[[18,[-1]],[18,[-1]]],2,[14,24]],[[20,20],2],[[[13,[-1,-2]],25],26,14,16],[[[13,[-1,-2]],25],26,14,16],[[17,25],26],[[15,25],26],[[[18,[-1]],25],26,[14,27]],[[20,25],26],[[20,25],26],[14,[[18,[14]]]],[[[13,[-1,-2]]],[[13,[[18,[-1]],-2]]],14,16],[-1,-1,[]],[-1,[[13,[15,-1]]],16],[-1,[[13,[17,-1]]],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,4],-2,[],[]],[[-1,4],-2,[],[]],[[-1,4],-2,[],[]],[[-1,4],-2,[],[]],[-1,[[29,[],[[28,[-1]]]]],30],[-1,[[13,[17,-2]]],[],16],[-1,[[13,[[18,[-2]],-3]]],[],14,16],[-1,[[13,[15,-2]]],[],16],[[[13,[-1,-2]],-3],10,14,16,31],[[17,-1],10,31],[[15,-1],10,31],[[[18,[-1]],-2],10,[14,32],31],[[20,-1],10,31],[[[13,[-1,-2]]],[[13,[17,-2]]],14,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2]]],[[33,[-2]]],14,16],[[[33,[-1]]],[[13,[-2,-1]]],16,14],[[[13,[-1,-2]],34],[[13,[-1,-2]]],14,[]],[[[13,[-1,-2]],[13,[-1,-2]]],34,14,[]],[[[13,[-1,-2]],[13,[-3,-4]]],[[6,[21]]],14,[],14,[]],[[17,17],[[6,[21]]]],[[15,15],[[6,[21]]]],[[[18,[-1]],[18,[-1]]],[[6,[21]]],[14,35]],[[20,20],[[6,[21]]]],[[[13,[-1,-2]]],-2,14,[]],[[[13,[-1,-2]]],-2,14,[]],[[[13,[-1,-2]]],-2,14,[]],[[[13,[15,-1]],-1],-1,[]],[[[13,[-1,-2]],4],[[13,[-1,-2]]],14,[]],[[[13,[15,-1]],[13,[15,-1]]],10,[]],[[[18,[14]]],14],[[[13,[[18,[-1]],-2]]],[[13,[-1,-2]]],14,16],[[[13,[-1,-2]]],[],14,16],[[[13,[15,-1]]],[],[]],[[[29,[],[[28,[-1]]]]],-1,30],[[[13,[17,-1]]],-2,16,[]],[[[13,[[18,[-1]],-2]]],-3,14,16,[]],[[[13,[15,-1]]],-2,16,[]],[[],[[11,[[13,[15,-1]],-2]]],16,[]],[-1,[[11,[-2]]],[],[]],[[],[[11,[[13,[17,-1]],-2]]],16,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[[[13,[-1,-2]],4],[[13,[-1,-2]]],14,[]],[[[13,[-1,-2]],34],[[13,[-1,-2]]],14,[]],[[[13,[-1,-2]],4],[[13,[-1,-2]]],14,[]],[[[13,[15,-1]],-1],10,[]],[[[13,[15,-1]],-1],10,[]],[[[13,[15,-1]],-1],10,[]],0,0,0,0,0,0,0,0,0,0,[[[36,[-1]]],-1,37],[[[38,[-1]]],-1,39],[[[40,[-1]]],-1,[]],[[[41,[-1]]],-1,42],[[[43,[-1]]],-1,44],[[[45,[-1]]],-1,46],[[[47,[-1]]],-1,48],[[[49,[-1]]],-1,50],[[[51,[-1]]],-1,52],[[[36,[-1]]],-1,37],[[[38,[-1]]],-1,39],[[[40,[-1]]],-1,[]],[[[41,[-1]]],-1,42],[[[43,[-1]]],-1,44],[[[45,[-1]]],-1,46],[[[47,[-1]]],-1,48],[[[49,[-1]]],-1,50],[[[51,[-1]]],-1,52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],-2,37,[]],[[[38,[-1]]],-2,39,[]],[[[40,[-1]]],-2,[],[]],[[[41,[-1]]],-2,42,[]],[[[43,[-1]]],-2,44,[]],[[[45,[-1]]],-2,46,[]],[[[47,[-1]]],-2,48,[]],[[[49,[-1]]],-2,50,[]],[[[51,[-1]]],-2,52,[]],[[[36,[-1]]],-2,37,[]],[[[38,[-1]]],-2,39,[]],[[[40,[-1]]],-2,[],[]],[[[41,[-1]]],-2,42,[]],[[[43,[-1]]],-2,44,[]],[[[45,[-1]]],-2,46,[]],[[[47,[-1]]],-2,48,[]],[[[49,[-1]]],-2,50,[]],[[[51,[-1]]],-2,52,[]],[[[36,[-1]],25],26,37],[[[36,[-1]],25],26,[37,46]],[[[36,[-1]],25],26,[37,37]],[[[36,[-1]],25],26,[37,48]],[[[36,[-1]],25],26,[37,39]],[[[36,[-1]],25],26,[37,50]],[[[36,[-1]],25],26,[37,42]],[[[36,[-1]],25],26,[37,44]],[[[36,[-1]],25],26,[37,52]],[[[38,[-1]],25],26,[39,50]],[[[38,[-1]],25],26,[39,37]],[[[38,[-1]],25],26,[39,42]],[[[38,[-1]],25],26,[39,52]],[[[38,[-1]],25],26,[39,48]],[[[38,[-1]],25],26,39],[[[38,[-1]],25],26,[39,46]],[[[38,[-1]],25],26,[39,44]],[[[38,[-1]],25],26,[39,39]],[[[40,[-1]],25],26,[]],[[[40,[-1]],25],26,[]],[[[40,[-1]],25],26,[]],[[[40,[-1]],25],26,[]],[[[40,[-1]],25],26,[]],[[[40,[-1]],25],26,[]],[[[40,[-1]],25],26,[]],[[[40,[-1]],25],26,[]],[[[41,[-1]],25],26,[42,48]],[[[41,[-1]],25],26,[42,52]],[[[41,[-1]],25],26,[42,44]],[[[41,[-1]],25],26,[42,50]],[[[41,[-1]],25],26,[42,37]],[[[41,[-1]],25],26,[42,42]],[[[41,[-1]],25],26,[42,39]],[[[41,[-1]],25],26,42],[[[41,[-1]],25],26,[42,46]],[[[43,[-1]],25],26,[44,46]],[[[43,[-1]],25],26,[44,52]],[[[43,[-1]],25],26,[44,50]],[[[43,[-1]],25],26,[44,44]],[[[43,[-1]],25],26,[44,39]],[[[43,[-1]],25],26,44],[[[43,[-1]],25],26,[44,42]],[[[43,[-1]],25],26,[44,48]],[[[43,[-1]],25],26,[44,37]],[[[45,[-1]],25],26,[46,48]],[[[45,[-1]],25],26,[46,44]],[[[45,[-1]],25],26,[46,50]],[[[45,[-1]],25],26,[46,46]],[[[45,[-1]],25],26,46],[[[45,[-1]],25],26,[46,42]],[[[45,[-1]],25],26,[46,52]],[[[45,[-1]],25],26,[46,37]],[[[45,[-1]],25],26,[46,39]],[[[47,[-1]],25],26,48],[[[47,[-1]],25],26,[48,46]],[[[47,[-1]],25],26,[48,48]],[[[47,[-1]],25],26,[48,39]],[[[47,[-1]],25],26,[48,44]],[[[47,[-1]],25],26,[48,52]],[[[47,[-1]],25],26,[48,37]],[[[47,[-1]],25],26,[48,42]],[[[47,[-1]],25],26,[48,50]],[[[49,[-1]],25],26,[50,42]],[[[49,[-1]],25],26,[50,46]],[[[49,[-1]],25],26,[50,50]],[[[49,[-1]],25],26,[50,39]],[[[49,[-1]],25],26,[50,52]],[[[49,[-1]],25],26,50],[[[49,[-1]],25],26,[50,44]],[[[49,[-1]],25],26,[50,48]],[[[49,[-1]],25],26,[50,37]],[[[51,[-1]],25],26,[52,44]],[[[51,[-1]],25],26,[52,50]],[[[51,[-1]],25],26,[52,37]],[[[51,[-1]],25],26,52],[[[51,[-1]],25],26,[52,48]],[[[51,[-1]],25],26,[52,52]],[[[51,[-1]],25],26,[52,46]],[[[51,[-1]],25],26,[52,39]],[[[51,[-1]],25],26,[52,42]],[53,[[36,[53]]]],[53,[[38,[53]]]],[53,[[40,[53]]]],[53,[[41,[53]]]],[53,[[43,[53]]]],[53,[[45,[53]]]],[53,[[47,[53]]]],[53,[[49,[53]]]],[53,[[51,[53]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],0,[[54,-2],[[6,[[55,[-1]]]]],22,[[54,[-1]]]],[[54,-2,-3],[[55,[-1]]],22,[[56,[[6,[-1]]]]],[[56,[[6,[-1]]]]]],[[54,-2],[[6,[[55,[-1]]]]],22,[[54,[-1]]]]],"c":[],"p":[[10,"BidiIterator",4],[1,"bool"],[5,"Bidi",4],[1,"usize"],[10,"DoubleEndedIterator",363],[6,"Option",364],[10,"ExactSizeIterator",365],[17,"IntoIter"],[10,"IntoIterator",366],[1,"tuple"],[6,"Result",367],[5,"TypeId",368],[5,"Address",24],[10,"Mutability",24],[5,"Mut",24],[10,"Sized",369],[5,"Const",24],[5,"Frozen",24],[10,"Clone",370],[5,"NullPtrError",24],[6,"Ordering",371],[10,"Ord",371],[10,"Default",372],[10,"PartialEq",371],[5,"Formatter",373],[8,"Result",373],[10,"Debug",373],[17,"Ref"],[10,"Referential",24],[10,"Deref",374],[10,"Hasher",375],[10,"Hash",375],[5,"NonNull",376],[1,"isize"],[10,"PartialOrd",371],[5,"FmtBinary",161],[10,"Binary",373],[5,"FmtDisplay",161],[10,"Display",373],[5,"FmtList",161],[5,"FmtLowerExp",161],[10,"LowerExp",373],[5,"FmtLowerHex",161],[10,"LowerHex",373],[5,"FmtOctal",161],[10,"Octal",373],[5,"FmtPointer",161],[10,"Pointer",373],[5,"FmtUpperExp",161],[10,"UpperExp",373],[5,"FmtUpperHex",161],[10,"UpperHex",373],[10,"FmtForward",161],[10,"RangeExt",359],[5,"Range",377],[10,"Into",378],[10,"SliceReferential",24]],"b":[[80,"impl-Pointer-for-Address%3CM,+T%3E"],[81,"impl-Debug-for-Address%3CM,+T%3E"],[85,"impl-Display-for-NullPtrError"],[86,"impl-Debug-for-NullPtrError"],[90,"impl-From%3C%26mut+T%3E-for-Address%3CMut,+T%3E"],[91,"impl-From%3C%26T%3E-for-Address%3CConst,+T%3E"],[97,"impl-SliceReferential%3C\'a%3E-for-Address%3CMut,+%5BT%5D%3E"],[98,"impl-SliceReferential%3C\'a%3E-for-Address%3CConst,+%5BT%5D%3E"],[99,"impl-SliceReferential%3C\'a%3E-for-Address%3CFrozen%3CM%3E,+%5BT%5D%3E"],[101,"impl-Referential%3C\'a%3E-for-Address%3CConst,+T%3E"],[102,"impl-Referential%3C\'a%3E-for-Address%3CFrozen%3CM%3E,+T%3E"],[103,"impl-Referential%3C\'a%3E-for-Address%3CMut,+T%3E"],[135,"impl-Referential%3C\'a%3E-for-Address%3CConst,+T%3E"],[136,"impl-Referential%3C\'a%3E-for-Address%3CFrozen%3CM%3E,+T%3E"],[137,"impl-Referential%3C\'a%3E-for-Address%3CMut,+T%3E"],[138,"impl-TryFrom%3C*mut+T%3E-for-Address%3CMut,+T%3E"],[140,"impl-TryFrom%3C*const+T%3E-for-Address%3CConst,+T%3E"],[225,"impl-Debug-for-FmtBinary%3CT%3E"],[226,"impl-Octal-for-FmtBinary%3CT%3E"],[227,"impl-Binary-for-FmtBinary%3CT%3E"],[228,"impl-Pointer-for-FmtBinary%3CT%3E"],[229,"impl-Display-for-FmtBinary%3CT%3E"],[230,"impl-UpperExp-for-FmtBinary%3CT%3E"],[231,"impl-LowerExp-for-FmtBinary%3CT%3E"],[232,"impl-LowerHex-for-FmtBinary%3CT%3E"],[233,"impl-UpperHex-for-FmtBinary%3CT%3E"],[234,"impl-UpperExp-for-FmtDisplay%3CT%3E"],[235,"impl-Binary-for-FmtDisplay%3CT%3E"],[236,"impl-LowerExp-for-FmtDisplay%3CT%3E"],[237,"impl-UpperHex-for-FmtDisplay%3CT%3E"],[238,"impl-Pointer-for-FmtDisplay%3CT%3E"],[239,"impl-Debug-for-FmtDisplay%3CT%3E"],[240,"impl-Octal-for-FmtDisplay%3CT%3E"],[241,"impl-LowerHex-for-FmtDisplay%3CT%3E"],[242,"impl-Display-for-FmtDisplay%3CT%3E"],[243,"impl-UpperExp-for-FmtList%3CT%3E"],[244,"impl-Debug-for-FmtList%3CT%3E"],[245,"impl-UpperHex-for-FmtList%3CT%3E"],[246,"impl-LowerHex-for-FmtList%3CT%3E"],[247,"impl-Display-for-FmtList%3CT%3E"],[248,"impl-Binary-for-FmtList%3CT%3E"],[249,"impl-Octal-for-FmtList%3CT%3E"],[250,"impl-LowerExp-for-FmtList%3CT%3E"],[251,"impl-Pointer-for-FmtLowerExp%3CT%3E"],[252,"impl-UpperHex-for-FmtLowerExp%3CT%3E"],[253,"impl-LowerHex-for-FmtLowerExp%3CT%3E"],[254,"impl-UpperExp-for-FmtLowerExp%3CT%3E"],[255,"impl-Binary-for-FmtLowerExp%3CT%3E"],[256,"impl-LowerExp-for-FmtLowerExp%3CT%3E"],[257,"impl-Display-for-FmtLowerExp%3CT%3E"],[258,"impl-Debug-for-FmtLowerExp%3CT%3E"],[259,"impl-Octal-for-FmtLowerExp%3CT%3E"],[260,"impl-Octal-for-FmtLowerHex%3CT%3E"],[261,"impl-UpperHex-for-FmtLowerHex%3CT%3E"],[262,"impl-UpperExp-for-FmtLowerHex%3CT%3E"],[263,"impl-LowerHex-for-FmtLowerHex%3CT%3E"],[264,"impl-Display-for-FmtLowerHex%3CT%3E"],[265,"impl-Debug-for-FmtLowerHex%3CT%3E"],[266,"impl-LowerExp-for-FmtLowerHex%3CT%3E"],[267,"impl-Pointer-for-FmtLowerHex%3CT%3E"],[268,"impl-Binary-for-FmtLowerHex%3CT%3E"],[269,"impl-Pointer-for-FmtOctal%3CT%3E"],[270,"impl-LowerHex-for-FmtOctal%3CT%3E"],[271,"impl-UpperExp-for-FmtOctal%3CT%3E"],[272,"impl-Octal-for-FmtOctal%3CT%3E"],[273,"impl-Debug-for-FmtOctal%3CT%3E"],[274,"impl-LowerExp-for-FmtOctal%3CT%3E"],[275,"impl-UpperHex-for-FmtOctal%3CT%3E"],[276,"impl-Binary-for-FmtOctal%3CT%3E"],[277,"impl-Display-for-FmtOctal%3CT%3E"],[278,"impl-Debug-for-FmtPointer%3CT%3E"],[279,"impl-Octal-for-FmtPointer%3CT%3E"],[280,"impl-Pointer-for-FmtPointer%3CT%3E"],[281,"impl-Display-for-FmtPointer%3CT%3E"],[282,"impl-LowerHex-for-FmtPointer%3CT%3E"],[283,"impl-UpperHex-for-FmtPointer%3CT%3E"],[284,"impl-Binary-for-FmtPointer%3CT%3E"],[285,"impl-LowerExp-for-FmtPointer%3CT%3E"],[286,"impl-UpperExp-for-FmtPointer%3CT%3E"],[287,"impl-LowerExp-for-FmtUpperExp%3CT%3E"],[288,"impl-Octal-for-FmtUpperExp%3CT%3E"],[289,"impl-UpperExp-for-FmtUpperExp%3CT%3E"],[290,"impl-Display-for-FmtUpperExp%3CT%3E"],[291,"impl-UpperHex-for-FmtUpperExp%3CT%3E"],[292,"impl-Debug-for-FmtUpperExp%3CT%3E"],[293,"impl-LowerHex-for-FmtUpperExp%3CT%3E"],[294,"impl-Pointer-for-FmtUpperExp%3CT%3E"],[295,"impl-Binary-for-FmtUpperExp%3CT%3E"],[296,"impl-LowerHex-for-FmtUpperHex%3CT%3E"],[297,"impl-UpperExp-for-FmtUpperHex%3CT%3E"],[298,"impl-Binary-for-FmtUpperHex%3CT%3E"],[299,"impl-Debug-for-FmtUpperHex%3CT%3E"],[300,"impl-Pointer-for-FmtUpperHex%3CT%3E"],[301,"impl-UpperHex-for-FmtUpperHex%3CT%3E"],[302,"impl-Octal-for-FmtUpperHex%3CT%3E"],[303,"impl-Display-for-FmtUpperHex%3CT%3E"],[304,"impl-LowerExp-for-FmtUpperHex%3CT%3E"]]}],\
["x86",{"doc":"","t":"GPPPPCCCCNNNCCCCCNCNNQQHQNCCCCHCQCCCNNNCPPKGPPGGGGPPFPPGPPPPPPPPPPGPPPNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNCMMMMNMNNNNNNNNNNNNNNNNMMNNNNNNNNNMCNNNCFNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNFSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSNNNNNNNNNNNNNNNNNNNNNNCCCCCFTTTTTTTTTTTTTTTTTTTTTNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNTTSSSTTTTFSFTTSTTFTTIFFTIFFTTFTTTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNOOOOOOOOOOOOOOOOONNOONOOONOOOONNNCCCCCCCCTTTTTSSSTTTTTTSFFSFSSSTTTTTSTTFTTTTTIFFIFFIFFSIFFTTIFFTTTTTFTTTTTTTTTTTTTTTTTTTTTTTTTFTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHTTTTTTTTTTTTTTTTTTTTTFNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNENNNNNNNNFTNNNNNNQQNHHHNNNHNNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFNNNNNNNOONOOOOONNNNNHHHHHHHHHTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTFFTTTTTTTTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHPFGPPPPPSPFFGFFGPFFPFFGPPPFPPPFFFGGFFFFFFPPPPGFPPPPPFFFFFPFFPFPPPPPFFPPFFFFFFPPPFFPPPFGFFFFPFPFPFGFPPPPPPPFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHTTTTTSTTGGGPPPPPPPPPPFFTTTPPTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFONNNNNNHHHOHNNHHNNNHHHHHHHHHSSSSSSSSJSTSSFSSSTSTFTSSSTSTSNNNNNNNNNNNNNNNNONHNHNNNNNNNNNNNNNNNNNNNNNNONNONNNNONNNNNNNNNNNOSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHHKKMMHHHHHHHHKPPPGGFFPPPPPPPPKPPPPPKTTTTTPPPPPPPPKFGGTTPPPKPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNNHMNNNNNHNNNNNNHNMNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNMNNNNNNNNNNNNNNNNMNNNEHHHHHONNNNNNNNNNNNNNNNHNNNMNNMNNNNNNNNNNNNNNNNNMNNNNNNNNNNNOHEHHHHHPPIGPPNNNNNNNNCCCCCTSSTTTTTSSTTSSSSSSSTTTTTTTTTTTTTSSTTSSSSSSSSSSSSSTSSSTFFTTTTTTSSSSTTTTTTTTTTTTTSSTTTSSTTSSSSSTSSSSFFTTTTTTTTTSSSTFSSSSSTTTTTTTTTTTTSSSSTSSSSSSSSSSSSSSSSSSTSSSTSSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS","n":["Ring","Ring0","Ring1","Ring2","Ring3","apic","bits16","bits32","bits64","borrow","borrow_mut","clone","controlregs","cpuid","current","debugregs","dtables","eq","fence","fmt","from","fs_deref","gs_deref","halt","int","into","io","irq","msr","random","rdpid","segmentation","syscall","task","time","tlb","try_from","try_into","type_id","vmx","AllExcludingSelf","AllIncludingSelf","ApicControl","ApicId","Assert","Deassert","DeliveryMode","DeliveryStatus","DestinationMode","DestinationShorthand","Edge","Fixed","Icr","Idle","Init","Level","Level","Logical","LowestPriority","Myself","NMI","NoShorthand","Physical","SMI","SendPending","StartUp","TriggerMode","X2Apic","XApic","_Reserved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsp","clone","eoi","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_x2apic","for_xapic","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into","ioapic","ipi_init","ipi_init_deassert","ipi_startup","logical_id","lower","send_ipi","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_enable","tsc_set","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper","version","x2apic","x2apic_logical_cluster_address","x2apic_logical_cluster_id","x2apic_logical_id","xapic","IoApic","borrow","borrow_mut","disable_all","enable","from","id","into","new","supported_interrupts","try_from","try_into","type_id","version","X2APIC","attach","borrow","borrow_mut","bsp","default","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","logical_id","new","send_ipi","send_self_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","XAPIC","XAPIC_EOI","XAPIC_ESR","XAPIC_ICR0","XAPIC_ICR1","XAPIC_ID","XAPIC_IRR0","XAPIC_IRR1","XAPIC_IRR2","XAPIC_IRR3","XAPIC_IRR4","XAPIC_IRR5","XAPIC_IRR6","XAPIC_IRR7","XAPIC_ISR0","XAPIC_ISR1","XAPIC_ISR2","XAPIC_ISR3","XAPIC_ISR4","XAPIC_ISR5","XAPIC_ISR6","XAPIC_ISR7","XAPIC_LDR","XAPIC_LVT_CMCI","XAPIC_LVT_ERROR","XAPIC_LVT_LINT0","XAPIC_LVT_LINT1","XAPIC_LVT_PMI","XAPIC_LVT_THERMAL","XAPIC_LVT_TIMER","XAPIC_PPR","XAPIC_SVR","XAPIC_TIMER_CURRENT_COUNT","XAPIC_TIMER_DIV_CONF","XAPIC_TIMER_INIT_COUNT","XAPIC_TMR0","XAPIC_TMR1","XAPIC_TMR2","XAPIC_TMR3","XAPIC_TMR4","XAPIC_TMR5","XAPIC_TMR6","XAPIC_TMR7","XAPIC_TPR","XAPIC_VERSION","attach","borrow","borrow_mut","bsp","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","logical_id","new","send_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","segmentation","eflags","paging","segmentation","task","EFlags","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clac","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","hash","insert","intersection","intersects","into","is_all","is_empty","new","not","partial_cmp","remove","set","stac","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","G","G","IOAddr","LARGE_PAGE_SIZE","LargePage","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PD","PDEntry","PDFlags","PS","PT","PTEntry","PTFlags","PWT","PWT","Page","RW","RW","US","US","VAddr","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_base_page","align_down_to_large_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_base_page","align_up_to_large_page","align_up_to_large_page","align_up_to_large_page","all","all","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_u32","as_u32","as_u32","as_usize","as_usize","as_usize","base_page_offset","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","extend","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_u32","from_usize","hash","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_aligned","is_aligned","is_aligned","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_global","is_global","is_large_page_aligned","is_large_page_aligned","is_large_page_aligned","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_zero","is_zero","is_zero","large_page_offset","large_page_offset","large_page_offset","new","new","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pt_index","rem","rem","rem","rem","rem","rem","rem","rem","rem","remove","remove","set","set","shr","shr","shr","shr","shr","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","zero","zero","zero","TaskStateSegment","borrow","borrow_mut","clone","cr3","cs","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","es","esi","esp","esp0","esp1","esp2","fmt","from","fs","gs","into","iobp_offset","ldtr","link","new","ss","ss0","ss1","ss2","try_from","try_into","type_id","paging","registers","rflags","segmentation","sgx","syscall","task","vmx","A","A","A","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","D","G","G","G","HUGE_PAGE_SIZE","HugePage","IOAddr","LARGE_PAGE_SIZE","LargePage","MAXPHYADDR","MAXVADDR","MAXVADDR_BITS","P","P","P","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PCD","PCD","PCD","PD","PDEntry","PDFlags","PDPT","PDPTEntry","PDPTFlags","PML4","PML4Entry","PML4Flags","PML4_SLOT_SIZE","PML5","PML5Entry","PML5Flags","PS","PS","PT","PTEntry","PTFlags","PWT","PWT","PWT","PWT","PWT","Page","RW","RW","RW","RW","RW","US","US","US","US","US","USER_10","USER_10","USER_10","USER_10","USER_10","USER_11","USER_11","USER_11","USER_11","USER_11","USER_9","USER_9","USER_9","USER_9","USER_9","VAddr","XD","XD","XD","XD","XD","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","address","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_base_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_large_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_base_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_large_page","align_up_to_large_page","align_up_to_large_page","all","all","all","all","all","as_mut_ptr","as_ptr","as_u64","as_u64","as_u64","as_usize","as_usize","as_usize","base_page_offset","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_u64","from_usize","hash","hash","hash","hash","hash","hash","hash","hash","huge_page_offset","huge_page_offset","huge_page_offset","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_accessed","is_accessed","is_accessed","is_aligned","is_aligned","is_aligned","is_all","is_all","is_all","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_empty","is_empty","is_empty","is_global","is_global","is_huge_page_aligned","is_huge_page_aligned","is_huge_page_aligned","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_large_page_aligned","is_large_page_aligned","is_large_page_aligned","is_page","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_present","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_writeable","is_writeable","is_writeable","is_zero","is_zero","is_zero","large_page_offset","large_page_offset","large_page_offset","new","new","new","new","new","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pdpt_index","pml4_index","pml5_index","pt_index","rem","rem","rem","rem","rem","rem","rem","rem","rem","remove","remove","remove","remove","remove","set","set","set","set","set","shr","shr","shr","shr","shr","split","split","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","zero","zero","zero","rbp","rip","rsp","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","RFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clac","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","from_raw","hash","insert","intersection","intersects","into","is_all","is_empty","new","not","partial_cmp","read","remove","set","set","stac","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","Descriptor64","NULL","borrow","borrow_mut","clone","default","fmt","from","fs_deref","gs_deref","into","load_cs","rdfsbase","rdgsbase","set_base_limit","set_ist","set_selector_offset","swapgs","try_from","try_into","type_id","wrfsbase","wrgsbase","encls_create","encls_eadd","encls_eaug","encls_eblock","encls_edbgrd","encls_edbgwr","encls_eextend","encls_einit","encls_eldb","encls_eldu","encls_emodpr","encls_emodt","encls_epa","encls_eremove","encls_etrack","encls_ewb","enclu_eaccept","enclu_eacceptcopy","enclu_eenter","enclu_eexit","enclu_egetkey","enclu_emodepe","enclu_ereport","enclu_eresume","syscall0","syscall1","syscall2","syscall3","syscall4","syscall5","syscall6","TaskStateSegment","borrow","borrow_mut","clone","default","fmt","from","into","iomap_base","ist","new","reserved","reserved2","reserved3","reserved4","rsp","set_ist","set_rsp","try_from","try_into","type_id","vmclear","vmlaunch","vmptrld","vmptrst","vmread","vmresume","vmwrite","vmxoff","vmxon","CR0_ALIGNMENT_MASK","CR0_CACHE_DISABLE","CR0_EMULATE_COPROCESSOR","CR0_ENABLE_PAGING","CR0_EXTENSION_TYPE","CR0_MONITOR_COPROCESSOR","CR0_NOT_WRITE_THROUGH","CR0_NUMERIC_ERROR","CR0_PROTECTED_MODE","CR0_TASK_SWITCHED","CR0_WRITE_PROTECT","CR4_DEBUGGING_EXTENSIONS","CR4_ENABLE_FSGSBASE","CR4_ENABLE_GLOBAL_PAGES","CR4_ENABLE_LA57","CR4_ENABLE_MACHINE_CHECK","CR4_ENABLE_OS_XSAVE","CR4_ENABLE_PAE","CR4_ENABLE_PCID","CR4_ENABLE_PPMC","CR4_ENABLE_PROTECTION_KEY","CR4_ENABLE_PSE","CR4_ENABLE_SMAP","CR4_ENABLE_SMEP","CR4_ENABLE_SMX","CR4_ENABLE_SSE","CR4_ENABLE_UMIP","CR4_ENABLE_VME","CR4_ENABLE_VMX","CR4_TIME_STAMP_DISABLE","CR4_UNMASKED_SSE","CR4_VIRTUAL_INTERRUPTS","Cr0","Cr4","XCR0_AVX_STATE","XCR0_BNDCSR_STATE","XCR0_BNDREG_STATE","XCR0_FPU_MMX_STATE","XCR0_HI16_ZMM_STATE","XCR0_OPMASK_STATE","XCR0_PKRU_STATE","XCR0_SSE_STATE","XCR0_ZMM_HI256_STATE","Xcr0","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","cr0","cr0_write","cr2","cr2_write","cr3","cr3_write","cr4","cr4_write","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","not","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","union","xcr0","xcr0_write","ACRN","ApmInfo","Associativity","Avx","Avx512Opmask","Avx512ZmmHi16","Avx512ZmmHi256","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","Die","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedRegisterStateLocation","ExtendedRegisterType","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","Hdc","HyperV","Hypervisor","HypervisorInfo","Ia32Xss","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","LoadOnly","MemBwAllocationInfo","MemoryEncryptionInfo","Module","MonitorMwaitInfo","MpxBndcsr","MpxBndregs","NWay","Null","Null","PerformanceMonitoringInfo","PerformanceOptimizationInfo","Pkru","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTopologyInfo","ProcessorTraceInfo","Pt","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","StoreOnly","SvmFeatures","TLB","ThermalPowerInfo","Tile","Tlb1gbPageInfo","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","Unknown","VMware","VendorInfo","Xcr0","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","core_id","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dtlb_l1_1gb_associativity","dtlb_l1_1gb_size","dtlb_l2_1gb_associativity","dtlb_l2_1gb_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_extended_topology_info_v2","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_performance_optimization_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_topology_info","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_svm_info","get_thermal_power_info","get_tlb_1gb_page_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_av512vbmi2","has_avic","has_avx","has_avx2","has_avx512_ifma","has_avx512bitalg","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_avx512vnni","has_avx512vpopcntdq","has_bmi1","has_bmi2","has_cet_ss","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_decode_assists","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_flush_by_asid","has_fma","has_fma4","has_fp128","has_fp256","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_gfni","has_gif","has_gmet","has_hdc","has_hle","has_host_mce_override","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_la57","has_lahf_sahf","has_lbr_virtualization","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_movu","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_nested_paging","has_nrip","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pause_filter","has_pause_filter_threshold","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_spec_ctrl","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_sss_check","has_ssse3","has_succor","has_svm","has_svm_lock","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tlb_ctrl","has_tm","has_tm","has_tm2","has_tme_en","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_tsc_rate_msr","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vaes","has_vmcb_clean_bits","has_vme","has_vmpl","has_vmsave_virtualization","has_vmx","has_volt_id_ctrl","has_vpclmulqdq","has_vte","has_waitpkg","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","itlb_l1_1gb_associativity","itlb_l1_1gb_size","itlb_l2_1gb_associativity","itlb_l2_1gb_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","location","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","new","next","next","next","next","next","next","next","node_id","nodes_per_processor","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","register","revision","rmid_range","secs_attributes","serial","serial_all","serial_lower","serial_middle","serial_upper","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_asids","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","threads_per_core","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","cpuid_count","B0","B1","B2","B3","BD","BREAKPOINT_REGS","BS","BT","BreakCondition","BreakSize","Breakpoint","Bytes1","Bytes2","Bytes4","Bytes8","DataReadsWrites","DataWrites","Dr0","Dr1","Dr2","Dr3","Dr6","Dr7","EMPTY","GD_BIT","GE_BIT","Instructions","IoReadsWrites","LE_BIT","RTM","RTM_BIT","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","complement","configure","configure_bp","contains","default","difference","disable_bp","disable_global","disable_local","dr","dr0","dr0_write","dr1","dr1_write","dr2","dr2_write","dr3","dr3_write","dr6","dr6_write","dr7","dr7_write","empty","enable_bp","enable_exact_global_bp","enable_exact_local_bp","enable_general_detect","enable_global","enable_local","enable_rtm","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","into","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","write","DescriptorTablePointer","base","borrow","borrow_mut","default","fmt","from","into","ldtr","lgdt","lidt","limit","load_ldtr","new","new_from_slice","sgdt","sidt","try_from","try_into","type_id","lfence","mfence","sfence","inb","inl","inw","outb","outl","outw","ALIGNMENT_CHECK_VECTOR","BOUND_RANGE_EXCEEDED_VECTOR","BREAKPOINT_VECTOR","COPROCESSOR_SEGMENT_OVERRUN_VECTOR","DEBUG_VECTOR","DEVICE_NOT_AVAILABLE_VECTOR","DIVIDE_ERROR_VECTOR","DOUBLE_FAULT_VECTOR","EXCEPTIONS","GENERAL_PROTECTION_FAULT_VECTOR","ID","INVALID_OPCODE_VECTOR","INVALID_TSS_VECTOR","InterruptDescription","MACHINE_CHECK_VECTOR","NONMASKABLE_INTERRUPT_VECTOR","OVERFLOW_VECTOR","P","PAGE_FAULT_VECTOR","PK","PageFaultError","RSVD","SEGMENT_NOT_PRESENT_VECTOR","SIMD_FLOATING_POINT_VECTOR","STACK_SEGEMENT_FAULT_VECTOR","US","VIRTUALIZATION_VECTOR","WR","X87_FPU_VECTOR","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","complement","contains","description","difference","disable","empty","enable","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","irqtype","is_all","is_empty","mnemonic","not","partial_cmp","remove","set","source","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","vector","APIC_BASE","BIOS_UPDT_TRIG","DEBUGCTLMSR","EBL_CR_POWERON","IA32_APERF","IA32_APIC_BASE","IA32_A_PMC0","IA32_A_PMC1","IA32_A_PMC2","IA32_A_PMC3","IA32_A_PMC4","IA32_A_PMC5","IA32_A_PMC6","IA32_A_PMC7","IA32_BIOS_SIGN_ID","IA32_BIOS_UPDT_TRIG","IA32_CLOCK_MODULATION","IA32_CPU_DCA_CAP","IA32_CSTAR","IA32_DCA_0_CAP","IA32_DEBUGCTL","IA32_DS_AREA","IA32_EFER","IA32_ENERGY_PERF_BIAS","IA32_FEATURE_CONTROL","IA32_FIXED_CTR0","IA32_FIXED_CTR1","IA32_FIXED_CTR2","IA32_FIXED_CTR_CTRL","IA32_FMASK","IA32_FS_BASE","IA32_GS_BASE","IA32_KERNEL_GSBASE","IA32_LSTAR","IA32_MC0_ADDR","IA32_MC0_ADDR1","IA32_MC0_CTL","IA32_MC0_CTL2","IA32_MC0_MISC","IA32_MC0_STATUS","IA32_MC10_ADDR1","IA32_MC10_CTL","IA32_MC10_CTL2","IA32_MC10_MISC","IA32_MC10_STATUS","IA32_MC11_ADDR1","IA32_MC11_CTL","IA32_MC11_CTL2","IA32_MC11_MISC","IA32_MC11_STATUS","IA32_MC12_ADDR1","IA32_MC12_CTL","IA32_MC12_CTL2","IA32_MC12_MISC","IA32_MC12_STATUS","IA32_MC13_ADDR1","IA32_MC13_CTL","IA32_MC13_CTL2","IA32_MC13_MISC","IA32_MC13_STATUS","IA32_MC14_ADDR1","IA32_MC14_CTL","IA32_MC14_CTL2","IA32_MC14_MISC","IA32_MC14_STATUS","IA32_MC15_ADDR1","IA32_MC15_CTL","IA32_MC15_CTL2","IA32_MC15_MISC","IA32_MC15_STATUS","IA32_MC16_ADDR1","IA32_MC16_CTL","IA32_MC16_CTL2","IA32_MC16_MISC","IA32_MC16_STATUS","IA32_MC17_ADDR1","IA32_MC17_CTL","IA32_MC17_CTL2","IA32_MC17_MISC","IA32_MC17_STATUS","IA32_MC18_ADDR1","IA32_MC18_CTL","IA32_MC18_CTL2","IA32_MC18_MISC","IA32_MC18_STATUS","IA32_MC19_ADDR1","IA32_MC19_CTL","IA32_MC19_CTL2","IA32_MC19_MISC","IA32_MC19_STATUS","IA32_MC1_ADDR","IA32_MC1_ADDR2","IA32_MC1_CTL","IA32_MC1_CTL2","IA32_MC1_MISC","IA32_MC1_STATUS","IA32_MC20_ADDR1","IA32_MC20_CTL","IA32_MC20_CTL2","IA32_MC20_MISC","IA32_MC20_STATUS","IA32_MC21_ADDR1","IA32_MC21_CTL","IA32_MC21_CTL2","IA32_MC21_MISC","IA32_MC21_STATUS","IA32_MC2_ADDR","IA32_MC2_ADDR1","IA32_MC2_CTL","IA32_MC2_CTL2","IA32_MC2_MISC","IA32_MC2_STATUS","IA32_MC3_ADDR","IA32_MC3_ADDR1","IA32_MC3_CTL","IA32_MC3_CTL2","IA32_MC3_MISC","IA32_MC3_STATUS","IA32_MC4_ADDR","IA32_MC4_ADDR1","IA32_MC4_CTL","IA32_MC4_CTL2","IA32_MC4_MISC","IA32_MC4_STATUS","IA32_MC5_ADDR1","IA32_MC5_CTL","IA32_MC5_CTL2","IA32_MC5_MISC","IA32_MC5_STATUS","IA32_MC6_ADDR1","IA32_MC6_CTL","IA32_MC6_CTL2","IA32_MC6_MISC","IA32_MC6_STATUS","IA32_MC7_ADDR1","IA32_MC7_CTL","IA32_MC7_CTL2","IA32_MC7_MISC","IA32_MC7_STATUS","IA32_MC8_ADDR1","IA32_MC8_CTL","IA32_MC8_CTL2","IA32_MC8_MISC","IA32_MC8_STATUS","IA32_MC9_ADDR1","IA32_MC9_CTL","IA32_MC9_CTL2","IA32_MC9_MISC","IA32_MC9_STATUS","IA32_MCG_CAP","IA32_MCG_CTL","IA32_MCG_STATUS","IA32_MISC_ENABLE","IA32_MONITOR_FILTER_LINE_SIZE","IA32_MONITOR_FILTER_SIZE","IA32_MPERF","IA32_MTRRCAP","IA32_MTRR_DEF_TYPE","IA32_MTRR_FIX16K_80000","IA32_MTRR_FIX16K_A0000","IA32_MTRR_FIX4K_C0000","IA32_MTRR_FIX4K_C8000","IA32_MTRR_FIX4K_D0000","IA32_MTRR_FIX4K_D8000","IA32_MTRR_FIX4K_E0000","IA32_MTRR_FIX4K_E8000","IA32_MTRR_FIX4K_F0000","IA32_MTRR_FIX4K_F8000","IA32_MTRR_FIX64K_00000","IA32_MTRR_PHYSBASE0","IA32_MTRR_PHYSBASE1","IA32_MTRR_PHYSBASE2","IA32_MTRR_PHYSBASE3","IA32_MTRR_PHYSBASE4","IA32_MTRR_PHYSBASE5","IA32_MTRR_PHYSBASE6","IA32_MTRR_PHYSBASE7","IA32_MTRR_PHYSBASE8","IA32_MTRR_PHYSBASE9","IA32_MTRR_PHYSMASK0","IA32_MTRR_PHYSMASK1","IA32_MTRR_PHYSMASK2","IA32_MTRR_PHYSMASK3","IA32_MTRR_PHYSMASK4","IA32_MTRR_PHYSMASK5","IA32_MTRR_PHYSMASK6","IA32_MTRR_PHYSMASK7","IA32_MTRR_PHYSMASK8","IA32_MTRR_PHYSMASK9","IA32_P5_MC_ADDR","IA32_P5_MC_TYPE","IA32_PACKAGE_THERM_INTERRUPT","IA32_PACKAGE_THERM_STATUS","IA32_PAT","IA32_PEBS_ENABLE","IA32_PERFEVTSEL0","IA32_PERFEVTSEL1","IA32_PERFEVTSEL2","IA32_PERFEVTSEL3","IA32_PERFEVTSEL4","IA32_PERFEVTSEL5","IA32_PERFEVTSEL6","IA32_PERFEVTSEL7","IA32_PERF_CAPABILITIES","IA32_PERF_CTL","IA32_PERF_GLOBAL_CTRL","IA32_PERF_GLOBAL_OVF_CTRL","IA32_PERF_GLOBAL_STAUS","IA32_PERF_STATUS","IA32_PLATFORM_DCA_CAP","IA32_PLATFORM_ID","IA32_PMC0","IA32_PMC1","IA32_PMC2","IA32_PMC3","IA32_PMC4","IA32_PMC5","IA32_PMC6","IA32_PMC7","IA32_PQR_ASSOC","IA32_QM_CTR","IA32_QM_EVTSEL","IA32_SMBASE","IA32_SMM_MONITOR_CTL","IA32_SMRR_PHYSBASE","IA32_SMRR_PHYSMASK","IA32_STAR","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IA32_THERM_INTERRUPT","IA32_THERM_STATUS","IA32_TIME_STAMP_COUNTER","IA32_TSC_ADJUST","IA32_TSC_AUX","IA32_TSC_DEADLINE","IA32_VMX_BASIC","IA32_VMX_CR0_FIXED0","IA32_VMX_CR0_FIXED1","IA32_VMX_CR4_FIXED0","IA32_VMX_CR4_FIXED1","IA32_VMX_CRO_FIXED0","IA32_VMX_CRO_FIXED1","IA32_VMX_ENTRY_CTLS","IA32_VMX_EPT_VPID_CAP","IA32_VMX_EPT_VPID_ENUM","IA32_VMX_EXIT_CTLS","IA32_VMX_FMFUNC","IA32_VMX_MISC","IA32_VMX_PINBASED_CTLS","IA32_VMX_PROCBASED_CTLS","IA32_VMX_PROCBASED_CTLS2","IA32_VMX_TRUE_ENTRY_CTLS","IA32_VMX_TRUE_EXIT_CTLS","IA32_VMX_TRUE_PINBASED_CTLS","IA32_VMX_TRUE_PROCBASED_CTLS","IA32_VMX_VMCS_ENUM","IA32_VMX_VMFUNC","IA32_X2APIC_APICID","IA32_X2APIC_CUR_COUNT","IA32_X2APIC_DIV_CONF","IA32_X2APIC_EOI","IA32_X2APIC_ESR","IA32_X2APIC_ICR","IA32_X2APIC_INIT_COUNT","IA32_X2APIC_IRR0","IA32_X2APIC_IRR1","IA32_X2APIC_IRR2","IA32_X2APIC_IRR3","IA32_X2APIC_IRR4","IA32_X2APIC_IRR5","IA32_X2APIC_IRR6","IA32_X2APIC_IRR7","IA32_X2APIC_ISR0","IA32_X2APIC_ISR1","IA32_X2APIC_ISR2","IA32_X2APIC_ISR3","IA32_X2APIC_ISR4","IA32_X2APIC_ISR5","IA32_X2APIC_ISR6","IA32_X2APIC_ISR7","IA32_X2APIC_LDR","IA32_X2APIC_LVT_CMCI","IA32_X2APIC_LVT_ERROR","IA32_X2APIC_LVT_LINT0","IA32_X2APIC_LVT_LINT1","IA32_X2APIC_LVT_PMI","IA32_X2APIC_LVT_THERMAL","IA32_X2APIC_LVT_TIMER","IA32_X2APIC_PPR","IA32_X2APIC_SELF_IPI","IA32_X2APIC_SIVR","IA32_X2APIC_TMR0","IA32_X2APIC_TMR1","IA32_X2APIC_TMR2","IA32_X2APIC_TMR3","IA32_X2APIC_TMR4","IA32_X2APIC_TMR5","IA32_X2APIC_TMR6","IA32_X2APIC_TMR7","IA32_X2APIC_TPR","IA32_X2APIC_VERSION","LASTBRANCHFROMIP","LASTBRANCHTOIP","LASTINTFROMIP","LASTINTTOIP","MC0_ADDR","MC0_CTL","MC0_MISC","MC0_STATUS","MC1_ADDR","MC1_CTL","MC1_MISC","MC1_STATUS","MC2_ADDR","MC2_CTL","MC2_MISC","MC2_STATUS","MC3_ADDR","MC3_CTL","MC3_MISC","MC3_STATUS","MC4_ADDR","MC4_CTL","MC4_MISC","MC4_STATUS","MCG_CAP","MCG_CTL","MCG_STATUS","MSR_ALF_ESCR0","MSR_ALF_ESCR1","MSR_B0_PMON_BOX_CTRL","MSR_B0_PMON_BOX_OVF_CTRL","MSR_B0_PMON_BOX_STATUS","MSR_B0_PMON_CTR0","MSR_B0_PMON_CTR1","MSR_B0_PMON_CTR2","MSR_B0_PMON_CTR3","MSR_B0_PMON_EVNT_SEL0","MSR_B0_PMON_EVNT_SEL1","MSR_B0_PMON_EVNT_SEL2","MSR_B0_PMON_EVNT_SEL3","MSR_B0_PMON_MASK","MSR_B0_PMON_MATCH","MSR_B1_PMON_BOX_CTRL","MSR_B1_PMON_BOX_OVF_CTRL","MSR_B1_PMON_BOX_STATUS","MSR_B1_PMON_CTR0","MSR_B1_PMON_CTR1","MSR_B1_PMON_CTR2","MSR_B1_PMON_CTR3","MSR_B1_PMON_EVNT_SEL0","MSR_B1_PMON_EVNT_SEL1","MSR_B1_PMON_EVNT_SEL2","MSR_B1_PMON_EVNT_SEL3","MSR_B1_PMON_MASK","MSR_B1_PMON_MATCH","MSR_BBL_CR_CTL","MSR_BBL_CR_CTL3","MSR_BPU_CCCR0","MSR_BPU_CCCR1","MSR_BPU_CCCR2","MSR_BPU_CCCR3","MSR_BPU_COUNTER0","MSR_BPU_COUNTER1","MSR_BPU_COUNTER2","MSR_BPU_COUNTER3","MSR_BPU_ESCR0","MSR_BPU_ESCR1","MSR_BSU_ESCR0","MSR_BSU_ESCR1","MSR_C0_PMON_BOX_CTRL","MSR_C0_PMON_BOX_OVF_CTRL","MSR_C0_PMON_BOX_STATUS","MSR_C0_PMON_CTR0","MSR_C0_PMON_CTR1","MSR_C0_PMON_CTR2","MSR_C0_PMON_CTR3","MSR_C0_PMON_CTR4","MSR_C0_PMON_CTR5","MSR_C0_PMON_EVNT_SEL0","MSR_C0_PMON_EVNT_SEL1","MSR_C0_PMON_EVNT_SEL2","MSR_C0_PMON_EVNT_SEL3","MSR_C0_PMON_EVNT_SEL4","MSR_C0_PMON_EVNT_SEL5","MSR_C1_PMON_BOX_CTRL","MSR_C1_PMON_BOX_OVF_CTRL","MSR_C1_PMON_BOX_STATUS","MSR_C1_PMON_CTR0","MSR_C1_PMON_CTR1","MSR_C1_PMON_CTR2","MSR_C1_PMON_CTR3","MSR_C1_PMON_CTR4","MSR_C1_PMON_CTR5","MSR_C1_PMON_EVNT_SEL0","MSR_C1_PMON_EVNT_SEL1","MSR_C1_PMON_EVNT_SEL2","MSR_C1_PMON_EVNT_SEL3","MSR_C1_PMON_EVNT_SEL4","MSR_C1_PMON_EVNT_SEL5","MSR_C2_PMON_BOX_CTRL","MSR_C2_PMON_BOX_OVF_CTRL","MSR_C2_PMON_BOX_STATUS","MSR_C2_PMON_CTR0","MSR_C2_PMON_CTR1","MSR_C2_PMON_CTR2","MSR_C2_PMON_CTR3","MSR_C2_PMON_CTR4","MSR_C2_PMON_CTR5","MSR_C2_PMON_EVNT_SEL0","MSR_C2_PMON_EVNT_SEL1","MSR_C2_PMON_EVNT_SEL2","MSR_C2_PMON_EVNT_SEL3","MSR_C2_PMON_EVNT_SEL4","MSR_C2_PMON_EVNT_SEL5","MSR_C3_PMON_BOX_CTRL","MSR_C3_PMON_BOX_OVF_CTRL","MSR_C3_PMON_BOX_STATUS","MSR_C3_PMON_CTR0","MSR_C3_PMON_CTR1","MSR_C3_PMON_CTR2","MSR_C3_PMON_CTR3","MSR_C3_PMON_CTR4","MSR_C3_PMON_CTR5","MSR_C3_PMON_EVNT_SEL0","MSR_C3_PMON_EVNT_SEL1","MSR_C3_PMON_EVNT_SEL2","MSR_C3_PMON_EVNT_SEL3","MSR_C3_PMON_EVNT_SEL4","MSR_C3_PMON_EVNT_SEL5","MSR_C4_PMON_BOX_CTRL","MSR_C4_PMON_BOX_OVF_CTRL","MSR_C4_PMON_BOX_STATUS","MSR_C4_PMON_CTR0","MSR_C4_PMON_CTR1","MSR_C4_PMON_CTR2","MSR_C4_PMON_CTR3","MSR_C4_PMON_CTR4","MSR_C4_PMON_CTR5","MSR_C4_PMON_EVNT_SEL0","MSR_C4_PMON_EVNT_SEL1","MSR_C4_PMON_EVNT_SEL2","MSR_C4_PMON_EVNT_SEL3","MSR_C4_PMON_EVNT_SEL4","MSR_C4_PMON_EVNT_SEL5","MSR_C5_PMON_BOX_CTRL","MSR_C5_PMON_BOX_OVF_CTRL","MSR_C5_PMON_BOX_STATUS","MSR_C5_PMON_CTR0","MSR_C5_PMON_CTR1","MSR_C5_PMON_CTR2","MSR_C5_PMON_CTR3","MSR_C5_PMON_CTR4","MSR_C5_PMON_CTR5","MSR_C5_PMON_EVNT_SEL0","MSR_C5_PMON_EVNT_SEL1","MSR_C5_PMON_EVNT_SEL2","MSR_C5_PMON_EVNT_SEL3","MSR_C5_PMON_EVNT_SEL4","MSR_C5_PMON_EVNT_SEL5","MSR_C6_PMON_BOX_CTRL","MSR_C6_PMON_BOX_OVF_CTRL","MSR_C6_PMON_BOX_STATUS","MSR_C6_PMON_CTR0","MSR_C6_PMON_CTR1","MSR_C6_PMON_CTR2","MSR_C6_PMON_CTR3","MSR_C6_PMON_CTR4","MSR_C6_PMON_CTR5","MSR_C6_PMON_EVNT_SEL0","MSR_C6_PMON_EVNT_SEL1","MSR_C6_PMON_EVNT_SEL2","MSR_C6_PMON_EVNT_SEL3","MSR_C6_PMON_EVNT_SEL4","MSR_C6_PMON_EVNT_SEL5","MSR_C7_PMON_BOX_CTRL","MSR_C7_PMON_BOX_OVF_CTRL","MSR_C7_PMON_BOX_STATUS","MSR_C7_PMON_CTR0","MSR_C7_PMON_CTR1","MSR_C7_PMON_CTR2","MSR_C7_PMON_CTR3","MSR_C7_PMON_CTR4","MSR_C7_PMON_CTR5","MSR_C7_PMON_EVNT_SEL0","MSR_C7_PMON_EVNT_SEL1","MSR_C7_PMON_EVNT_SEL2","MSR_C7_PMON_EVNT_SEL3","MSR_C7_PMON_EVNT_SEL4","MSR_C7_PMON_EVNT_SEL5","MSR_C8_PMON_BOX_CTRL","MSR_C8_PMON_BOX_OVF_CTRL","MSR_C8_PMON_BOX_STATUS","MSR_C8_PMON_CTR0","MSR_C8_PMON_CTR1","MSR_C8_PMON_CTR2","MSR_C8_PMON_CTR3","MSR_C8_PMON_CTR4","MSR_C8_PMON_CTR5","MSR_C8_PMON_EVNT_SEL0","MSR_C8_PMON_EVNT_SEL1","MSR_C8_PMON_EVNT_SEL2","MSR_C8_PMON_EVNT_SEL3","MSR_C8_PMON_EVNT_SEL4","MSR_C8_PMON_EVNT_SEL5","MSR_C9_PMON_BOX_CTRL","MSR_C9_PMON_BOX_OVF_CTRL","MSR_C9_PMON_BOX_STATUS","MSR_C9_PMON_CTR0","MSR_C9_PMON_CTR1","MSR_C9_PMON_CTR2","MSR_C9_PMON_CTR3","MSR_C9_PMON_CTR4","MSR_C9_PMON_CTR5","MSR_C9_PMON_EVNT_SEL0","MSR_C9_PMON_EVNT_SEL1","MSR_C9_PMON_EVNT_SEL2","MSR_C9_PMON_EVNT_SEL3","MSR_C9_PMON_EVNT_SEL4","MSR_C9_PMON_EVNT_SEL5","MSR_CONFIG_TDP_CONTROL","MSR_CONFIG_TDP_LEVEL1","MSR_CONFIG_TDP_LEVEL2","MSR_CONFIG_TDP_NOMINAL","MSR_CORE_C1_RESIDENCY","MSR_CORE_C3_RESIDENCY","MSR_CORE_C4_RESIDENCY","MSR_CORE_C6_RESIDENCY","MSR_CORE_C7_RESIDENCY","MSR_CRU_ESCR0","MSR_CRU_ESCR1","MSR_CRU_ESCR2","MSR_CRU_ESCR3","MSR_CRU_ESCR4","MSR_CRU_ESCR5","MSR_DAC_ESCR0","MSR_DAC_ESCR1","MSR_DEBUGCTLA","MSR_DEBUGCTLB","MSR_DRAM_ENERGY_STATUS","MSR_DRAM_PERF_STATUS","MSR_DRAM_POWER_INFO","MSR_DRAM_POWER_LIMIT","MSR_EBC_FREQUENCY_ID","MSR_EBC_HARD_POWERON","MSR_EBC_SOFT_POWERON","MSR_EBL_CR_POWERON","MSR_EFSB_DRDY0","MSR_EFSB_DRDY1","MSR_EMON_L3_CTR_CTL0","MSR_EMON_L3_CTR_CTL1","MSR_EMON_L3_CTR_CTL2","MSR_EMON_L3_CTR_CTL3","MSR_EMON_L3_CTR_CTL4","MSR_EMON_L3_CTR_CTL5","MSR_EMON_L3_CTR_CTL6","MSR_EMON_L3_CTR_CTL7","MSR_EMON_L3_GL_CTL","MSR_ERROR_CONTROL","MSR_FIRM_ESCR0","MSR_FIRM_ESCR1","MSR_FLAME_CCCR0","MSR_FLAME_CCCR1","MSR_FLAME_CCCR2","MSR_FLAME_CCCR3","MSR_FLAME_COUNTER0","MSR_FLAME_COUNTER1","MSR_FLAME_COUNTER2","MSR_FLAME_COUNTER3","MSR_FLAME_ESCR0","MSR_FLAME_ESCR1","MSR_FSB_ESCR0","MSR_FSB_ESCR1","MSR_FSB_FREQ","MSR_GQ_SNOOP_MESF","MSR_IA32_ADDR0_END","MSR_IA32_ADDR0_START","MSR_IA32_ADDR1_END","MSR_IA32_ADDR1_START","MSR_IA32_ADDR2_END","MSR_IA32_ADDR2_START","MSR_IA32_ADDR3_END","MSR_IA32_ADDR3_START","MSR_IA32_CR3_MATCH","MSR_IA32_RTIT_CTL","MSR_IA32_RTIT_OUTPUT_BASE","MSR_IA32_RTIT_OUTPUT_MASK_PTRS","MSR_IA32_RTIT_STATUS","MSR_IA32_TSX_CTRL","MSR_IFSB_BUSQ0","MSR_IFSB_BUSQ1","MSR_IFSB_CNTR7","MSR_IFSB_CTL6","MSR_IFSB_SNPQ0","MSR_IFSB_SNPQ1","MSR_IQ_CCCR0","MSR_IQ_CCCR1","MSR_IQ_CCCR2","MSR_IQ_CCCR3","MSR_IQ_CCCR4","MSR_IQ_CCCR5","MSR_IQ_COUNTER4","MSR_IQ_COUNTER5","MSR_IQ_ESCR0","MSR_IQ_ESCR1","MSR_IS_ESCR0","MSR_IS_ESCR1","MSR_ITLB_ESCR0","MSR_ITLB_ESCR1","MSR_IX_ESCR0","MSR_LASTBRANCH_0","MSR_LASTBRANCH_0_FROM_IP","MSR_LASTBRANCH_0_TO_IP","MSR_LASTBRANCH_1","MSR_LASTBRANCH_10_FROM_IP","MSR_LASTBRANCH_10_TO_IP","MSR_LASTBRANCH_11_FROM_IP","MSR_LASTBRANCH_11_TO_IP","MSR_LASTBRANCH_12_FROM_IP","MSR_LASTBRANCH_12_TO_IP","MSR_LASTBRANCH_13_FROM_IP","MSR_LASTBRANCH_13_TO_IP","MSR_LASTBRANCH_14_FROM_IP","MSR_LASTBRANCH_14_TO_IP","MSR_LASTBRANCH_15_FROM_IP","MSR_LASTBRANCH_15_TO_IP","MSR_LASTBRANCH_1_FROM_IP","MSR_LASTBRANCH_1_TO_IP","MSR_LASTBRANCH_2","MSR_LASTBRANCH_2_FROM_IP","MSR_LASTBRANCH_2_TO_IP","MSR_LASTBRANCH_3","MSR_LASTBRANCH_3_FROM_IP","MSR_LASTBRANCH_3_TO_IP","MSR_LASTBRANCH_4","MSR_LASTBRANCH_4_FROM_IP","MSR_LASTBRANCH_4_TO_IP","MSR_LASTBRANCH_5","MSR_LASTBRANCH_5_FROM_IP","MSR_LASTBRANCH_5_TO_IP","MSR_LASTBRANCH_6","MSR_LASTBRANCH_6_FROM_IP","MSR_LASTBRANCH_6_TO_IP","MSR_LASTBRANCH_7","MSR_LASTBRANCH_7_FROM_IP","MSR_LASTBRANCH_7_TO_IP","MSR_LASTBRANCH_8_FROM_IP","MSR_LASTBRANCH_8_TO_IP","MSR_LASTBRANCH_9_FROM_IP","MSR_LASTBRANCH_9_TO_IP","MSR_LASTBRANCH_TOS","MSR_LBR_SELECT","MSR_LER_FROM_LIP","MSR_LER_TO_LIP","MSR_M0_PMON_ADDR_MASK","MSR_M0_PMON_ADDR_MATCH","MSR_M0_PMON_BOX_CTRL","MSR_M0_PMON_BOX_OVF_CTRL","MSR_M0_PMON_BOX_STATUS","MSR_M0_PMON_CTR0","MSR_M0_PMON_CTR1","MSR_M0_PMON_CTR2","MSR_M0_PMON_CTR3","MSR_M0_PMON_CTR4","MSR_M0_PMON_CTR5","MSR_M0_PMON_DSP","MSR_M0_PMON_EVNT_SEL0","MSR_M0_PMON_EVNT_SEL1","MSR_M0_PMON_EVNT_SEL2","MSR_M0_PMON_EVNT_SEL3","MSR_M0_PMON_EVNT_SEL4","MSR_M0_PMON_EVNT_SEL5","MSR_M0_PMON_ISS","MSR_M0_PMON_MAP","MSR_M0_PMON_MM_CONFIG","MSR_M0_PMON_MSC_THR","MSR_M0_PMON_PGT","MSR_M0_PMON_PLD","MSR_M0_PMON_TIMESTAMP","MSR_M0_PMON_ZDP","MSR_M1_PMON_ADDR_MASK","MSR_M1_PMON_ADDR_MATCH","MSR_M1_PMON_BOX_CTRL","MSR_M1_PMON_BOX_OVF_CTRL","MSR_M1_PMON_BOX_STATUS","MSR_M1_PMON_CTR0","MSR_M1_PMON_CTR1","MSR_M1_PMON_CTR2","MSR_M1_PMON_CTR3","MSR_M1_PMON_CTR4","MSR_M1_PMON_CTR5","MSR_M1_PMON_DSP","MSR_M1_PMON_EVNT_SEL0","MSR_M1_PMON_EVNT_SEL1","MSR_M1_PMON_EVNT_SEL2","MSR_M1_PMON_EVNT_SEL3","MSR_M1_PMON_EVNT_SEL4","MSR_M1_PMON_EVNT_SEL5","MSR_M1_PMON_ISS","MSR_M1_PMON_MAP","MSR_M1_PMON_MM_CONFIG","MSR_M1_PMON_MSC_THR","MSR_M1_PMON_PGT","MSR_M1_PMON_PLD","MSR_M1_PMON_TIMESTAMP","MSR_M1_PMON_ZDP","MSR_MC0_MISC","MSR_MC10_ADDR","MSR_MC10_CTL","MSR_MC10_MISC","MSR_MC10_STATUS","MSR_MC11_ADDR","MSR_MC11_CTL","MSR_MC11_MISC","MSR_MC11_STATUS","MSR_MC12_ADDR","MSR_MC12_CTL","MSR_MC12_MISC","MSR_MC12_STATUS","MSR_MC13_ADDR","MSR_MC13_CTL","MSR_MC13_MISC","MSR_MC13_STATUS","MSR_MC14_ADDR","MSR_MC14_CTL","MSR_MC14_MISC","MSR_MC14_STATUS","MSR_MC15_ADDR","MSR_MC15_CTL","MSR_MC15_MISC","MSR_MC15_STATUS","MSR_MC16_ADDR","MSR_MC16_CTL","MSR_MC16_MISC","MSR_MC16_STATUS","MSR_MC17_ADDR","MSR_MC17_CTL","MSR_MC17_MISC","MSR_MC17_STATUS","MSR_MC18_ADDR","MSR_MC18_CTL","MSR_MC18_MISC","MSR_MC18_STATUS","MSR_MC19_ADDR","MSR_MC19_CTL","MSR_MC19_MISC","MSR_MC19_STATUS","MSR_MC1_MISC","MSR_MC20_ADDR","MSR_MC20_CTL","MSR_MC20_MISC","MSR_MC20_STATUS","MSR_MC21_ADDR","MSR_MC21_CTL","MSR_MC21_MISC","MSR_MC21_STATUS","MSR_MC22_ADDR","MSR_MC22_CTL","MSR_MC22_MISC","MSR_MC22_STATUS","MSR_MC23_ADDR","MSR_MC23_CTL","MSR_MC23_MISC","MSR_MC23_STATUS","MSR_MC24_ADDR","MSR_MC24_CTL","MSR_MC24_MISC","MSR_MC24_STATUS","MSR_MC25_ADDR","MSR_MC25_CTL","MSR_MC25_MISC","MSR_MC25_STATUS","MSR_MC26_ADDR","MSR_MC26_CTL","MSR_MC26_MISC","MSR_MC26_STATUS","MSR_MC2_MISC","MSR_MC3_ADDR","MSR_MC3_CTL","MSR_MC3_MISC","MSR_MC3_STATUS","MSR_MC4_ADDR","MSR_MC4_CTL","MSR_MC4_CTL2","MSR_MC4_MISC","MSR_MC4_STATUS","MSR_MC5_ADDR","MSR_MC5_CTL","MSR_MC5_MISC","MSR_MC5_STATUS","MSR_MC6_ADDR","MSR_MC6_CTL","MSR_MC6_MISC","MSR_MC6_STATUS","MSR_MC7_ADDR","MSR_MC7_CTL","MSR_MC7_MISC","MSR_MC7_STATUS","MSR_MC8_ADDR","MSR_MC8_CTL","MSR_MC8_MISC","MSR_MC8_STATUS","MSR_MC9_ADDR","MSR_MC9_CTL","MSR_MC9_MISC","MSR_MC9_STATUS","MSR_MCG_MISC","MSR_MCG_R10","MSR_MCG_R11","MSR_MCG_R12","MSR_MCG_R13","MSR_MCG_R14","MSR_MCG_R8","MSR_MCG_R9","MSR_MCG_RAX","MSR_MCG_RBP","MSR_MCG_RBX","MSR_MCG_RCX","MSR_MCG_RDI","MSR_MCG_RDX","MSR_MCG_RFLAGS","MSR_MCG_RIP","MSR_MCG_RSI","MSR_MISC_PWR_MGMT","MSR_MOB_ESCR0","MSR_MOB_ESCR1","MSR_MS_CCCR0","MSR_MS_CCCR1","MSR_MS_CCCR2","MSR_MS_CCCR3","MSR_MS_COUNTER0","MSR_MS_COUNTER1","MSR_MS_COUNTER2","MSR_MS_COUNTER3","MSR_MS_ESCR0","MSR_MS_ESCR1","MSR_OFFCORE_RSP_0","MSR_OFFCORE_RSP_1","MSR_PEBS_ENABLE","MSR_PEBS_LD_LAT","MSR_PEBS_MATRIX_VERT","MSR_PEBS_NUM_ALT","MSR_PERF_CAPABILITIES","MSR_PERF_FIXED_CTR0","MSR_PERF_FIXED_CTR1","MSR_PERF_FIXED_CTR2","MSR_PERF_FIXED_CTR_CTRL","MSR_PERF_GLOBAL_CTRL","MSR_PERF_GLOBAL_OVF_CTRL","MSR_PERF_GLOBAL_STAUS","MSR_PERF_STATUS","MSR_PKGC3_IRTL","MSR_PKGC6_IRTL","MSR_PKGC7_IRTL","MSR_PKG_C10_RESIDENCY","MSR_PKG_C2_RESIDENCY","MSR_PKG_C3_RESIDENCY","MSR_PKG_C4_RESIDENCY","MSR_PKG_C6C_RESIDENCY","MSR_PKG_C6_RESIDENCY","MSR_PKG_C7_RESIDENCY","MSR_PKG_C9_RESIDENCY","MSR_PKG_CST_CONFIG_CONTROL","MSR_PKG_ENERGY_STATUS","MSR_PKG_PERF_STATUS","MSR_PKG_POWER_INFO","MSR_PKG_POWER_LIMIT","MSR_PLATFORM_BRV","MSR_PLATFORM_ID","MSR_PLATFORM_INFO","MSR_PMG_IO_CAPTURE_BASE","MSR_PMH_ESCR0","MSR_PMH_ESCR1","MSR_POWER_CTL","MSR_PP0_ENERGY_STATUS","MSR_PP0_PERF_STATUS","MSR_PP0_POLICY","MSR_PP0_POWER_LIMIT","MSR_PP1_ENERGY_STATUS","MSR_PP1_POLICY","MSR_PP1_POWER_LIMIT","MSR_R0_PMON_BOX_CTRL","MSR_R0_PMON_BOX_OVF_CTRL","MSR_R0_PMON_BOX_STATUS","MSR_R0_PMON_CTR0","MSR_R0_PMON_CTR1","MSR_R0_PMON_CTR2","MSR_R0_PMON_CTR3","MSR_R0_PMON_CTR4","MSR_R0_PMON_CTR5","MSR_R0_PMON_CTR6","MSR_R0_PMON_CTR7","MSR_R0_PMON_EVNT_SEL0","MSR_R0_PMON_EVNT_SEL1","MSR_R0_PMON_EVNT_SEL2","MSR_R0_PMON_EVNT_SEL3","MSR_R0_PMON_EVNT_SEL4","MSR_R0_PMON_EVNT_SEL5","MSR_R0_PMON_EVNT_SEL6","MSR_R0_PMON_EVNT_SEL7","MSR_R0_PMON_IPERF0_P0","MSR_R0_PMON_IPERF0_P1","MSR_R0_PMON_IPERF0_P2","MSR_R0_PMON_IPERF0_P3","MSR_R0_PMON_IPERF0_P4","MSR_R0_PMON_IPERF0_P5","MSR_R0_PMON_IPERF0_P6","MSR_R0_PMON_IPERF0_P7","MSR_R0_PMON_QLX_P0","MSR_R0_PMON_QLX_P1","MSR_R0_PMON_QLX_P2","MSR_R0_PMON_QLX_P3","MSR_R1_PMON_BOX_CTRL","MSR_R1_PMON_BOX_OVF_CTRL","MSR_R1_PMON_BOX_STATUS","MSR_R1_PMON_CTR10","MSR_R1_PMON_CTR11","MSR_R1_PMON_CTR12","MSR_R1_PMON_CTR13","MSR_R1_PMON_CTR14","MSR_R1_PMON_CTR15","MSR_R1_PMON_CTR8","MSR_R1_PMON_CTR9","MSR_R1_PMON_EVNT_SEL10","MSR_R1_PMON_EVNT_SEL11","MSR_R1_PMON_EVNT_SEL12","MSR_R1_PMON_EVNT_SEL13","MSR_R1_PMON_EVNT_SEL14","MSR_R1_PMON_EVNT_SEL15","MSR_R1_PMON_EVNT_SEL8","MSR_R1_PMON_EVNT_SEL9","MSR_R1_PMON_IPERF1_P10","MSR_R1_PMON_IPERF1_P11","MSR_R1_PMON_IPERF1_P12","MSR_R1_PMON_IPERF1_P13","MSR_R1_PMON_IPERF1_P14","MSR_R1_PMON_IPERF1_P15","MSR_R1_PMON_IPERF1_P8","MSR_R1_PMON_IPERF1_P9","MSR_R1_PMON_QLX_P4","MSR_R1_PMON_QLX_P5","MSR_R1_PMON_QLX_P6","MSR_R1_PMON_QLX_P7","MSR_RAPL_POWER_UNIT","MSR_RAT_ESCR0","MSR_RAT_ESCR1","MSR_S0_PMON_BOX_CTRL","MSR_S0_PMON_BOX_OVF_CTRL","MSR_S0_PMON_BOX_STATUS","MSR_S0_PMON_CTR0","MSR_S0_PMON_CTR1","MSR_S0_PMON_CTR2","MSR_S0_PMON_CTR3","MSR_S0_PMON_EVNT_SEL0","MSR_S0_PMON_EVNT_SEL1","MSR_S0_PMON_EVNT_SEL2","MSR_S0_PMON_EVNT_SEL3","MSR_S0_PMON_MASK","MSR_S0_PMON_MATCH","MSR_S1_PMON_BOX_CTRL","MSR_S1_PMON_BOX_OVF_CTRL","MSR_S1_PMON_BOX_STATUS","MSR_S1_PMON_CTR0","MSR_S1_PMON_CTR1","MSR_S1_PMON_CTR2","MSR_S1_PMON_CTR3","MSR_S1_PMON_EVNT_SEL0","MSR_S1_PMON_EVNT_SEL1","MSR_S1_PMON_EVNT_SEL2","MSR_S1_PMON_EVNT_SEL3","MSR_S1_PMON_MASK","MSR_S1_PMON_MATCH","MSR_SAAT_ESCR0","MSR_SAAT_ESCR1","MSR_SMI_COUNT","MSR_SMM_BLOCKED","MSR_SMM_DELAYED","MSR_SMM_FEATURE_CONTROL","MSR_SMM_MCA_CAP","MSR_SMRR_PHYSMASK","MSR_SSU_ESCR0","MSR_TBPU_ESCR0","MSR_TBPU_ESCR1","MSR_TC_ESCR0","MSR_TC_ESCR1","MSR_TEMPERATURE_TARGET","MSR_THERM2_CTL","MSR_TURBO_ACTIVATION_RATIO","MSR_TURBO_POWER_CURRENT_LIMIT","MSR_TURBO_RATIO_LIMIT","MSR_U2L_ESCR0","MSR_U2L_ESCR1","MSR_UNCORE_ADDR_OPCODE_MATCH","MSR_UNCORE_FIXED_CTR0","MSR_UNCORE_FIXED_CTR_CTRL","MSR_UNCORE_PERFEVTSEL0","MSR_UNCORE_PERFEVTSEL1","MSR_UNCORE_PERFEVTSEL2","MSR_UNCORE_PERFEVTSEL3","MSR_UNCORE_PERFEVTSEL4","MSR_UNCORE_PERFEVTSEL5","MSR_UNCORE_PERFEVTSEL6","MSR_UNCORE_PERFEVTSEL7","MSR_UNCORE_PERF_GLOBAL_CTRL","MSR_UNCORE_PERF_GLOBAL_OVF_CTRL","MSR_UNCORE_PERF_GLOBAL_STATUS","MSR_UNCORE_PMC0","MSR_UNCORE_PMC1","MSR_UNCORE_PMC2","MSR_UNCORE_PMC3","MSR_UNCORE_PMC4","MSR_UNCORE_PMC5","MSR_UNCORE_PMC6","MSR_UNCORE_PMC7","MSR_UNC_ARB_PERFEVTSEL0","MSR_UNC_ARB_PERFEVTSEL1","MSR_UNC_ARB_PER_CTR0","MSR_UNC_ARB_PER_CTR1","MSR_UNC_CBO_0_PERFEVTSEL0","MSR_UNC_CBO_0_PERFEVTSEL1","MSR_UNC_CBO_0_PER_CTR0","MSR_UNC_CBO_0_PER_CTR1","MSR_UNC_CBO_1_PERFEVTSEL0","MSR_UNC_CBO_1_PERFEVTSEL1","MSR_UNC_CBO_1_PER_CTR0","MSR_UNC_CBO_1_PER_CTR1","MSR_UNC_CBO_2_PERFEVTSEL0","MSR_UNC_CBO_2_PERFEVTSEL1","MSR_UNC_CBO_2_PER_CTR0","MSR_UNC_CBO_2_PER_CTR1","MSR_UNC_CBO_3_PERFEVTSEL0","MSR_UNC_CBO_3_PERFEVTSEL1","MSR_UNC_CBO_3_PER_CTR0","MSR_UNC_CBO_3_PER_CTR1","MSR_UNC_CBO_CONFIG","MSR_UNC_PERF_FIXED_CTR","MSR_UNC_PERF_FIXED_CTRL","MSR_UNC_PERF_GLOBAL_CTRL","MSR_UNC_PERF_GLOBAL_STATUS","MSR_U_PMON_CTR","MSR_U_PMON_EVNT_SEL","MSR_U_PMON_GLOBAL_CTRL","MSR_U_PMON_GLOBAL_OVF_CTRL","MSR_U_PMON_GLOBAL_STATUS","MSR_W_PMON_BOX_CTRL","MSR_W_PMON_BOX_OVF_CTRL","MSR_W_PMON_BOX_STATUS","MSR_W_PMON_CTR0","MSR_W_PMON_CTR1","MSR_W_PMON_CTR2","MSR_W_PMON_CTR3","MSR_W_PMON_EVNT_SEL0","MSR_W_PMON_EVNT_SEL1","MSR_W_PMON_EVNT_SEL2","MSR_W_PMON_EVNT_SEL3","MSR_W_PMON_FIXED_CTR","MSR_W_PMON_FIXED_CTR_CTL","P5_MC_ADDR","P5_MC_TYPE","ROB_CR_BKUPTMPDR6","SYSENTER_CS_MSR","SYSENTER_EIP_MSR","SYSENTER_ESP_MSR","TEST_CTL","TSC","rdmsr","wrmsr","RdRand","RdSeed","fill_random","fill_random","rdrand16","rdrand32","rdrand64","rdrand_slice","rdseed16","rdseed32","rdseed64","rdseed_slice","BuildDescriptor","CallGate","CallGate16","CallGate32","CodeSegmentType","DataSegmentType","Descriptor","DescriptorBuilder","Execute","ExecuteAccessed","ExecuteConforming","ExecuteConformingAccessed","ExecuteRead","ExecuteReadAccessed","ExecuteReadConforming","ExecuteReadConformingAccessed","GateDescriptorBuilder","InterruptGate","InterruptGate16","InterruptGate32","LDT","LDT","LdtDescriptorBuilder","NULL","RPL_0","RPL_1","RPL_2","RPL_3","ReadExpand","ReadExpandAccessed","ReadOnly","ReadOnlyAccessed","ReadWrite","ReadWriteAccessed","ReadWriteExpand","ReadWriteExpandAccessed","SegmentDescriptorBuilder","SegmentSelector","SystemDescriptorTypes32","SystemDescriptorTypes64","TI_GDT","TI_LDT","TSSAvailable16","TSSBusy16","TaskGate","TaskGateDescriptorBuilder","TrapGate","TrapGate16","TrapGate32","TssAvailable","TssAvailable32","TssBusy","TssBusy32","all","as_u64","avl","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","clone","clone","clone","clone","clone","clone","cmp","code_descriptor","code_descriptor","complement","contains","cs","data_descriptor","data_descriptor","db","default","difference","dpl","ds","empty","eq","eq","eq","eq","eq","es","extend","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","fs","gs","hash","index","insert","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","ist","l","ldt_descriptor","ldt_descriptor","ldt_descriptor","limit_granularity_4kb","load_cs","load_ds","load_es","load_fs","load_gs","load_ss","lower","new","not","partial_cmp","present","remove","set","set_avl","set_base_limit","set_db","set_dpl","set_g","set_l","set_p","set_s","set_selector_offset","set_type","ss","sub","sub_assign","symmetric_difference","task_gate_descriptor","task_gate_descriptor","toggle","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tss_descriptor","tss_descriptor","tss_descriptor","tss_descriptor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upper","load_tr","segmentation","tr","rdtsc","rdtscp","flush","flush_all","Err","Ok","Result","VmFail","VmFailInvalid","VmFailValid","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","vmcs","control","guest","host","ro","ACK_INTERRUPT_ON_EXIT","APIC_ACCESS_ADDR_FULL","APIC_ACCESS_ADDR_HIGH","CLEAR_IA32_BNDCFGS","CLEAR_IA32_RTIT_CTL","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CR0_GUEST_HOST_MASK","CR0_READ_SHADOW","CR3_LOAD_EXITING","CR3_STORE_EXITING","CR3_TARGET_COUNT","CR3_TARGET_VALUE0","CR3_TARGET_VALUE1","CR3_TARGET_VALUE2","CR3_TARGET_VALUE3","CR4_GUEST_HOST_MASK","CR4_READ_SHADOW","CR8_LOAD_EXITING","CR8_STORE_EXITING","DEACTIVATE_DUAL_MONITOR","DTABLE_EXITING","ENABLE_EPT","ENABLE_INVPCID","ENABLE_PML","ENABLE_RDTSCP","ENABLE_USER_WAIT_PAUSE","ENABLE_VM_FUNCTIONS","ENABLE_VPID","ENABLE_XSAVES_XRSTORS","ENCLS_EXITING","ENCLS_EXITING_BITMAP_FULL","ENCLS_EXITING_BITMAP_HIGH","ENCLV_EXITING","ENTRY_TO_SMM","EOI_EXIT0_FULL","EOI_EXIT0_HIGH","EOI_EXIT1_FULL","EOI_EXIT1_HIGH","EOI_EXIT2_FULL","EOI_EXIT2_HIGH","EOI_EXIT3_FULL","EOI_EXIT3_HIGH","EPTP_FULL","EPTP_HIGH","EPTP_INDEX","EPTP_LIST_ADDR_FULL","EPTP_LIST_ADDR_HIGH","EPT_VIOLATION_VE","EXCEPTION_BITMAP","EXECUTIVE_VMCS_PTR_FULL","EXECUTIVE_VMCS_PTR_HIGH","EXTERNAL_INTERRUPT_EXITING","EntryControls","ExitControls","HLT_EXITING","HOST_ADDRESS_SPACE_SIZE","IA32E_MODE_GUEST","INTEL_PT_GUEST_PHYSICAL","INTERRUPT_WINDOW_EXITING","INVLPG_EXITING","IO_BITMAP_A_ADDR_FULL","IO_BITMAP_A_ADDR_HIGH","IO_BITMAP_B_ADDR_FULL","IO_BITMAP_B_ADDR_HIGH","LOAD_DEBUG_CONTROLS","LOAD_IA32_BNDCFGS","LOAD_IA32_EFER","LOAD_IA32_EFER","LOAD_IA32_PAT","LOAD_IA32_PAT","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_RTIT_CTL","MODE_BASED_EPT","MONITOR_EXITING","MONITOR_TRAP_FLAG","MOV_DR_EXITING","MSR_BITMAPS_ADDR_FULL","MSR_BITMAPS_ADDR_HIGH","MWAIT_EXITING","NMI_EXITING","NMI_WINDOW_EXITING","PAGE_FAULT_ERR_CODE_MASK","PAGE_FAULT_ERR_CODE_MATCH","PAUSE_EXITING","PAUSE_LOOP_EXITING","PINBASED_EXEC_CONTROLS","PLE_GAP","PLE_WINDOW","PML_ADDR_FULL","PML_ADDR_HIGH","POSTED_INTERRUPTS","POSTED_INTERRUPT_DESC_ADDR_FULL","POSTED_INTERRUPT_DESC_ADDR_HIGH","POSTED_INTERRUPT_NOTIFICATION_VECTOR","PRIMARY_PROCBASED_EXEC_CONTROLS","PinbasedControls","PrimaryControls","RDPMC_EXITING","RDRAND_EXITING","RDSEED_EXITING","RDTSC_EXITING","SAVE_DEBUG_CONTROLS","SAVE_IA32_EFER","SAVE_IA32_PAT","SAVE_VMX_PREEMPTION_TIMER","SECONDARY_CONTROLS","SECONDARY_PROCBASED_EXEC_CONTROLS","SUBPAGE_PERM_TABLE_PTR_FULL","SUBPAGE_PERM_TABLE_PTR_HIGH","SUB_PAGE_EPT","SecondaryControls","TPR_THRESHOLD","TSC_MULTIPLIER_FULL","TSC_MULTIPLIER_HIGH","TSC_OFFSET_FULL","TSC_OFFSET_HIGH","UNCOND_IO_EXITING","UNRESTRICTED_GUEST","USE_IO_BITMAPS","USE_MSR_BITMAPS","USE_TPR_SHADOW","USE_TSC_OFFSETTING","USE_TSC_SCALING","VIRTUALIZE_APIC","VIRTUALIZE_APIC_REGISTER","VIRTUALIZE_X2APIC","VIRTUAL_INTERRUPT_DELIVERY","VIRTUAL_NMIS","VIRT_APIC_ADDR_FULL","VIRT_APIC_ADDR_HIGH","VIRT_EXCEPTION_INFO_ADDR_FULL","VIRT_EXCEPTION_INFO_ADDR_HIGH","VMCS_SHADOWING","VMENTRY_CONTROLS","VMENTRY_EXCEPTION_ERR_CODE","VMENTRY_INSTRUCTION_LEN","VMENTRY_INTERRUPTION_INFO_FIELD","VMENTRY_MSR_LOAD_ADDR_FULL","VMENTRY_MSR_LOAD_ADDR_HIGH","VMENTRY_MSR_LOAD_COUNT","VMEXIT_CONTROLS","VMEXIT_MSR_LOAD_ADDR_FULL","VMEXIT_MSR_LOAD_ADDR_HIGH","VMEXIT_MSR_LOAD_COUNT","VMEXIT_MSR_STORE_ADDR_FULL","VMEXIT_MSR_STORE_ADDR_HIGH","VMEXIT_MSR_STORE_COUNT","VMREAD_BITMAP_ADDR_FULL","VMREAD_BITMAP_ADDR_HIGH","VMWRITE_BITMAP_ADDR_FULL","VMWRITE_BITMAP_ADDR_HIGH","VMX_PREEMPTION_TIMER","VM_FUNCTION_CONTROLS_FULL","VM_FUNCTION_CONTROLS_HIGH","VPID","WBINVD_EXITING","XSS_EXITING_BITMAP_FULL","XSS_EXITING_BITMAP_HIGH","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","remove","set","set","set","set","set","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","ACTIVITY_STATE","CR0","CR3","CR4","CS_ACCESS_RIGHTS","CS_BASE","CS_LIMIT","CS_SELECTOR","DR7","DS_ACCESS_RIGHTS","DS_BASE","DS_LIMIT","DS_SELECTOR","ES_ACCESS_RIGHTS","ES_BASE","ES_LIMIT","ES_SELECTOR","FS_ACCESS_RIGHTS","FS_BASE","FS_LIMIT","FS_SELECTOR","GDTR_BASE","GDTR_LIMIT","GS_ACCESS_RIGHTS","GS_BASE","GS_LIMIT","GS_SELECTOR","IA32_BNDCFGS_FULL","IA32_BNDCFGS_HIGH","IA32_DEBUGCTL_FULL","IA32_DEBUGCTL_HIGH","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_RTIT_CTL_FULL","IA32_RTIT_CTL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","IDTR_LIMIT","INTERRUPTIBILITY_STATE","INTERRUPT_STATUS","LDTR_ACCESS_RIGHTS","LDTR_BASE","LDTR_LIMIT","LDTR_SELECTOR","LINK_PTR_FULL","LINK_PTR_HIGH","PDPTE0_FULL","PDPTE0_HIGH","PDPTE1_FULL","PDPTE1_HIGH","PDPTE2_FULL","PDPTE2_HIGH","PDPTE3_FULL","PDPTE3_HIGH","PENDING_DBG_EXCEPTIONS","PML_INDEX","RFLAGS","RIP","RSP","SMBASE","SS_ACCESS_RIGHTS","SS_BASE","SS_LIMIT","SS_SELECTOR","TR_ACCESS_RIGHTS","TR_BASE","TR_LIMIT","TR_SELECTOR","VMX_PREEMPTION_TIMER_VALUE","CR0","CR3","CR4","CS_SELECTOR","DS_SELECTOR","ES_SELECTOR","FS_BASE","FS_SELECTOR","GDTR_BASE","GS_BASE","GS_SELECTOR","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","RIP","RSP","SS_SELECTOR","TR_BASE","TR_SELECTOR","EXIT_QUALIFICATION","EXIT_REASON","GUEST_LINEAR_ADDR","GUEST_PHYSICAL_ADDR_FULL","GUEST_PHYSICAL_ADDR_HIGH","IDT_VECTORING_ERR_CODE","IDT_VECTORING_INFO","IO_RCX","IO_RDI","IO_RIP","IO_RSI","VMEXIT_INSTRUCTION_INFO","VMEXIT_INSTRUCTION_LEN","VMEXIT_INTERRUPTION_ERR_CODE","VMEXIT_INTERRUPTION_INFO","VM_INSTRUCTION_ERROR"],"q":[[0,"x86"],[40,"x86::apic"],[165,"x86::apic::ioapic"],[179,"x86::apic::x2apic"],[204,"x86::apic::xapic"],[271,"x86::bits16"],[272,"x86::bits32"],[276,"x86::bits32::eflags"],[349,"x86::bits32::paging"],[708,"x86::bits32::task"],[745,"x86::bits64"],[753,"x86::bits64::paging"],[1391,"x86::bits64::registers"],[1394,"x86::bits64::rflags"],[1470,"x86::bits64::segmentation"],[1493,"x86::bits64::sgx"],[1517,"x86::bits64::syscall"],[1524,"x86::bits64::task"],[1545,"x86::bits64::vmx"],[1554,"x86::controlregs"],[1749,"x86::cpuid"],[2875,"x86::cpuid::native_cpuid"],[2876,"x86::debugregs"],[3021,"x86::dtables"],[3041,"x86::fence"],[3044,"x86::io"],[3050,"x86::irq"],[3143,"x86::msr"],[4211,"x86::random"],[4223,"x86::segmentation"],[4446,"x86::task"],[4449,"x86::time"],[4451,"x86::tlb"],[4453,"x86::vmx"],[4468,"x86::vmx::vmcs"],[4472,"x86::vmx::vmcs::control"],[4868,"x86::vmx::vmcs::guest"],[4943,"x86::vmx::vmcs::host"],[4969,"x86::vmx::vmcs::ro"],[4985,"core::fmt"],[4986,"core::fmt"],[4987,"core::any"],[4988,"core::cmp"],[4989,"core::iter::traits::collect"],[4990,"core::option"],[4991,"core::hash"],[4992,"core::convert"],[4993,"core::marker"],[4994,"core::fmt"]],"d":["x86 Protection levels","","","","","Register information and driver to program xAPIC, X2APIC …","Data structures and functions used by 16-bit mode.","Data structures and functions used by 32-bit mode.","Data structures and functions used by IA-32e but not …","","","","Functions to read and write control registers. See Intel …","Support for the CPUID instructions.","A short-cut to the architecture (bits32 or bits64) this …","Functions to read and write debug registers.","Functions and data-structures for working with descriptor …","","Intel fence instructions","","Returns the argument unchanged.","“Dereferences” the fs register at <code>offset</code>.","“Dereferences” the gs register at <code>offset</code>.","Stops instruction execution and places the processor in a …","Generate a software interrupt. This is a macro argument …","Calls <code>U::from(self)</code>.","I/O port functionality.","Shared interrupt description and set-up code. See the …","MSR value list and function to read and write them.","Instructions to generate random bits directly from the …","Read Processor ID","Functionality to manipulate segment registers, build …","","Helpers to program the task state segment. See Intel 3a, …","Functions to read time stamp counters on x86.","Functions to flush the translation lookaside buffer (TLB).","","","","Data structures and definitions used by Virtual Machine …","","","Abstracts common interface of local APIC (x2APIC, xAPIC) …","Encodes the id of a core.","","","Specify IPI Delivery Mode","Specify Delivery Status","Specify IPI Destination Mode.","IPI Destination Shorthand","","Delivers the interrupt specified in the vector field to …","Abstract the IPI control register","","Delivers an INIT request to the target processor or …","IPI Level","","","Same as fixed mode, except that the interrupt is delivered …","","Delivers an NMI interrupt to the target processor or …","","","Delivers an SMI interrupt to the target processor or …","","Sends a special start-up IPI (called a SIPI) to the target …","IPI Trigger Mode","A core destination encoded as an x2APIC ID.","A core destination encoded as an xAPIC ID.","Reserved","","","","","","","","","","","","","","","","","Is a bootstrap processor?","","End Of Interrupt – Acknowledge interrupt delivery.","","","","","","","","","","","","","","","","","Short-hand to create a Icr value that will work for an …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return APIC ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","To control an I/O APIC.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Returns the logical APIC ID.","Get lower 32-bits of the Icr register.","Send a generic IPI.","","","","","","","","","","","","","","","","","Enable TSC deadline timer.","Set TSC deadline value.","","","","","","","","","Get upper 32-bits of the Icr register.","Read APIC version","x2APIC, the most recent APIC on x86 for large servers with …","Returns the logical address relative to a cluster for a …","Returns the cluster ID a given APIC ID belongs to …","Returns the Logical x2APIC ID.","Information about the xAPIC for the local APIC.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Instantiate a new IoApic.","Number of supported interrupts by this IO APIC.","","","","","Represents an x2APIC driver instance.","Attach to APIC (enable x2APIC mode, initialize LINT0)","","","Is a bootstrap processor?","","Detach from APIC (disable x2APIC and xAPIC mode).","End Of Interrupt – Acknowledge interrupt delivery.","","Returns the argument unchanged.","Read local x2APIC ID.","Calls <code>U::from(self)</code>.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","In x2APIC mode, the 32-bit logical x2APIC ID, can be read …","Create a new x2APIC driver object for the local core.","Send a generic IPI.","Send an IPI to yourself.","","","Enable TSC timer","Set tsc deadline.","","Read APIC version.","State for the XAPIC driver.","EOI register. Write-only.","Error Status Register (ESR). Read/write. See Section …","Interrupt Command Register (ICR). Read/write. See Figure …","Interrupt Command Register (ICR). Read/write. See Figure …","Local APIC ID register. Read-only. See Section 10.12.5.1 …","Interrupt Request Register (IRR); bits 31:0. Read-only.","IRR bits 63:32. Read-only.","IRR bits 95:64. Read-only.","IRR bits 127:96. Read-only.","IRR bits 159:128. Read-only.","IRR bits 191:160. Read-only.","IRR bits 223:192. Read-only.","IRR bits 255:224. Read-only.","In-Service Register (ISR); bits 31:0. Read-only.","ISR bits 63:32. Read-only.","ISR bits 95:64. Read-only.","ISR bits 127:96. Read-only.","ISR bits 159:128. Read-only.","ISR bits 191:160. Read-only.","ISR bits 223:192. Read-only.","ISR bits 255:224. Read-only.","Logical Destination Register (LDR). Read/write in xAPIC …","LVT CMCI register. Read/write. See Figure 10-8 for …","LVT Error register. Read/write. See Figure 10-8 for …","LVT LINT0 register. Read/write. See Figure 10-8 for …","LVT LINT1 register. Read/write. See Figure 10-8 for …","LVT Performance Monitoring register. Read/write. See …","LVT Thermal Sensor register. Read/write. See Figure 10-8 …","LVT Timer register. Read/write. See Figure 10-8 for …","Processor Priority Register (PPR). Read-only.","Spurious Interrupt Vector Register (SVR). Read/write. See …","Current Count register (for Timer). Read-only.","Divide Configuration Register (DCR; for Timer). …","Initial Count register (for Timer). Read/write.","Trigger Mode Register (TMR); bits 31:0. Read-only.","TMR bits 63:32. Read-only.","TMR bits 95:64. Read-only.","TMR bits 127:96. Read-only.","TMR bits 159:128. Read-only.","TMR bits 191:160. Read-only.","TMR bits 223:192. Read-only.","TMR bits 255:224. Read-only.","Task Priority Register (TPR). Read/write. Bits 31:8 are …","Local APIC Version register. Read-only. Same version used …","Attach driver to the xAPIC (enables device).","","","Is this the bootstrap core?","Detach driver form the xAPIC (disables device).","End Of Interrupt – Acknowledge interrupt delivery.","","Returns the argument unchanged.","Read local APIC ID.","Calls <code>U::from(self)</code>.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","","Create a new xAPIC object for the local CPU.","Send a generic IPI.","","","Enable TSC timer.","Set TSC deadline value.","","Read APIC version","","Processor state stored in the EFLAGS register.","Description of the data-structures for IA-32 paging mode.","","Helpers to program the task state segment. See Intel 3a, …","The EFLAGS register.","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","Clears the AC flag bit in EFLAGS register.","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new Flags with the given I/O privilege level.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets the AC flag bit in EFLAGS register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Accessed; indicates whether software has accessed the …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Global; if CR4.PGE = 1, determines whether the translation …","Global; if CR4.PGE = 1, determines whether the translation …","A wrapper for an IO address (IOVA / DMA Address for …","Size of a large page (4 MiB)","A type wrapping a large page with a 4 MiB buffer.","Present; must be 1 to map a 4-MByte page.","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 32 entries.","If the PAT is supported, indirectly determines the memory …","If the PAT is supported, indirectly determines the memory …","A wrapper for a physical address.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","Page size; if set this entry maps a 4-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the 4-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","A wrapper for a virtual address.","","","","","","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to mutable pointer.","Convert to pointer.","Convert to pointer.","Convert to <code>u32</code>","Convert to <code>u32</code>","Convert to <code>u32</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Convert from <code>u32</code>","Convert from <code>usize</code>","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Accessed; indicates whether software has accessed the …","Accessed; indicates whether software has accessed the …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if CR4.PGE = 1, determines whether the translation …","Global; if CR4.PGE = 1, determines whether the translation …","Is this address aligned to a 4 MiB page?","Is this address aligned to a 4 MiB page?","Is this address aligned to a 4 MiB page?","Page size; if set this entry maps a 4-MByte page; …","Page-level cache disable.","Page-level cache disable.","Page-level write-through.","Page-level write-through.","If the PAT is supported, indirectly determines the memory …","If the PAT is supported, indirectly determines the memory …","Present; must be 1 to map a 4-MByte page.","Present; must be 1 to map a 4-KByte page.","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","Read/write; if 0, writes may not be allowed to the 4-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Is zero?","Is zero?","Is zero?","Offset within the 4 MiB page.","Offset within the 4 MiB page.","Offset within the 4 MiB page.","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in PT.","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Physical Address zero.","IO Address zero.","Virtual Address zero.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Description of the data-structures for IA-32e paging mode.","","Processor state stored in the RFLAGS register.","","Program x86 enclaves.","Invokes an OS system-call handler at privilege level 0.","Helpers to program the task state segment. See Intel 3a, …","Virtualize processor hardware for multiple software …","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; if PS indicates whether software has written to the …","Dirty; if PS indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if CR4.PGE = 1, determines whether the translation …","Size of a huge page (1 GiB)","A type wrapping a huge page with a 1 GiB buffer.","A wrapper for an IO address (IOVA / DMA Address for …","Size of a large page (2 MiB)","A type wrapping a large page with a 2 MiB buffer.","MAXPHYADDR, which is at most 52; (use CPUID for finding …","Maximum virtual address.","Maximum supported bits for virtual addresses (with 5-level …","Present; must be 1 to reference a page-directory-pointer …","Present; must be 1 to reference a PML5 entry","Present; must be 1 to map a 1-GByte page or reference a …","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 64 entries.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","A wrapper for a physical address.","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","A page directory pointer table.","A PDPT Entry consists of an address and a bunch of flags.","PDPT configuration bit description.","A PML4 table.","A PML4 Entry consists of an address and a bunch of flags.","PML4 configuration bit description.","Size of a region covered by a PML4 Entry (512 GiB)","A PML5 table","A PML5 Entry consists of an address and a bunch of flags.","PML5 configuration bit description.","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","A wrapper for a virtual address.","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","","","","","","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to pointer.","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","Convert from <code>u64</code>","Convert from <code>usize</code>","","","","","","","","","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; if PS set indicates whether software has written to …","Dirty; if PD_PS set indicates whether software has written …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through.","Page-level write-through.","Page-level write-through.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","Is page present?","Is page present?","Is page present?","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page or reference a …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Is zero?","Is zero?","Is zero?","Offset within the 2 MiB page.","Offset within the 2 MiB page.","Offset within the 2 MiB page.","Creates a new PML4Entry.","Creates a new PML5Entry.","Creates a new PDPTEntry.","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in PT.","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","Split <code>PAddr</code> into lower and higher 32-bits.","Split <code>IOAddr</code> into lower and higher 32-bits.","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Physical Address zero.","IO Address zero.","Virtual Address zero.","Read the RBP register (base pointer register).","Read the RIP register (instruction pointer).","Read the RSP register (stack pointer register).","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","The RFLAGS register. This is duplicated code from bits32 …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new Flags with the given I/O privilege level.","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Entry for IDT, GDT or LDT.","","","","","","","Returns the argument unchanged.","“Dereferences” the fs register at <code>offset</code>.","“Dereferences” the gs register at <code>offset</code>.","Calls <code>U::from(self)</code>.","Reload code segment register.","Read FS Segment Base","Read GS Segment Base","Create a new segment, TSS or LDT descriptor by setting the …","Sets the interrupt stack table index. The 3-bit IST index …","Creates a new descriptor with selector and offset (for IDT …","Swap the GS register.","","","","Write FS Segment Base","Write GS Segment Base","Create an SECS page in the Enclave Page Cache","Add a Page to an Uninitialized Enclave.","Add a Page to an Initialized Enclave.","Mark a page in EPC as Blocked.","Read From a Debug Enclave.","Write to a Debug Enclave.","Extend Uninitialized Enclave Measurement by 256 Bytes","Initialize an Enclave for Execution","Loads and verifies an EPC page and marks the page as …","Loads, verifies an EPC page and marks the page as …","Restrict the Permissions of an EPC Page.","Change the Type of an EPC Page.","Add Version Array.","Remove a page from the EPC.","Activates EBLOCK Checks.","Invalidate an EPC Page and Write out to Main Memory.","Accept Changes to an EPC Page.","Initialize a Pending Page.","Enters an Enclave.","Exits an Enclave.","Retrieves a Cryptographic Key.","Extend an EPC Page Permissions.","Create a Cryptographic Report of the Enclave.","Re-Enters an Enclave.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Although hardware task-switching is not supported in …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The 16-bit offset to the I/O permission bit map from the …","The full 64-bit canonical forms of the interrupt stack …","Creates a new empty TSS.","","","","","The full 64-bit canonical forms of the stack pointers …","Sets the stack pointer (<code>stack_ptr</code>) to be used when an …","Sets the stack pointer (<code>stack_ptr</code>) to be used for when an …","","","","Clear VMCS.","Launch virtual machine.","Load current VMCS pointer.","Return current VMCS pointer.","Read a specified field from a VMCS.","Resume virtual machine.","Write to a specified field in a VMCS.","Disable VMX operation.","Enable VMX operation.","","","","","","","","","","","","If set, enables debug register based breaks on I/O space …","Enables the instructions RDFSBASE, RDGSBASE, WRFSBASE, and …","Enable shared (PDE or PTE) address translation between …","Enables 5-Level Paging.","Enable machine check interrupts.","Enable XSAVE and Processor Extended States.","Enable: Physical Address Extension (allows to address …","Enables process-context identifiers (PCIDs).","Enable Performance-Monitoring Counters","Enables use of Protection Keys (MPK).","Enable Page Size Extensions (allows for pages larger than …","Enable Supervisor Mode Access Prevention.","Enable Supervisor Mode Execution Protection.","Enables Safer Mode Extensions (Trusted Execution …","Enables Streaming SIMD Extensions (SSE) instructions and …","Enable User-Mode Instruction Prevention (the SGDT, SIDT, …","If set, enables support for the virtual interrupt flag …","Enables Virtual Machine Extensions.","If set, disables ability to take time-stamps.","Enables unmasked SSE exceptions.","If set, enables support for the virtual interrupt flag …","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Read cr0","Write cr0.","Contains page-fault linear address.","Write cr2, for instance to reset cr2","Contains page-table root pointer.","Switch page-table PML4 pointer.","Contains various flags to control operations in protected …","Write cr4.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Read Extended Control Register XCR0. Only supported if …","Write to Extended Control Register XCR0. Only supported if …","","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","","","","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we’…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","Where the extended register state is stored.","What kidn of extended register state this is.","ExtendedState subleaf structure for things that need to be …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities (LEAF=0x8000_001F).","","Information about how monitor/mwait works on this CPU …","","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","Performance Optimization Identifier (LEAF=0x8000_001A).","","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Processor Topology Information (LEAF=0x8000_001E).","Intel Processor Trace Information (LEAF=0x14).","","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","","Information about the SVM features that the processory …","","Query information about thermal and power management …","","TLB 1-GiB Pages Information (LEAF=0x8000_0019).","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to satisfy …","","","","","","Vendor Info String (LEAF=0x0)","","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Core ID","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","L1 Data TLB associativity for 1-GB pages.","L1 Data TLB number of entries for 1-GB pages.","L2 Data TLB associativity for 1-GB pages.","L2 Data TLB number of entries for 1-GB pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Extended information about topology (LEAF=0x1F).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running …","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Informations about performance optimization …","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Informations about processor topology (LEAF=0x8000_001E)","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","This function provides information about the SVM features …","Query information about thermal and power management …","TLB 1-GiB Pages Information (LEAF=0x8000_0019)","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if set.","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","AVX512VBMI2","Support for the AMD advanced virtual interrupt controller …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BITALG","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","AVX512VNNI","AVX512VPOPCNTDQ","BMI1","BMI2","Supports CET shadow stack features. Processors that set …","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache. …","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Indicates support for the decode assists if set.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","Indicates that TLB flush events, including CR3 writes and …","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","The internal FP/SIMD execution datapath is 128 bits wide …","The internal FP/SIMD execution datapath is 256 bits wide …","Floating Point Unit On-Chip. The processor contains an x87 …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","GFNI","GIF – virtualized global interrupt flag if set.","Guest Mode Execution Trap supported if set.","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","When host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …","Max APIC IDs reserved field is Valid. A value of 0 for HTT …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is supported …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested translations …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Supports 57-bit linear addresses and five-level paging if …","Is LAHF/SAHF available in 64-bit mode?","Indicates support for LBR Virtualization.","Reports whether the response of the delay values is linear.","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel MMX …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MOVU (Move Unaligned) SSE instructions are efficient more …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. The …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Nested paging supported if set.","Indicates support for NRIP save on #VMEXIT if set.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Indicates support for the pause intercept filter if set.","Indicates support for the PAUSE filter cycle count …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the 96-bit …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","SPEC_CTRL virtualization supported if set.","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","SVM supervisor shadow stack restrictions if set.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Indicates support for SVM-Lock if set.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Support for INVLPGB/TLBSYNC hypervisor enable in VMCB and …","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","Indicates the following MSRs are supported: …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Indicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if …","Intel Turbo Boost Technology Available (see description of …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","VAES","Indicates support for VMCB clean bits if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","VMSAVE and VMLOAD virtualization supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","VPCLMULQDQ","Virtual Transparent Encryption supported if set.","WAITPKG","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area is …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) is …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L1 Instruction TLB associativity for 1-GB pages.","L1 Instruction TLB number of entries for 1-GB pages.","L2 Instruction TLB associativity for 1-GB pages.","L2 Instruction TLB number of entries for 1-GB pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor’…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for the …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","Node ID","Nodes per processor","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads in the processor.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components save …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Returns which register this specific extended subleaf …","SVM revision number.","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","96 bit processor serial number.","Bits 00-31 of 96 bit processor serial number.","Bits 32-63 of 96 bit processor serial number.","Bits 64-96 of 96 bit processor serial number.","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a unique …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the Processor …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of available address space identifiers (ASID).","Number of C0 sub C-states supported using MWAIT (Bits 03 - …","Number of C1 sub C-states supported using MWAIT (Bits 07 - …","Number of C2 sub C-states supported using MWAIT (Bits 11 - …","Number of C3 sub C-states supported using MWAIT (Bits 15 - …","Number of C4 sub C-states supported using MWAIT (Bits 19 - …","Number of C5 sub C-states supported using MWAIT (Bits 23 - …","Number of C6 sub C-states supported using MWAIT (Bits 27 - …","Number of C7 sub C-states supported using MWAIT (Bits 31 - …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","Threads per core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” * …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …","","B0 breakpoint condition detected","B1 breakpoint condition detected","B2 breakpoint condition detected","B3 breakpoint condition detected","BD debug register access detected","An array list of all available breakpoint registers.","BS single step","BT task switch","Specifies the  breakpoint condition for a corresponding …","Specify the size of the memory location at the address …","Specifies available hardware breakpoints.","00 — 1-byte length.","01 — 2-byte length.","11 — 4-byte length.","10 — 8 byte length (or undefined, on older processors).","11 — Break on data reads or writes but not instruction …","01 — Break on data writes only.","","","","","Debug register 6 (dr6) flags.","","Empty Dr7 has bit 10 always set.","Bit that controls debug-register protection.","Bit that controls global exact breakpoints.","00 — Break on instruction execution only.","10 — Break on I/O reads or writes.","Bit that controls local exact breakpoints.","Enables (when set) advanced debugging of RTM transactional …","Bit that controls debugging of RTM transactional regions.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Configures the breakpoint by writing <code>dr</code> registers.","Configures a breakpoint condition <code>bc</code> and size <code>bs</code> for the …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disables the breakpoint condition for the associated …","Disable breakpoint in global mode.","Disable breakpoint in local mode.","Read dr{0-3} register based on enum variant.","Read dr0.","Write dr0.","Read dr1.","Write dr1.","Read dr2.","Write dr2.","Read dr3.","Write dr3.","Read dr6.","Write dr6.","Read dr7.","Write dr7.","Returns an empty set of flags.","Enables the breakpoint condition for the associated …","Global exact breakpoint enable.","Local exact breakpoint enable.","Enables debug-register protection, which causes a debug …","Enable the breakpoint in global mode.","Enable the breakpoint in local mode.","Enables advanced debugging of RTM transactional regions.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Write dr{0-3} register based on provided enum variant.","A struct describing a pointer to a descriptor table (GDT / …","Pointer to the memory region containing the DT.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the segment selector from the local descriptor …","Load the GDTR register with the specified base and limit.","Load the IDTR register with the specified base and limit.","Size of the DT.","Loads the segment selector into the selector field of the …","","","Retrieve base and limit from the GDTR register.","Retrieve base and limit from the IDTR register.","","","","lfence – Load Fence","mfence – Memory Fence","sfence – Store Fence","Read 8 bits from port","Read 32 bits from port","Read 16 bits from port","Write 8 bits to port","Write 32 bits to port","Write 16 bits to port","","","","","","","","","x86 External Interrupts (1-32).","","0: The fault was not caused by an instruction fetch. 1: …","","","x86 Exception description (see also Intel Vol. 3a Chapter …","","","","0: The fault was caused by a non-present page. 1: The …","","0: The fault was not by protection keys. 1: There was a …","","0: The fault was not caused by reserved bit violation. 1: …","","","","0: The access causing the fault originated when the …","","0: The access causing the fault was a read. 1: The access …","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disable Interrupts.","Returns an empty set of flags.","Enable Interrupts.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Section 10.4.4, Local APIC Status and Location.","BIOS Update Trigger Register.","","Processor Hard Power-On Configuration  (R/W) Enables and …","Actual Performance Frequency Clock Count (RW)  See Table …","APIC Location and Status (R/W) See Table 35-2. See Section …","(If CPUID.0AH: EAX[15:8] &gt;  0) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  1) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  2) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  3) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  4) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  5) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  6) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  7) &amp; IA32_PERF_CAPABILITIES[ 13…","BIOS Update Signature ID (R/W) See Table 35-2.","BIOS Update Trigger Register (W)  See Table 35-2.","Clock Modulation (R/W)  See Table 35-2. …","","System Call Target Address the compatibility mode.","06_2EH","Debug Control (R/W)  Controls how several debug features …","DS Save Area (R/W) See Table 35-2. Points to the DS buffer …","If (  CPUID.80000001.EDX.[bit  20] or  CPUID.80000001.EDX.…","if CPUID.6H:ECX[3] = 1","Control Features in IA-32 Processor (R/W) See Table 35-2 …","Fixed-Function Performance Counter Register 0 (R/W)  See …","Fixed-Function Performance Counter Register 1 (R/W)  See …","Fixed-Function Performance Counter Register 2 (R/W)  See …","Fixed-Function-Counter Control Register (R/W)  See Table …","System Call Flag Mask (R/W)  See Table 35-2.","Map of BASE Address of FS (R/W)  See Table 35-2.","Map of BASE Address of GS (R/W)  See Table 35-2.","Swap Target of BASE Address of GS (R/W) See Table 35-2.","IA-32e Mode System Call Target Address (R/W)  See Table …","See Section 14.3.2.3., IA32_MCi_ADDR MSRs .  The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.   The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_0FH","06_0FH","See Table 35-2.","06_0FH","06_0FH","06_1DH","06_1DH","See Table 35-2.","Misc MAC information of Integrated I/O. (R/O) see Section …","06_1DH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","Machine Check Capabilities (R) See Table 35-2. See Section …","Machine Check Feature Enable (R/W) See Table 35-2. See …","Machine Check Status. (R) See Table 35-2. See Section …","","See Section 8.10.5, Monitor/Mwait Address  Range …","See Section 8.10.5, Monitor/Mwait Address Range …","Maximum Performance Frequency Clock Count (RW)  See Table …","MTRR Information See Section 11.11.1, MTRR Feature  …","Default Memory Types (R/W)  Sets the memory type for the …","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Variable Range Base MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] &gt;  8","if IA32_MTRR_CAP[7:0] &gt;  9","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] &gt;  8","if IA32_MTRR_CAP[7:0] &gt;  9","See Section 35.16, MSRs in Pentium Processors.","See Section 35.16, MSRs in Pentium Processors.","If CPUID.06H: EAX[6] = 1","If CPUID.06H: EAX[6] = 1","Page Attribute Table See Section 11.11.2.2, Fixed Range …","","Performance Event Select for Counter 0 (R/W) Supports all …","Performance Event Select for Counter 1 (R/W) Supports all …","Performance Event Select for Counter 2 (R/W) Supports all …","Performance Event Select for Counter 3 (R/W) Supports all …","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2. See Section 17.4.1, IA32_DEBUGCTL MSR.","See Table 35-2. See Section 14.1, Enhanced Intel  …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 14.1, Enhanced Intel  …","06_0FH","Platform ID (R)  See Table 35-2. The operating system can …","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If IA32_VMX_MISC[bit 15])","SMM Monitor Configuration (R/W) See Table 35-2.","See Table 35-2.","If IA32_MTRR_CAP[SMRR]  = 1","System Call Target Address (R/W)  See Table 35-2.","CS register target for CPL 0 code (R/W) See Table 35-2. …","CPL 0 code entry point (R/W) See Table 35-2. See Section …","Stack pointer for CPL 0 stack (R/W) See Table 35-2. See …","Thermal Interrupt Control (R/W) See Section 14.5.2, …","Thermal Monitor Status (R/W) See Section 14.5.2, Thermal …","See Section 17.13, Time-Stamp Counter,  and see Table 35-2.","Per-Logical-Processor TSC ADJUST (R/W) See Table 35-2.","AUXILIARY TSC Signature. (R/W) See Table 35-2 and Section  …","TSC Target of Local APIC s TSC Deadline Mode (R/W)  See …","Reporting Register of Basic VMX Capabilities (R/O) See …","Capability Reporting Register of CR0 Bits Fixed to 0 (R/O) …","Capability Reporting Register of CR0 Bits Fixed to 1 (R/O) …","Capability Reporting Register of CR4 Bits Fixed to 0 (R/O) …","Capability Reporting Register of CR4 Bits Fixed to 1 (R/O) …","If CPUID.01H:ECX.[bit 5] = 1","If CPUID.01H:ECX.[bit 5] = 1","Capability Reporting Register of VM-entry Controls (R/O) …","If ( CPUID.01H:ECX.[bit 5],  IA32_VMX_PROCBASED_C TLS[bit …","Capability Reporting Register of EPT and VPID (R/O)  See …","Capability Reporting Register of VM-exit Controls (R/O) …","Capability Reporting Register of VM-function Controls …","Reporting Register of Miscellaneous VMX Capabilities (R/O) …","Capability Reporting Register of Pin-based VM-execution  …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of Secondary Processor-based …","Capability Reporting Register of VM-entry Flex Controls …","Capability Reporting Register of VM-exit Flex Controls …","Capability Reporting Register of Pin-based VM-execution …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of VMCS Field Enumeration …","If( CPUID.01H:ECX.[bit 5] =  1 and IA32_VMX_BASIC[bit 55] )","x2APIC ID register (R/O) See x2APIC Specification.","x2APIC Current Count register (R/O)","x2APIC Divide Configuration register (R/W)","x2APIC End of Interrupt. If ( CPUID.01H:ECX.[bit 21]  = 1 )","Error Status Register. If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Interrupt Command register (R/W)","x2APIC Initial Count register (R/W)","x2APIC Interrupt Request register bits [31:0] (R/O)","x2APIC Interrupt Request register bits [63:32] (R/O)","x2APIC Interrupt Request register bits [95:64] (R/O)","x2APIC Interrupt Request register bits [127:96] (R/O)","x2APIC Interrupt Request register bits [159:128] (R/O)","x2APIC Interrupt Request register bits [191:160] (R/O)","x2APIC Interrupt Request register bits [223:192] (R/O)","x2APIC Interrupt Request register bits [255:224] (R/O)","x2APIC In-Service register bits [31:0] (R/O)","x2APIC In-Service register bits [63:32] (R/O)","x2APIC In-Service register bits [95:64] (R/O)","x2APIC In-Service register bits [127:96] (R/O)","x2APIC In-Service register bits [159:128] (R/O)","x2APIC In-Service register bits [191:160] (R/O)","x2APIC In-Service register bits [223:192] (R/O)","x2APIC In-Service register bits [255:224] (R/O)","x2APIC Logical Destination register (R/O)","x2APIC LVT Corrected Machine Check Interrupt register (R/W)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC LVT Performance Monitor register (R/W)","x2APIC LVT Thermal Sensor Interrupt register (R/W)","x2APIC LVT Timer Interrupt register (R/W)","x2APIC Processor Priority register (R/O)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Spurious Interrupt Vector register (R/W)","x2APIC Trigger Mode register bits [31:0] (R/O)","x2APIC Trigger Mode register bits [63:32] (R/O)","x2APIC Trigger Mode register bits [95:64] (R/O)","x2APIC Trigger Mode register bits [127:96] (R/O)","x2APIC Trigger Mode register bits [159:128] (R/O)","x2APIC Trigger Mode register bits [191:160] (R/O)","x2APIC Trigger Mode register bits [223:192] (R/O)","x2APIC Trigger Mode register bits [255:224] (R/O)","x2APIC Task Priority register (R/W)","x2APIC Version. If ( CPUID.01H:ECX.[bit 21]  = 1 )","","","","","","","Defined in MCA architecture but not implemented in the P6 …","","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","Defined in MCA architecture but not implemented in P6 …","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS, except bits 0, 4, 57, …","","","","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore B-box 0 perfmon local box control MSR.","Uncore B-box 0 perfmon local box overflow control MSR.","Uncore B-box 0 perfmon local box status MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon local box mask MSR.","Uncore B-box 0 perfmon local box match MSR.","Uncore B-box 1 perfmon local box control MSR.","Uncore B-box 1 perfmon local box overflow control MSR.","Uncore B-box 1 perfmon local box status MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1vperfmon event select MSR.","Uncore B-box 1 perfmon local box mask MSR.","Uncore B-box 1 perfmon local box match MSR.","","","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore C-box 0 perfmon local box control MSR.","Uncore C-box 0 perfmon local box overflow control MSR.","Uncore C-box 0 perfmon local box status MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 1 perfmon local box control MSR.","Uncore C-box 1 perfmon local box overflow control MSR.","Uncore C-box 1 perfmon local box status MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 2 perfmon local box control MSR.","Uncore C-box 2 perfmon local box overflow control MSR.","Uncore C-box 2 perfmon local box status MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 3 perfmon local box control MSR.","Uncore C-box 3 perfmon local box overflow control MSR.","Uncore C-box 3 perfmon local box status MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 4 perfmon local box control MSR.","Uncore C-box 4 perfmon local box overflow control MSR.","Uncore C-box 4 perfmon local box status MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 5 perfmon local box control MSR.","Uncore C-box 5 perfmon local box overflow control MSR.","Uncore C-box 5 perfmon local box status MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 6 perfmon local box control MSR.","Uncore C-box 6 perfmon local box overflow control MSR.","Uncore C-box 6 perfmon local box status MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 7 perfmon local box control MSR.","Uncore C-box 7 perfmon local box overflow control MSR.","Uncore C-box 7 perfmon local box status MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 8 perfmon local box control MSR.","Uncore C-box 8 perfmon local box overflow control MSR.","Uncore C-box 8 perfmon local box status MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 9 perfmon local box control MSR.","Uncore C-box 9 perfmon local box overflow control MSR.","Uncore C-box 9 perfmon local box status MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","ConfigTDP Control (R/W)","ConfigTDP Level 1 ratio and power level (R/O)","ConfigTDP Level 2 ratio and power level (R/O)","Nominal TDP Ratio (R/O)","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Debug Control (R/W)  Controls how several debug features …","Debug Control (R/W)  Controls how several debug features …","DRAM Energy Status (R/O)  See Section 14.7.5, DRAM RAPL …","DRAM Performance Throttling Status (R/O) See Section …","DRAM RAPL Parameters (R/W) See Section 14.7.5, DRAM RAPL …","DRAM RAPL Power Limit Control (R/W)  See Section 14.7.5, …","Processor Frequency Configuration The bit field layout of …","Processor Hard Power-On Configuration (R/W) Enables and …","Processor Soft Power-On Configuration (R/W)  Enables and …","Processor Hard Power-On Configuration (R/W) Enables and  …","EFSB DRDY Event Control and Counter Register (R/W)  See …","EFSB DRDY Event Control and Counter  Register (R/W)","GBUSQ Event Control and Counter  Register (R/W) See …","GBUSQ Event Control/Counter Register (R/W) Apply to Intel …","GSNPQ Event Control and Counter  Register (R/W)  See …","GSNPQ Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control and Counter Register (R/W)  See Section …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","L3/FSB Common Control Register (R/W) Apply to Intel Xeon …","MC Bank Error Configuration (R/W)","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Scaleable Bus Speed(RO) This field indicates the intended …","","Trace End Address 0","Trace Start Address 0","Trace End Address 1","Trace Start Address 1","Trace End Address 3","Trace Start Address 3","Trace End Address 4","Trace Start Address 4","Trace Filter CR3 Match Register (R/W)","Trace Control Register (R/W)","Trace Output Base Register (R/W)","Trace Output Mask Pointers Register (R/W)","Tracing Status Register (R/W)","TSX Ctrl Register for TSX Async Abot (TAA) Migration. See …","IFSB BUSQ Event Control and Counter  Register (R/W) See …","IFSB BUSQ Event Control and Counter Register (R/W)","IFSB Latency Event Counter Register  (R/W)  See Section …","IFSB Latency Event Control Register  (R/W) See Section …","IFSB SNPQ Event Control and Counter  Register (R/W)  See …","IFSB SNPQ Event Control and Counter  Register (R/W)","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Last Branch Record 0 (R/W)  One of four last branch record …","Last Branch Record 0 From IP (R/W) One of eight pairs of …","Last Branch Record 0 (R/W)  One of 16 pairs of last branch …","Last Branch Record 1 (R/W) See description of …","Last Branch Record 10 From IP (R/W) See description of …","Last Branch Record 10 To IP (R/W) See description of …","Last Branch Record 11 From IP (R/W) See description of …","Last Branch Record 11 To IP (R/W) See description of …","Last Branch Record 12 From IP (R/W) See description of …","Last Branch Record 12 To IP (R/W) See description of …","Last Branch Record 13 From IP (R/W) See description of …","Last Branch Record 13 To IP (R/W) See description of …","Last Branch Record 14 From IP (R/W) See description of …","Last Branch Record 14 To IP (R/W) See description of …","Last Branch Record 15 From IP (R/W) See description of …","Last Branch Record 15 To IP (R/W) See description of …","Last Branch Record 1 From IP (R/W) See description of …","Last Branch Record 1 To IP (R/W) See description of …","Last Branch Record 2 See description of the …","Last Branch Record 2 From IP (R/W) See description of …","Last Branch Record 2 To IP (R/W) See description of …","Last Branch Record 3 See description of the …","Last Branch Record 3 From IP (R/W) See description of …","Last Branch Record 3 To IP (R/W) See description of …","Last Branch Record 4 (R/W) See description of …","Last Branch Record 4 From IP (R/W) See description of …","Last Branch Record 4 To IP (R/W) See description of …","Last Branch Record 5 (R/W) See description of …","Last Branch Record 5 From IP (R/W) See description of …","Last Branch Record 5 To IP (R/W) See description of …","Last Branch Record 6 (R/W) See description of …","Last Branch Record 6 From IP (R/W) See description of …","Last Branch Record 6 To IP (R/W) See description of …","Last Branch Record 7 (R/W) See description of …","Last Branch Record 7 From IP (R/W) See description of …","Last Branch Record 7 To IP (R/W) See description of …","Last Branch Record 8 From IP (R/W) See description of …","Last Branch Record 8 To IP (R/W) See description of …","Last Branch Record 9 From IP (R/W) See description of …","Last Branch Record 9 To IP (R/W) See description of …","Last Branch Record Stack TOS (R/W)  Contains an index (0-3 …","Last Branch Record Filtering Select Register (R/W)  See …","Last Exception Record From Linear IP (R)  Contains a …","Last Exception Record To Linear IP (R)  This area contains …","Uncore M-box 0 perfmon local box address mask MSR.","Uncore M-box 0 perfmon local box address match MSR.","Uncore M-box 0 perfmon local box control MSR.","Uncore M-box 0 perfmon local box overflow control MSR.","Uncore M-box 0 perfmon local box status MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon DSP unit select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon ISS unit select MSR.","Uncore M-box 0 perfmon MAP unit select MSR.","Uncore M-box 0 perfmon local box address match/mask config …","Uncore M-box 0 perfmon MIC THR select MSR.","Uncore M-box 0 perfmon PGT unit select MSR.","Uncore M-box 0 perfmon PLD unit select MSR.","Uncore M-box 0 perfmon time stamp unit select MSR.","Uncore M-box 0 perfmon ZDP unit select MSR.","Uncore M-box 1 perfmon local box address mask MSR.","Uncore M-box 1 perfmon local box address match MSR.","Uncore M-box 1 perfmon local box control MSR.","Uncore M-box 1 perfmon local box overflow control MSR.","Uncore M-box 1 perfmon local box status MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon DSP unit select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon ISS unit select MSR.","Uncore M-box 1 perfmon MAP unit select MSR.","Uncore M-box 1 perfmon local box address match/mask config …","Uncore M-box 1 perfmon MIC THR select MSR.","Uncore M-box 1 perfmon PGT unit select MSR.","Uncore M-box 1 perfmon PLD unit select MSR.","Uncore M-box 1 perfmon time stamp unit select MSR.","Uncore M-box 1 perfmon ZDP unit select MSR.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC3_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","Always 0 (CMCI not supported).","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","Apply to Intel Xeon processor 7400 series (processor …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","Machine Check Miscellaneous See Section 15.3.2.6, IA32_MCG …","Machine Check R10 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R11 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R12 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R13 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R14 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R8 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R9D/R9 See Section 15.3.2.6, IA32_MCG …","Machine Check EAX/RAX Save State See Section 15.3.2.6, …","Machine Check EBP/RBP Save State See Section 15.3.2.6, …","Machine Check EBX/RBX Save State See Section 15.3.2.6, …","Machine Check ECX/RCX Save State See Section 15.3.2.6, …","Machine Check EDI/RDI Save State See Section 15.3.2.6, …","Machine Check EDX/RDX Save State See Section 15.3.2.6, …","Machine Check EFLAGS/RFLAG Save State See Section …","Machine Check EIP/RIP Save State See Section 15.3.2.6, …","Machine Check ESI/RSI Save State See Section 15.3.2.6, …","See http://biosbits.org.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Offcore Response Event Select Register (R/W)","Offcore Response Event Select Register (R/W)","Precise Event-Based Sampling (PEBS) (R/W)  Controls the …","see See Section 18.7.1.2, Load Latency Performance …","See Table 19-26.","","RO. This applies to processors that do not support …","Fixed-Function Performance Counter Register 0 (R/W)","Fixed-Function Performance Counter Register 1 (R/W)","Fixed-Function Performance Counter Register 2 (R/W)","Fixed-Function-Counter Control Register (R/W)","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","","Package C3 Interrupt Response Limit (R/W)  Note: C-state …","Package C6 Interrupt Response Limit (R/W)  This MSR …","Package C7 Interrupt Response Limit (R/W)  This MSR …","Note: C-state values are processor specific C-state code …","Package C2 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C4 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C6 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","C-State Configuration Control (R/W)  Note: C-state values …","PKG Energy Status (R/O)  See Section 14.7.3, Package RAPL …","Package RAPL Perf Status (R/O)","PKG RAPL Parameters (R/W) See Section 14.7.3,  Package …","PKG RAPL Power Limit Control (R/W)  See Section 14.7.3, …","Platform Feature Requirements (R)","Model Specific Platform ID (R)","see http://biosbits.org.","Power Management IO Redirection in C-state (R/W)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Power Control Register. See http://biosbits.org.","PP0 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 Performance Throttling Status (R/O) See Section …","PP0 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","PP1 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","Uncore R-box 0 perfmon local box control MSR.","Uncore R-box 0 perfmon local box overflow control MSR.","Uncore R-box 0 perfmon local box status MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 0 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 1 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 2 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 3 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 4 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 5 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 6 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 7 select MSR.","Uncore R-box 0 perfmon QLX unit Port 0 select MSR.","Uncore R-box 0 perfmon QLX unit Port 1 select MSR.","Uncore R-box 0 perfmon QLX unit Port 2 select MSR.","Uncore R-box 0 perfmon QLX unit Port 3 select MSR.","Uncore R-box 1 perfmon local box control MSR.","Uncore R-box 1 perfmon local box overflow control MSR.","Uncore R-box 1 perfmon local box status MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 10 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 11 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 12 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 13 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 14 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 15 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 8 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 9 select MSR.","Uncore R-box 1 perfmon QLX unit Port 4 select MSR.","Uncore R-box 1 perfmon QLX unit Port 5 select MSR.","Uncore R-box 1 perfmon QLX unit Port 6 select MSR.","Uncore R-box 1 perfmon QLX unit Port 7 select MSR.","Unit Multipliers used in RAPL Interfaces (R/O)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore S-box 0 perfmon local box control MSR.","Uncore S-box 0 perfmon local box overflow control MSR.","Uncore S-box 0 perfmon local box status MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon local box mask MSR.","Uncore S-box 0 perfmon local box match MSR.","Uncore S-box 1 perfmon local box control MSR.","Uncore S-box 1 perfmon local box overflow control MSR.","Uncore S-box 1 perfmon local box status MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon local box mask MSR.","Uncore S-box 1 perfmon local box match MSR.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","SMI Counter (R/O)","SMM Blocked (SMM-RO) Reports the blocked state of all …","SMM Delayed (SMM-RO) Reports the interruptible state of …","Enhanced SMM Feature Control (SMM-RW) Reports SMM …","Enhanced SMM Capabilities (SMM-RO) Reports SMM capability …","System Management Mode Physical Address Mask register  (WO …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","","Thermal Monitor 2 Control.","ConfigTDP Control (R/W)","See http://biosbits.org.","Maximum Ratio Limit of Turbo Mode RO if MSR_PLATFORM_INFO.…","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.3, Uncore Address/Opcode Match MSR.","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","Uncore Arb unit, counter 0 event select MSR","Uncore Arb unit, counter 1 event select MSR","Uncore Arb unit, performance counter 0","Uncore Arb unit, performance counter 1","Uncore C-Box 0, counter 0 event select MSR","Uncore C-Box 0, counter 1 event select MSR","Uncore C-Box 0, performance counter 0","Uncore C-Box 0, performance counter 1","Uncore C-Box 1, counter 0 event select MSR","Uncore C-Box 1, counter 1 event select MSR","Uncore C-Box 1, performance counter 0","Uncore C-Box 1, performance counter 1","Uncore C-Box 2, counter 0 event select MSR","Uncore C-Box 2, counter 1 event select MSR","Uncore C-Box 2, performance counter 0","Uncore C-Box 2, performance counter 1","Uncore C-Box 3, counter 0 event select MSR","Uncore C-Box 3, counter 1 event select MSR.","Uncore C-Box 3, performance counter 0.","Uncore C-Box 3, performance counter 1.","Uncore C-Box configuration information (R/O)","Uncore fixed counter","Uncore fixed counter control (R/W)","Uncore PMU global control","Uncore PMU main status","Uncore U-box perfmon counter MSR.","Uncore U-box perfmon event select MSR.","Uncore U-box perfmon global control MSR.","Uncore U-box perfmon global overflow control MSR.","Uncore U-box perfmon global status MSR.","Uncore W-box perfmon local box control MSR.","Uncore W-box perfmon local box overflow control MSR.","Uncore W-box perfmon local box status MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon fixed counter","Uncore U-box perfmon fixed counter control MSR","See Section 35.16, MSRs in Pentium Processors,  and see  …","See Section 35.16, MSRs in Pentium Processors,  and see  …","","CS register target for CPL 0 code","CPL 0 code entry point","Stack pointer for CPL 0 stack","Test Control Register","See Section 17.13, Time-Stamp Counter.","Read 64 bits msr register.","Write 64 bits to msr register.","RdRand trait to implement the generic rdrand_slice …","RdSeed trait to implement the generic rdseed_slice …","Fills <code>self</code> with random bits. Returns true on success or …","Fills <code>self</code> with random bits. Returns true on success or …","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","","","","","Code Segment types for descriptors. See also Intel 3a, …","Data Segment types for descriptors. See also Intel 3a, …","Entry for IDT, GDT or LDT. Provides size and location of a …","Makes building descriptors easier (hopefully).","Code Execute-Only","Code Execute-Only, accessed","Code Execute-Only, conforming","Code Execute-Only, conforming, accessed","Code Execute/Read","Code Execute/Read, accessed","Code Execute/Read, conforming","Code Execute/Read, conforming, accessed","Trait that defines the architecture specific functions for …","","","","","","Trait to define functions that build an architecture …","","Requestor Privilege Level","","","","Data Read-Only, expand-down","Data Read-Only, expand-down, accessed","Data Read-Only","Data Read-Only, accessed","Data Read/Write","Data Read/Write, accessed","Data Read/Write, expand-down","Data Read/Write, expand-down, accessed","Trait to define functions that build architecture specific …","Specifies which element to load into a segment from …","System-Segment and Gate-Descriptor Types 32-bit mode. See …","System-Segment and Gate-Descriptor Types 64-bit mode See …","Table Indicator (TI) 0 means GDT is used.","Table Indicator (TI) 1 means LDT is used.","","","","Trait to implement for building a task-gate (this …","","","","","","","","Returns the set containing all flags.","","Toggle the AVL bit.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the current value of the code segment register.","","","Set default operation size (false for 16bit segment, true …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Specifies the privilege level of the segment.","Returns the current value of the data segment register.","Returns an empty set of flags.","","","","","","Returns the current value of the extra segment register.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Make a new segment selector from a untyped u16 value.","Returns the current value of the FS segment register.","Returns the current value of the GS segment register.","","Returns segment selector’s index in GDT or LDT.","Inserts the specified flags in-place.","","","","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Set a the interrupt stack table index (only if this ends …","Set L bit if this descriptor is a 64-bit code segment. In …","","","","The segment limit is interpreted in 4-KByte units if this …","","Reload data segment register.","Reload es segment register.","Reload fs segment register.","Reload gs segment register.","Reload stack segment register.","","Create a new SegmentSelector","Returns the complement of this set of flags.","","Indicates whether the segment is present in memory (set) …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Set AVL bit. System software can use this bit to store …","Create a new segment, TSS or LDT descriptor by setting the …","Set D/B. Performs different functions depending on whether …","Specifies the privilege level of the segment. The DPL is …","Set G bit Determines the scaling of the segment limit …","Set L In IA-32e mode, bit 21 of the second doubleword of …","Set Present bit. Indicates whether the segment is present …","Specifies whether the segment descriptor is for a system …","Creates a new descriptor with selector and offset (for IDT …","Set the type of the descriptor (bits 8-11). Indicates the …","Returns the current value of the stack segment register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Loads the task register.","","Returns the current value of the task register.","Read the time stamp counter.","Read the time stamp counter.","Invalidate the given address in the TLB using the <code>invlpg</code> …","Invalidate the TLB completely by reloading the CR3 …","Contains the error value","Contains the success value","A specialized <code>Result</code> type for VMX operations.","Possible outcomes of VMfail pseudo-function used to convey …","VMCS pointer is not valid.","VMCS pointer is valid, but some other error was …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Virtual-machine control structure fields.","VM-execution, VM-exit, and VM-entry control fields.","Fields used to access guest-state area.","Fields used to access host-state area.","VM-exit information fields.","Acknowledge interrupt on exit.","APIC-access address (full).","APIC-access address (high).","Clear IA32_BNDCFGS.","Clear IA32_RTIT_CTL.","Conceal VMX from PT.","Conceal VMX from PT.","Conceal VMX from PT.","CR0 guest/host mask.","CR0 read shadow.","CR3-load exiting.","CR3-store exiting.","CR3-target count.","CR3-target value 0.","CR3-target value 1.","CR3-target value 2.","CR3-target value 3.","CR4 guest/host mask.","CR4 read shadow.","CR8-load exiting.","CR8-store exiting.","Deactivate dual-monitor treatment.","Descriptor-table exiting.","Enable EPT.","Enable INVPCID.","Enable PML.","Enable RDTSCP.","Enable user wait and pause.","Enable VM functions.","Enable VPID.","Enable XSAVES/XRSTORS.","Enable ENCLS exiting.","ENCLS-exiting bitmap (full).","ENCLS-exiting bitmap (high).","Enable ENCLV exiting.","Entry to SMM.","EOI-exit bitmap 0 (full).","EOI-exit bitmap 0 (high).","EOI-exit bitmap 1 (full).","EOI-exit bitmap 1 (high).","EOI-exit bitmap 2 (full).","EOI-exit bitmap 2 (high).","EOI-exit bitmap 3 (full).","EOI-exit bitmap 3 (high).","EPT pointer (full).","EPT pointer (high).","EPTP index.","EPTP-list address (full).","EPTP-list address (high).","EPT-violation #VE.","Exception bitmap.","Executive-VMCS pointer (full).","Executive-VMCS pointer (high).","External-interrupt exiting.","VM-entry controls.","VM-exit controls.","HLT exiting.","Host address-space size.","IA-32e mode guest.","Intel PT uses guest physical addresses.","Interrupt-window exiting.","INVLPG exiting.","Address of I/O bitmap A (full).","Address of I/O bitmap A (high).","Address of I/O bitmap B (full).","Address of I/O bitmap B (high).","Load debug controls.","Load IA32_BNDCFGS.","Load IA32_EFER.","Load IA32_EFER.","Load IA32_PAT.","Load IA32_PAT.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_RTIT_CTL.","Mode-based execute control for EPT.","MONITOR exiting.","Monitor trap flag.","MOV-DR exiting","Address of MSR bitmaps (full).","Address of MSR bitmaps (high).","MWAIT exiting.","NMI exiting.","NMI-window exiting.","Page-fault error-code mask.","Page-fault error-code match.","PAUSE exiting.","PAUSE-loop exiting.","Pin-based VM-execution controls.","PLE_Gap.","PLE_Window.","PML address (full).","PML address (high).","Process posted interrupts.","Posted-interrupt descriptor address (full).","Posted-interrupt descriptor address (high).","Posted-interrupt notification vector.","Primary processor-based VM-execution controls.","Pin-based VM-execution controls.","Primary processor-based VM-execution controls.","RDPMC exiting.","RDRAND exiting.","RDSEED exiting.","RDTSC exiting.","Save debug controls.","Save IA32_EFER.","Save IA32_PAT.","Save VMX-preemption timer.","Activate secondary controls.","Secondary processor-based VM-execution controls.","Sub-page-permission-table pointer (full).","Sub-page-permission-table pointer (high).","Sub-page write permissions for EPT.","Secondary processor-based VM-execution controls.","TPR threshold.","TSC multiplier (full).","TSC multiplier (high).","TSC offset (full).","TSC offset (high).","Unconditional I/O exiting.","Unrestricted guest.","Use I/O bitmaps.","Use MSR bitmaps.","Use TPR shadow.","Use TSC offsetting.","Use TSC scaling.","Virtualize APIC accesses.","APIC-register virtualization.","Virtualize x2APIC mode.","Virtual-interrupt delivery.","Virtual NMIs.","Virtual-APIC address (full).","Virtual-APIC address (high).","Virtualization-exception information address (full).","Virtualization-exception information address (high).","VMCS shadowing.","VM-entry controls.","VM-entry exception error code.","VM-entry instruction length.","VM-entry interruption-information field.","VM-entry MSR-load address (full).","VM-entry MSR-load address (high).","VM-entry MSR-load count.","VM-exit controls.","VM-exit MSR-load address (full).","VM-exit MSR-load address (high).","VM-exit MSR-load count.","VM-exit MSR-store address (full).","VM-exit MSR-store address (high).","VM-exit MSR-store count.","VMREAD-bitmap address (full).","VMREAD-bitmap address (high).","VMWRITE-bitmap address (full).","VMWRITE-bitmap address (high).","Activate VMX-preemption timer.","VM-function controls (full).","VM-function controls (high).","Virtual-processor identifier (VPID).","WBINVD exiting.","XSS-exiting bitmap (full).","XSS-exiting bitmap (high).","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Guest activity state.","Guest CR0.","Guest CR3.","Guest CR4.","Guest CS access rights.","Guest CS base.","Guest CS limit.","Guest CS selector.","Guest DR7.","Guest DS access rights.","Guest DS base.","Guest DS limit.","Guest DS selector.","Guest ES access rights.","Guest ES base.","Guest ES limit.","Guest ES selector.","Guest FS access rights.","Guest FS base.","Guest FS limit.","Guest FS selector.","Guest GDTR base.","Guest GDTR limit.","Guest GS access rights.","Guest GS base.","Guest GS limit.","Guest GS selector.","Guest IA32_BNDCFGS (full).","Guest IA32_BNDCFGS (high).","Guest IA32_DEBUGCTL (full).","Guest IA32_DEBUGCTL (high).","Guest IA32_EFER (full).","Guest IA32_EFER (high).","Guest IA32_PAT (full).","Guest IA32_PAT (high).","Guest IA32_PERF_GLOBAL_CTRL (full).","Guest IA32_PERF_GLOBAL_CTRL (high).","Guest IA32_RTIT_CTL (full).","Guest IA32_RTIT_CTL (high).","Guest IA32_SYSENTER_CS.","Guest IA32_SYSENTER_EIP.","Guest IA32_SYSENTER_ESP.","Guest IDTR base.","Guest IDTR limit.","Guest interruptibility state.","Guest interrupt status.","Guest LDTR access rights.","Guest LDTR base.","Guest LDTR limit.","Guest LDTR selector.","VMCS link pointer (full).","VMCS link pointer (high).","Guest PDPTE0 (full).","Guest PDPTE0 (high).","Guest PDPTE1 (full).","Guest PDPTE1 (high).","Guest PDPTE2 (full).","Guest PDPTE2 (high).","Guest PDPTE3 (full).","Guest PDPTE3 (high).","Guest pending debug exceptions.","PML index.","Guest RFLAGS.","Guest RIP.","Guest RSP.","Guest SMBASE.","Guest SS access rights.","Guest SS base.","Guest SS limit.","Guest SS selector.","Guest TR access rights.","Guest TR base.","Guest TR limit.","Guest TR selector.","VMX-preemption timer value.","Host CR0.","Host CR3.","Host CR4.","Host CS selector.","Host DS selector.","Host ES selector.","Host FS base.","Host FS selector.","Host GDTR base.","Host GS base.","Host GS selector.","Host IA32_EFER (full).","Host IA32_EFER (high).","Host IA32_PAT (full).","Host IA32_PAT (high).","Host IA32_PERF_GLOBAL_CTRL (full).","Host IA32_PERF_GLOBAL_CTRL (high).","Host IA32_SYSENTER_CS.","Host IA32_SYSENTER_EIP.","Host IA32_SYSENTER_ESP.","Host IDTR base.","Host RIP.","Host RSP.","Host SS selector.","Host TR base.","Host TR selector.","Exit qualification.","Exit reason.","Guest-linear address.","Guest-physical address (full).","Guest-physical address (high).","IDT-vectoring error code.","IDT-vectoring information field.","I/O RCX.","I/O RDI.","I/O RIP.","I/O RSI.","VM-exit instruction information.","VM-exit instruction length.","VM-exit interruption error code.","VM-exit interruption information.","VM-instruction error."],"i":[0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,16,16,0,0,14,14,0,0,0,0,15,11,0,13,11,0,15,12,11,16,11,16,12,11,13,11,0,10,10,11,11,12,13,14,15,16,17,10,11,12,13,14,15,16,17,10,9,10,9,11,12,13,14,15,16,17,10,11,12,13,14,15,16,17,10,17,17,11,12,13,14,15,16,17,10,9,11,12,13,14,15,16,17,10,10,0,9,9,9,9,17,9,11,12,13,14,15,16,17,10,11,12,13,14,15,16,17,10,9,9,11,12,13,14,15,16,17,10,17,9,0,10,10,10,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,25,36,37,0,0,0,36,37,36,37,0,0,0,36,37,0,36,37,0,36,37,0,0,0,36,0,0,0,36,37,0,36,37,36,37,0,31,31,31,32,32,32,33,33,33,31,31,32,32,33,33,33,34,35,31,32,33,31,32,33,31,32,33,31,32,33,36,37,31,33,31,33,31,32,33,31,32,33,31,32,33,31,31,32,32,33,33,33,33,36,37,36,37,31,31,32,32,33,33,33,36,37,36,37,36,37,36,37,36,37,151,152,31,32,33,36,34,37,35,151,152,31,32,33,36,34,37,35,31,32,33,36,34,37,35,31,32,33,36,37,36,37,36,37,36,37,36,37,31,32,33,36,37,36,37,34,35,31,31,31,31,31,31,31,32,32,32,32,32,32,32,33,33,33,33,33,33,33,36,36,36,36,36,34,37,37,37,37,37,35,151,152,31,31,31,31,32,32,32,32,33,33,33,33,36,34,37,35,36,37,36,37,36,37,36,37,33,33,31,32,33,36,37,36,37,36,37,36,37,151,152,31,31,31,32,32,32,33,33,33,36,34,37,35,34,35,31,32,33,36,37,31,32,33,34,35,36,37,34,35,31,32,33,34,34,35,34,35,34,35,34,35,34,35,34,35,31,32,33,31,32,33,34,35,36,37,31,32,33,36,37,0,0,31,31,31,32,32,32,33,33,33,36,37,36,37,31,32,33,33,33,31,31,31,32,32,32,33,33,33,36,37,36,37,36,37,36,37,151,152,31,32,33,36,34,37,35,151,152,31,32,33,36,34,37,35,151,152,31,32,33,36,34,37,35,36,37,31,32,33,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,50,51,52,53,54,0,0,0,52,53,54,52,53,54,0,0,0,0,0,0,0,0,50,51,52,53,54,0,52,53,0,50,51,52,53,54,0,0,0,0,0,0,0,0,0,0,0,0,0,52,53,0,0,0,50,51,52,53,54,0,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,0,50,51,52,53,54,42,42,42,43,43,43,44,44,44,42,42,43,43,44,44,44,45,46,47,48,49,42,43,44,42,43,44,42,43,44,42,43,44,42,43,44,42,43,44,50,51,52,53,54,44,44,42,43,44,42,43,44,42,43,44,42,42,43,43,44,44,44,44,50,51,52,53,54,50,51,52,53,54,42,42,43,43,44,44,44,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,153,154,155,42,43,44,50,51,45,46,52,47,53,48,54,49,153,154,155,42,43,44,50,51,45,46,52,47,53,48,54,49,42,43,44,50,51,45,46,52,47,53,48,54,49,42,43,44,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,42,43,44,50,51,52,53,54,50,51,52,53,54,45,46,47,48,49,42,42,42,42,42,42,42,43,43,43,43,43,43,43,44,44,44,44,44,44,44,50,50,50,50,50,51,51,51,51,51,45,46,52,52,52,52,52,47,53,53,53,53,53,48,54,54,54,54,54,49,153,154,155,42,42,42,42,43,43,43,43,44,44,44,44,50,51,45,46,52,47,53,48,54,49,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,44,44,42,43,44,50,51,52,53,54,42,43,44,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,153,154,155,42,42,42,43,43,43,44,44,44,50,51,45,46,52,47,53,48,54,49,45,46,47,48,49,42,43,44,50,51,52,53,54,42,43,44,48,49,50,51,52,53,54,48,49,42,43,44,45,46,47,48,49,42,43,44,47,48,45,46,47,48,49,45,46,47,48,49,47,48,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,42,43,44,42,43,44,45,46,47,48,49,50,51,52,53,54,42,43,44,50,51,52,53,54,0,0,0,0,0,42,42,42,43,43,43,44,44,44,50,51,52,53,54,50,51,52,53,54,42,43,44,44,44,42,43,42,42,42,43,43,43,44,44,44,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,50,51,52,53,54,153,154,155,42,43,44,50,51,45,46,52,47,53,48,54,49,153,154,155,42,43,44,50,51,45,46,52,47,53,48,54,49,153,154,155,42,43,44,50,51,45,46,52,47,53,48,54,49,50,51,52,53,54,42,43,44,0,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,0,55,0,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,0,0,56,0,0,0,56,56,56,0,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,0,0,0,0,0,0,0,0,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,62,62,62,62,62,62,62,62,62,0,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,0,0,0,0,0,0,0,0,60,61,62,60,61,62,60,61,62,60,61,62,60,60,60,60,60,61,61,61,61,61,62,62,62,62,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,0,0,110,0,0,107,107,107,107,110,0,83,0,0,0,0,0,0,106,0,0,83,0,0,0,78,77,106,0,96,96,120,0,0,0,0,0,0,0,0,0,0,0,96,83,107,110,0,0,108,78,77,106,110,0,0,0,0,0,77,0,0,106,0,107,107,96,78,77,0,0,107,83,0,0,0,0,0,0,107,110,110,0,0,78,106,83,0,0,0,0,0,0,77,0,83,0,106,0,0,0,78,77,96,107,77,110,110,0,108,110,63,64,65,66,68,69,68,69,70,71,71,72,66,71,100,112,113,93,114,115,116,91,117,79,118,90,97,73,76,119,64,95,98,96,94,65,101,99,102,92,75,81,63,68,82,83,84,103,85,70,78,104,86,105,106,87,107,108,80,109,88,120,121,89,77,122,69,110,72,66,71,100,112,113,93,114,115,116,91,117,79,118,90,97,73,76,119,64,95,98,96,94,65,101,99,102,92,75,81,63,68,82,83,84,103,85,70,78,104,86,105,106,87,107,108,80,109,88,120,121,89,77,122,69,110,72,71,73,75,76,76,70,79,80,71,81,63,82,83,84,85,70,86,87,88,89,70,90,91,92,93,94,0,95,95,95,95,81,97,84,95,98,95,98,95,98,95,98,99,99,99,99,100,63,63,93,63,63,95,98,96,94,65,101,99,102,92,75,63,68,82,103,70,78,104,105,106,107,108,80,109,77,69,110,71,71,72,104,71,93,93,72,66,71,100,112,113,93,114,115,116,91,117,79,118,90,97,73,76,119,64,95,98,96,96,94,65,101,99,102,92,75,81,63,68,68,82,83,84,84,103,85,70,78,78,104,86,105,106,106,87,107,107,108,108,80,109,88,120,121,89,77,77,122,69,69,110,72,66,71,100,112,113,93,114,115,116,91,117,79,118,90,97,73,76,119,64,95,98,96,94,65,101,99,102,92,75,81,63,68,82,83,84,103,85,70,78,104,86,105,106,87,107,107,108,80,109,88,120,121,89,77,122,69,110,81,81,81,113,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,119,81,81,81,119,81,119,81,81,81,81,119,119,81,65,94,76,72,76,72,76,76,72,75,71,72,112,71,72,75,72,93,71,100,112,101,71,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,65,71,112,112,71,72,71,71,71,79,70,90,94,71,72,71,71,75,101,71,71,100,100,71,118,118,100,72,72,71,72,112,94,100,101,71,72,102,102,71,112,94,112,71,112,101,101,100,112,101,71,100,75,94,94,100,100,100,100,100,100,100,100,71,72,100,65,65,94,65,65,112,90,117,117,116,112,72,101,109,90,91,72,72,71,94,71,65,117,72,71,72,71,72,71,102,112,71,90,71,72,101,101,91,112,72,71,71,75,71,101,101,71,71,71,71,72,72,72,71,112,100,71,90,94,72,112,75,112,71,71,71,100,90,112,65,71,112,112,112,72,112,65,75,94,90,112,75,75,75,112,118,118,112,112,90,72,112,75,112,71,101,71,71,71,71,71,71,72,101,71,94,72,101,72,71,72,94,101,71,94,71,112,90,90,72,91,90,94,71,112,71,101,100,100,112,65,112,101,71,75,101,71,94,112,75,112,65,72,71,114,72,71,114,114,114,79,80,109,114,114,95,95,95,95,64,71,104,72,66,71,100,112,113,93,114,115,116,91,117,79,118,90,97,73,76,119,64,95,98,96,94,65,101,99,102,92,75,81,63,68,82,83,84,103,85,70,78,104,86,105,106,87,107,108,80,109,88,120,121,89,77,122,69,110,82,85,86,87,88,89,122,65,93,93,93,115,93,76,70,115,115,70,93,93,93,70,70,79,80,114,118,95,98,95,98,95,98,95,98,99,99,99,99,117,98,98,98,98,117,116,98,98,98,98,104,70,105,105,65,115,112,76,70,70,118,118,75,109,71,65,65,91,117,75,118,71,0,81,82,85,86,87,88,89,122,92,92,97,84,65,93,97,115,76,65,65,75,121,70,72,73,73,105,115,101,116,118,103,103,103,103,103,76,70,105,115,121,104,71,115,101,104,104,104,104,104,104,104,104,90,90,90,92,72,66,71,100,112,113,93,114,115,116,91,117,79,118,90,97,73,76,119,64,95,98,96,94,65,101,99,102,92,75,81,63,68,82,83,84,103,85,70,78,104,86,105,106,87,107,108,80,109,88,120,121,89,77,122,69,110,72,66,71,100,112,113,93,114,115,116,91,117,79,118,90,97,73,76,119,64,95,98,96,94,65,101,99,102,92,75,81,63,68,82,83,84,103,85,70,78,104,86,105,106,87,107,108,80,109,88,120,121,89,77,122,69,110,97,64,84,72,66,71,100,112,113,93,114,115,116,91,117,79,118,90,97,73,76,119,64,95,98,96,94,65,101,99,102,92,75,81,63,68,82,83,84,103,85,70,78,104,86,105,106,87,107,108,80,109,88,120,121,89,77,122,69,110,93,76,81,92,105,114,114,114,114,114,114,114,114,114,114,114,114,0,124,124,124,124,124,0,124,124,0,0,0,127,127,127,127,126,126,125,125,125,125,0,0,128,128,128,126,126,128,124,128,124,124,124,124,124,124,124,124,124,125,126,127,128,124,125,126,127,128,124,125,126,127,128,124,124,125,128,124,128,124,128,125,125,125,0,0,0,0,0,0,0,0,0,0,0,0,124,128,128,128,128,125,125,128,124,125,126,127,128,124,124,124,124,124,124,125,126,127,128,124,125,126,127,128,124,124,124,124,124,124,124,124,124,125,126,127,128,124,124,124,124,124,124,124,124,124,124,124,125,126,127,128,124,125,126,127,128,124,125,126,127,128,124,125,0,129,129,129,129,129,129,129,0,0,0,129,0,129,129,0,0,129,129,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,130,0,130,0,130,0,0,0,130,0,130,0,130,130,130,130,130,130,130,130,131,130,131,130,130,130,130,130,131,130,0,130,0,130,130,131,131,130,130,130,130,130,130,131,130,130,130,130,130,130,130,130,130,131,130,131,130,130,131,130,130,130,130,131,130,130,130,130,131,130,131,130,131,130,130,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,133,0,0,0,0,0,0,0,0,0,137,138,138,0,0,0,0,140,140,140,140,140,140,140,140,0,137,138,138,137,138,0,134,57,57,57,57,139,139,139,139,139,139,139,139,0,0,0,0,57,57,138,138,138,0,137,138,138,137,138,137,138,57,134,135,57,57,57,57,57,57,57,57,137,138,139,140,135,134,57,137,138,139,140,135,134,136,135,135,135,57,137,138,139,140,134,57,141,135,57,57,0,141,135,135,134,57,135,0,57,57,137,138,139,140,0,57,142,135,135,57,57,57,57,57,57,137,138,139,140,135,134,134,57,137,138,139,140,135,134,57,57,57,57,57,0,0,57,57,57,136,135,135,135,57,57,57,137,138,139,140,135,134,57,57,135,135,143,135,135,135,0,0,0,0,0,0,134,57,57,57,135,57,57,134,134,134,134,134,134,134,134,134,134,0,57,57,57,144,135,57,136,135,135,135,57,137,138,139,140,135,134,57,137,138,139,140,135,134,136,135,135,135,57,137,138,139,140,135,134,57,134,0,0,0,0,0,0,0,59,59,0,0,145,145,145,145,145,145,145,145,145,145,0,0,0,0,0,150,0,0,150,150,148,149,150,0,0,147,147,0,0,0,0,0,0,0,147,147,149,148,148,148,148,148,148,148,148,148,148,0,0,148,149,0,0,0,0,0,0,0,0,0,0,0,0,0,148,0,0,0,146,0,0,147,150,149,148,147,147,0,0,0,0,149,149,149,150,149,150,149,150,149,148,147,147,147,0,0,147,146,147,0,0,147,148,0,0,0,0,0,146,0,0,0,0,0,0,147,148,148,147,150,150,150,150,147,0,0,0,148,0,0,0,0,0,0,147,148,147,147,147,147,148,148,148,148,148,146,0,0,0,0,148,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,146,0,0,0,148,0,0,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,146,146,146,146,147,147,147,147,147,148,148,148,148,148,149,149,149,149,149,150,150,150,150,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],0,0,0,0,0,[[1,1],2],0,[[1,3],4],[-1,-1,[]],0,0,[[],5],0,[-1,-2,[],[]],0,0,0,0,[[],6],0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,2],[10,10],[9,5],[[11,11],2],[[12,12],2],[[13,13],2],[[14,14],2],[[15,15],2],[[16,16],2],[[17,17],2],[[10,10],2],[[11,3],4],[[12,3],4],[[13,3],4],[[14,3],4],[[15,3],4],[[16,3],4],[[17,3],4],[[10,3],4],[[18,10,16,11,12,13,14,15],17],[[18,10,16,11,12,13,14,15],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,20],[-1,-2,[],[]],0,[[9,10],5],[9,5],[[9,10,18],5],[9,19],[17,19],[[9,17],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[9,18],5],[[9,6],5],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[17,19],[9,19],0,[10,19],[10,19],[10,19],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[21,5],[[21,18,18],5],[-1,-1,[]],[21,18],[-1,-2,[],[]],[20,21],[21,18],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[21,18],0,[22,5],[-1,-2,[],[]],[-1,-2,[],[]],[22,2],[[],22],[22,5],[22,5],[[22,3],4],[-1,-1,[]],[22,19],[-1,-2,[],[]],[[22,10],5],[22,5],[[22,10,18],5],[22,19],[[],22],[[22,17],5],[[22,6],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[22,18],5],[[22,6],5],[-1,8,[]],[22,19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[23,5],[-1,-2,[],[]],[-1,-2,[],[]],[23,2],[23,5],[23,5],[[23,3],4],[-1,-1,[]],[23,19],[-1,-2,[],[]],[[23,10],5],[23,5],[[23,10,18],5],[23,19],[[[24,[19]]],23],[[23,17],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[23,18],5],[[23,6],5],[-1,8,[]],[23,19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],25],[[25,25],25],[[25,25],5],[[25,25],25],[[25,25],5],[25,19],[[25,25],25],[[25,25],5],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[25,25],[[25,25],26],[25,25],[[25,25],2],[[25,25],25],[[],25],[[25,25],2],[[25,-1],5,[[28,[],[[27,[25]]]]]],[[25,3],4],[[25,3],4],[[25,3],4],[[25,3],4],[[25,3],4],[-1,-1,[]],[19,[[29,[25]]]],[19,25],[19,25],[-1,25,[[28,[],[[27,[25]]]]]],[1,25],[[25,-1],5,30],[[25,25],5],[[25,25],25],[[25,25],2],[-1,-2,[],[]],[25,2],[25,2],[[],25],[25,25],[[25,25],[[29,[26]]]],[[25,25],5],[[25,25,2],5],[[],5],[[25,25],25],[[25,25],5],[[25,25],25],[[25,25],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[25,25],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[31,19],-1,[]],[[31,31],-1,[]],[[31,20],-1,[]],[[32,19],-1,[]],[[32,20],-1,[]],[[32,32],-1,[]],[[33,19],-1,[]],[[33,20],-1,[]],[[33,33],-1,[]],[[31,19],5],[[31,31],5],[[32,19],5],[[32,32],5],[[33,19],5],[[33,20],5],[[33,33],5],[34,31],[35,31],[31,31],[32,32],[33,33],[31,31],[32,32],[33,33],[31,31],[32,32],[33,33],[31,31],[32,32],[33,33],[[],36],[[],37],[31],[33],[31],[33],[31,19],[32,19],[33,19],[31,20],[32,20],[33,20],[31,19],[32,19],[33,19],[[31,19],-1,[]],[[31,31],31],[[32,19],-1,[]],[[32,32],32],[[33,19],-1,[]],[[33,20],-1,[]],[[33,33],-1,[]],[[33,38],-1,[]],[[36,36],36],[[37,37],37],[[36,36],5],[[37,37],5],[[31,19],-1,[]],[[31,31],-1,[]],[[32,32],-1,[]],[[32,19],-1,[]],[[33,20],-1,[]],[[33,19],-1,[]],[[33,33],33],[[36,36],36],[[37,37],37],[[36,36],5],[[37,37],5],[36,19],[37,19],[[36,36],36],[[37,37],37],[[36,36],5],[[37,37],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[32,32],[33,33],[36,36],[34,34],[37,37],[35,35],[[31,31],26],[[32,32],26],[[33,33],26],[[36,36],26],[[37,37],26],[36,36],[37,37],[[36,36],2],[[37,37],2],[[36,36],36],[[37,37],37],[[],36],[[],37],[[31,31],2],[[32,32],2],[[33,33],2],[[36,36],2],[[37,37],2],[[36,-1],5,[[28,[],[[27,[36]]]]]],[[37,-1],5,[[28,[],[[27,[37]]]]]],[34,36],[35,37],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[32,3],4],[[32,3],4],[[32,3],4],[[32,3],4],[[32,3],4],[[32,3],4],[[32,3],4],[[33,3],4],[[33,3],4],[[33,3],4],[[33,3],4],[[33,3],4],[[33,3],4],[[33,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[34,3],4],[[37,3],4],[[37,3],4],[[37,3],4],[[37,3],4],[[37,3],4],[[35,3],4],[-1,-1,[]],[-1,-1,[]],[38,31],[-1,-1,[]],[19,31],[20,31],[19,32],[-1,-1,[]],[20,32],[38,32],[38,33],[-1,-1,[]],[20,33],[19,33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,[[29,[36]]]],[19,[[29,[37]]]],[19,36],[19,37],[19,36],[19,37],[-1,36,[[28,[],[[27,[36]]]]]],[-1,37,[[28,[],[[27,[37]]]]]],[19,33],[20,33],[[31,-1],5,30],[[32,-1],5,30],[[33,-1],5,30],[[36,-1],5,30],[[37,-1],5,30],[[36,36],5],[[37,37],5],[[36,36],36],[[37,37],37],[[36,36],2],[[37,37],2],[-1,-2,[],[]],[-1,-2,[],[]],[31,20],[31,19],[-1,-2,[],[]],[32,20],[-1,-2,[],[]],[32,19],[33,19],[33,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,2],[35,2],[[31,-1],2,[[39,[19]],40]],[[32,-1],2,[[39,[19]],40]],[[33,-1],2,[[39,[19]],40]],[36,2],[37,2],[31,2],[32,2],[33,2],[34,2],[35,2],[36,2],[37,2],[34,2],[35,2],[31,2],[32,2],[33,2],[34,2],[34,2],[35,2],[34,2],[35,2],[34,2],[35,2],[34,2],[35,2],[34,2],[35,2],[34,2],[35,2],[31,2],[32,2],[33,2],[31,19],[32,19],[33,19],[[31,36],34],[[31,37],35],[36,36],[37,37],[[31,31],[[29,[26]]]],[[32,32],[[29,[26]]]],[[33,33],[[29,[26]]]],[[36,36],[[29,[26]]]],[[37,37],[[29,[26]]]],[33,20],[33,20],[[31,31],-1,[]],[[31,19],-1,[]],[[31,20],-1,[]],[[32,20],-1,[]],[[32,19],-1,[]],[[32,32],-1,[]],[[33,-1],-1,[]],[[33,-1],-1,[]],[[33,33],-1,[]],[[36,36],5],[[37,37],5],[[36,36,2],5],[[37,37,2],5],[[31,19],-1,[]],[[32,19],-1,[]],[[33,38],-1,[]],[[33,20],-1,[]],[[33,19],-1,[]],[[31,20],-1,[]],[[31,19],-1,[]],[[31,31],-1,[]],[[32,19],-1,[]],[[32,20],-1,[]],[[32,32],-1,[]],[[33,20],-1,[]],[[33,19],-1,[]],[[33,33],-1,[]],[[36,36],36],[[37,37],37],[[36,36],5],[[37,37],5],[[36,36],36],[[37,37],37],[[36,36],5],[[37,37],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[36,36],36],[[37,37],37],[[],31],[[],32],[[],33],0,[-1,-2,[],[]],[-1,-2,[],[]],[41,41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[41,3],4],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,[[],41],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[42,20],-1,[]],[[42,6],-1,[]],[[42,42],-1,[]],[[43,43],-1,[]],[[43,20],-1,[]],[[43,6],-1,[]],[[44,6],-1,[]],[[44,44],-1,[]],[[44,20],-1,[]],[[42,6],5],[[42,42],5],[[43,43],5],[[43,6],5],[[44,44],5],[[44,6],5],[[44,20],5],[45,42],[46,42],[47,42],[48,42],[49,42],[42,42],[43,43],[44,44],[42,42],[43,43],[44,44],[42,42],[43,43],[44,44],[42,42],[43,43],[44,44],[42,42],[43,43],[44,44],[42,42],[43,43],[44,44],[[],50],[[],51],[[],52],[[],53],[[],54],[44],[44],[42,6],[43,6],[44,6],[42,20],[43,20],[44,20],[42,6],[43,6],[44,6],[[42,6],-1,[]],[[42,42],42],[[43,43],43],[[43,6],-1,[]],[[44,44],-1,[]],[[44,6],-1,[]],[[44,20],-1,[]],[[44,38],-1,[]],[[50,50],50],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[50,50],5],[[51,51],5],[[52,52],5],[[53,53],5],[[54,54],5],[[42,6],-1,[]],[[42,42],-1,[]],[[43,43],-1,[]],[[43,6],-1,[]],[[44,6],-1,[]],[[44,20],-1,[]],[[44,44],44],[[50,50],50],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[50,50],5],[[51,51],5],[[52,52],5],[[53,53],5],[[54,54],5],[50,6],[51,6],[52,6],[53,6],[54,6],[[50,50],50],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[50,50],5],[[51,51],5],[[52,52],5],[[53,53],5],[[54,54],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[43,43],[44,44],[50,50],[51,51],[45,45],[46,46],[52,52],[47,47],[53,53],[48,48],[54,54],[49,49],[[42,42],26],[[43,43],26],[[44,44],26],[[50,50],26],[[51,51],26],[[52,52],26],[[53,53],26],[[54,54],26],[50,50],[51,51],[52,52],[53,53],[54,54],[[50,50],2],[[51,51],2],[[52,52],2],[[53,53],2],[[54,54],2],[[50,50],50],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[],50],[[],51],[[],52],[[],53],[[],54],[[42,42],2],[[43,43],2],[[44,44],2],[[50,50],2],[[51,51],2],[[52,52],2],[[53,53],2],[[54,54],2],[[50,-1],5,[[28,[],[[27,[50]]]]]],[[51,-1],5,[[28,[],[[27,[51]]]]]],[[52,-1],5,[[28,[],[[27,[52]]]]]],[[53,-1],5,[[28,[],[[27,[53]]]]]],[[54,-1],5,[[28,[],[[27,[54]]]]]],[45,50],[46,51],[47,52],[48,53],[49,54],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[51,3],4],[[51,3],4],[[51,3],4],[[51,3],4],[[51,3],4],[[45,3],4],[[46,3],4],[[52,3],4],[[52,3],4],[[52,3],4],[[52,3],4],[[52,3],4],[[47,3],4],[[53,3],4],[[53,3],4],[[53,3],4],[[53,3],4],[[53,3],4],[[48,3],4],[[54,3],4],[[54,3],4],[[54,3],4],[[54,3],4],[[54,3],4],[[49,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,42],[38,42],[6,42],[20,43],[-1,-1,[]],[6,43],[38,43],[6,44],[38,44],[-1,-1,[]],[20,44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[29,[50]]]],[6,[[29,[51]]]],[6,[[29,[52]]]],[6,[[29,[53]]]],[6,[[29,[54]]]],[6,50],[6,51],[6,52],[6,53],[6,54],[6,50],[6,51],[6,52],[6,53],[6,54],[-1,50,[[28,[],[[27,[50]]]]]],[-1,51,[[28,[],[[27,[51]]]]]],[-1,52,[[28,[],[[27,[52]]]]]],[-1,53,[[28,[],[[27,[53]]]]]],[-1,54,[[28,[],[[27,[54]]]]]],[6,44],[20,44],[[42,-1],5,30],[[43,-1],5,30],[[44,-1],5,30],[[50,-1],5,30],[[51,-1],5,30],[[52,-1],5,30],[[53,-1],5,30],[[54,-1],5,30],[42,6],[43,6],[44,6],[[50,50],5],[[51,51],5],[[52,52],5],[[53,53],5],[[54,54],5],[[50,50],50],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[50,50],2],[[51,51],2],[[52,52],2],[[53,53],2],[[54,54],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,6],[42,20],[-1,-2,[],[]],[-1,-2,[],[]],[43,20],[43,6],[44,6],[44,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,2],[46,2],[47,2],[48,2],[49,2],[[42,-1],2,[[39,[6]],40]],[[43,-1],2,[[39,[6]],40]],[[44,-1],2,[[39,[6]],40]],[50,2],[51,2],[52,2],[53,2],[54,2],[42,2],[43,2],[44,2],[48,2],[49,2],[50,2],[51,2],[52,2],[53,2],[54,2],[48,2],[49,2],[42,2],[43,2],[44,2],[45,2],[46,2],[47,2],[48,2],[49,2],[42,2],[43,2],[44,2],[47,2],[48,2],[45,2],[46,2],[47,2],[48,2],[49,2],[45,2],[46,2],[47,2],[48,2],[49,2],[47,2],[48,2],[45,2],[46,2],[47,2],[48,2],[49,2],[45,2],[46,2],[47,2],[48,2],[49,2],[45,2],[46,2],[47,2],[48,2],[49,2],[42,2],[43,2],[44,2],[42,6],[43,6],[44,6],[[42,50],45],[[42,51],46],[[42,52],47],[[42,53],48],[[42,54],49],[50,50],[51,51],[52,52],[53,53],[54,54],[[42,42],[[29,[26]]]],[[43,43],[[29,[26]]]],[[44,44],[[29,[26]]]],[[50,50],[[29,[26]]]],[[51,51],[[29,[26]]]],[[52,52],[[29,[26]]]],[[53,53],[[29,[26]]]],[[54,54],[[29,[26]]]],[44,20],[44,20],[44,20],[44,20],[44,20],[[42,6],-1,[]],[[42,20],-1,[]],[[42,42],-1,[]],[[43,43],-1,[]],[[43,6],-1,[]],[[43,20],-1,[]],[[44,44],-1,[]],[[44,-1],-1,[]],[[44,-1],-1,[]],[[50,50],5],[[51,51],5],[[52,52],5],[[53,53],5],[[54,54],5],[[50,50,2],5],[[51,51,2],5],[[52,52,2],5],[[53,53,2],5],[[54,54,2],5],[[42,6],-1,[]],[[43,6],-1,[]],[[44,38],-1,[]],[[44,20],-1,[]],[[44,6],-1,[]],[42,[[5,[19,19]]]],[43,[[5,[19,19]]]],[[42,20],-1,[]],[[42,42],-1,[]],[[42,6],-1,[]],[[43,6],-1,[]],[[43,43],-1,[]],[[43,20],-1,[]],[[44,6],-1,[]],[[44,20],-1,[]],[[44,44],-1,[]],[[50,50],50],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[50,50],5],[[51,51],5],[[52,52],5],[[53,53],5],[[54,54],5],[[50,50],50],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[50,50],5],[[51,51],5],[[52,52],5],[[53,53],5],[[54,54],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[50,50],50],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[],42],[[],43],[[],44],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],55],[[55,55],55],[[55,55],5],[[55,55],55],[[55,55],5],[55,6],[[55,55],55],[[55,55],5],[-1,-2,[],[]],[-1,-2,[],[]],0,[55,55],[[55,55],26],[55,55],[[55,55],2],[[55,55],55],[[],55],[[55,55],2],[[55,-1],5,[[28,[],[[27,[55]]]]]],[[55,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[-1,-1,[]],[6,[[29,[55]]]],[6,55],[6,55],[-1,55,[[28,[],[[27,[55]]]]]],[1,55],[6,55],[[55,-1],5,30],[[55,55],5],[[55,55],55],[[55,55],2],[-1,-2,[],[]],[55,2],[55,2],[[],55],[55,55],[[55,55],[[29,[26]]]],[[],55],[[55,55],5],[55,5],[[55,55,2],5],0,[[55,55],55],[[55,55],5],[[55,55],55],[[55,55],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[55,55],55],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[[],56],[[56,3],4],[-1,-1,[]],0,0,[-1,-2,[],[]],[57,5],[[],6],[[],6],[[56,6,6],5],[[56,18],5],[[56,57,6],5],[[],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[6,5],[6,5],[[6,6],5],[[6,6],5],[[6,6],5],[6,19],[6,6],[[6,6],5],[[6,6],5],[[6,6,6],19],[[6,6,6],19],[[6,6,6],19],[[6,6],19],[[6,6],19],[[6,6],5],[6,5],[6,19],[[6,6,6],19],[[6,6],19],[[6,6,6],19],[[6,6],[[5,[19,6]]]],[[6,6],5],[[6,6],5],[[6,6],5],[[6,6,6],5],[[6,6],5],[6,6],[[6,6],6],[[6,6,6],6],[[6,6,6,6],6],[[6,6,6,6,6],6],[[6,6,6,6,6,6],6],[[6,6,6,6,6,6,6],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[[],58],[[58,3],4],[-1,-1,[]],[-1,-2,[],[]],0,0,[[],58],0,0,0,0,0,[[58,20,6],5],[[58,1,6],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[6,[[59,[5]]]],[[],[[59,[5]]]],[6,[[59,[5]]]],[[],[[59,[6]]]],[19,[[59,[6]]]],[[],[[59,[5]]]],[[19,6],[[59,[5]]]],[[],[[59,[5]]]],[6,[[59,[5]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],60],[[],61],[[],62],[[60,60],60],[[61,61],61],[[62,62],62],[[60,60],5],[[61,61],5],[[62,62],5],[[60,60],60],[[61,61],61],[[62,62],62],[[60,60],5],[[61,61],5],[[62,62],5],[60,20],[61,20],[62,6],[[60,60],60],[[61,61],61],[[62,62],62],[[60,60],5],[[61,61],5],[[62,62],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,60],[61,61],[62,62],[[60,60],26],[[61,61],26],[[62,62],26],[60,60],[61,61],[62,62],[[60,60],2],[[61,61],2],[[62,62],2],[[],60],[60,5],[[],20],[6,5],[[],6],[6,5],[[],61],[61,5],[[60,60],60],[[61,61],61],[[62,62],62],[[],60],[[],61],[[],62],[[60,60],2],[[61,61],2],[[62,62],2],[[60,-1],5,[[28,[],[[27,[60]]]]]],[[61,-1],5,[[28,[],[[27,[61]]]]]],[[62,-1],5,[[28,[],[[27,[62]]]]]],[[60,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[[61,3],4],[[61,3],4],[[61,3],4],[[61,3],4],[[61,3],4],[[62,3],4],[[62,3],4],[[62,3],4],[[62,3],4],[[62,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,[[29,[60]]]],[20,[[29,[61]]]],[6,[[29,[62]]]],[20,60],[20,61],[6,62],[20,60],[20,61],[6,62],[-1,60,[[28,[],[[27,[60]]]]]],[-1,61,[[28,[],[[27,[61]]]]]],[-1,62,[[28,[],[[27,[62]]]]]],[[60,-1],5,30],[[61,-1],5,30],[[62,-1],5,30],[[60,60],5],[[61,61],5],[[62,62],5],[[60,60],60],[[61,61],61],[[62,62],62],[[60,60],2],[[61,61],2],[[62,62],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,2],[61,2],[62,2],[60,2],[61,2],[62,2],[60,60],[61,61],[62,62],[[60,60],[[29,[26]]]],[[61,61],[[29,[26]]]],[[62,62],[[29,[26]]]],[[60,60],5],[[61,61],5],[[62,62],5],[[60,60,2],5],[[61,61,2],5],[[62,62,2],5],[[60,60],60],[[61,61],61],[[62,62],62],[[60,60],5],[[61,61],5],[[62,62],5],[[60,60],60],[[61,61],61],[[62,62],62],[[60,60],5],[[61,61],5],[[62,62],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[60,60],60],[[61,61],61],[[62,62],62],[[],62],[62,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[63,2],[64,[[29,[19]]]],[65,18],[66,67],[68,67],[69,67],[68,67],[69,67],[70,20],[71,18],[71,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,19],[71,18],[73,74],[75,18],[76,18],[76,77],[70,78],[79,18],[80,18],[71,18],[81,81],[63,63],[82,82],[83,83],[84,84],[85,85],[70,70],[86,86],[87,87],[88,88],[89,89],[70,20],[90,18],[91,19],[92,18],[93,18],[94,19],0,[95,96],[95,18],[95,18],[95,18],[[],81],[97,19],[84,67],[95,96],[98,96],[95,18],[98,74],[95,96],[98,96],[95,18],[98,74],[99,96],[99,18],[99,96],[99,18],[100,18],0,0,[93,18],0,0,[[95,95],2],[[98,98],2],[[96,96],2],[[94,94],2],[[65,65],2],[[101,101],2],[[99,99],2],[[102,102],2],[[92,92],2],[[75,75],2],[[63,63],2],[[68,68],2],[[82,82],2],[[103,103],2],[[70,70],2],[[78,78],2],[[104,104],2],[[105,105],2],[[106,106],2],[[107,107],2],[[108,108],2],[[80,80],2],[[109,109],2],[[77,77],2],[[69,69],2],[[110,110],2],[71,18],[71,18],[72,19],[104,2],[71,18],[93,18],[93,18],[[72,3],[[7,[5,111]]]],[[66,3],[[7,[5,111]]]],[[71,3],[[7,[5,111]]]],[[100,3],[[7,[5,111]]]],[[112,3],[[7,[5,111]]]],[[113,3],[[7,[5,111]]]],[[93,3],[[7,[5,111]]]],[[114,3],[[7,[5,111]]]],[[115,3],[[7,[5,111]]]],[[116,3],[[7,[5,111]]]],[[91,3],[[7,[5,111]]]],[[117,3],[[7,[5,111]]]],[[79,3],[[7,[5,111]]]],[[118,3],[[7,[5,111]]]],[[90,3],[[7,[5,111]]]],[[97,3],[[7,[5,111]]]],[[73,3],[[7,[5,111]]]],[[76,3],[[7,[5,111]]]],[[119,3],[[7,[5,111]]]],[[64,3],[[7,[5,111]]]],[[95,3],[[7,[5,111]]]],[[98,3],[[7,[5,111]]]],[[96,3],[[7,[5,111]]]],[[96,3],[[7,[5,111]]]],[[94,3],[[7,[5,111]]]],[[65,3],[[7,[5,111]]]],[[101,3],[[7,[5,111]]]],[[99,3],[[7,[5,111]]]],[[102,3],[[7,[5,111]]]],[[92,3],[[7,[5,111]]]],[[75,3],[[7,[5,111]]]],[[81,3],[[7,[5,111]]]],[[63,3],[[7,[5,111]]]],[[68,3],[[7,[5,111]]]],[[68,3],[[7,[5,111]]]],[[82,3],[[7,[5,111]]]],[[83,3],[[7,[5,111]]]],[[84,3],[[7,[5,111]]]],[[84,3],[[7,[5,111]]]],[[103,3],[[7,[5,111]]]],[[85,3],[[7,[5,111]]]],[[70,3],[[7,[5,111]]]],[[78,3],[[7,[5,111]]]],[[78,3],[[7,[5,111]]]],[[104,3],[[7,[5,111]]]],[[86,3],[[7,[5,111]]]],[[105,3],[[7,[5,111]]]],[[106,3],[[7,[5,111]]]],[[106,3],[[7,[5,111]]]],[[87,3],[[7,[5,111]]]],[[107,3],[[7,[5,111]]]],[[107,3],[[7,[5,111]]]],[[108,3],[[7,[5,111]]]],[[108,3],[[7,[5,111]]]],[[80,3],[[7,[5,111]]]],[[109,3],[[7,[5,111]]]],[[88,3],[[7,[5,111]]]],[[120,3],[[7,[5,111]]]],[[121,3],[[7,[5,111]]]],[[89,3],[[7,[5,111]]]],[[77,3],[[7,[5,111]]]],[[77,3],[[7,[5,111]]]],[[122,3],[[7,[5,111]]]],[[69,3],[[7,[5,111]]]],[[69,3],[[7,[5,111]]]],[[110,3],[[7,[5,111]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,107],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[81,[[29,[94]]]],[81,[[29,[82]]]],[81,[[29,[85]]]],[113,19],[81,[[29,[89]]]],[81,[[29,[113]]]],[81,[[29,[112]]]],[81,[[29,[72]]]],[81,[[29,[114]]]],[81,[[29,[86]]]],[81,[[29,[86]]]],[81,[[29,[71]]]],[81,[[29,[64]]]],[81,[[29,[95]]]],[81,[[29,[98]]]],[81,[[29,[75]]]],[81,[[29,[104]]]],[81,[[29,[93]]]],[81,[[29,[102]]]],[81,[[29,[66]]]],[81,[[29,[65]]]],[81,[[29,[73]]]],[81,[[29,[103]]]],[81,[[29,[92]]]],[81,[[29,[90]]]],[119,19],[81,[[29,[117]]]],[81,[[29,[116]]]],[81,[[29,[118]]]],[119,74],[81,[[29,[119]]]],[119,19],[81,[[29,[101]]]],[81,[[29,[100]]]],[81,[[29,[99]]]],[81,[[29,[97]]]],[119,[[29,[122]]]],[119,[[29,[69]]]],[81,[[29,[68]]]],[65,18],[94,2],[76,2],[72,2],[76,2],[72,2],[76,2],[76,2],[72,2],[75,2],[71,2],[72,2],[112,2],[71,2],[72,2],[75,2],[72,2],[93,2],[71,2],[100,2],[112,2],[101,2],[71,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[65,2],[71,2],[112,2],[112,2],[71,2],[72,2],[71,2],[71,2],[71,2],[79,2],[70,2],[90,2],[94,2],[71,2],[72,2],[71,2],[71,2],[75,2],[101,2],[71,2],[71,2],[100,2],[100,2],[71,2],[118,2],[118,2],[100,2],[72,2],[72,2],[71,2],[72,2],[112,2],[94,2],[100,2],[101,2],[71,2],[72,2],[102,2],[102,2],[71,2],[112,2],[94,2],[112,2],[71,2],[112,2],[101,2],[101,2],[100,2],[112,2],[101,2],[71,2],[100,2],[75,2],[94,2],[94,2],[100,2],[100,2],[100,2],[100,2],[100,2],[100,2],[100,2],[100,2],[71,2],[72,2],[100,2],[65,2],[65,2],[94,2],[65,2],[65,2],[112,2],[90,2],[117,2],[117,2],[116,2],[112,2],[72,2],[101,2],[109,2],[90,2],[91,2],[72,2],[72,2],[71,2],[94,2],[71,2],[65,2],[117,2],[72,2],[71,2],[72,2],[71,2],[72,2],[71,2],[102,2],[112,2],[71,2],[90,2],[71,2],[72,2],[101,2],[101,2],[91,2],[112,2],[72,2],[71,2],[71,2],[75,2],[71,2],[101,2],[101,2],[71,2],[71,2],[71,2],[71,2],[72,2],[72,2],[72,2],[71,2],[112,2],[100,2],[71,2],[90,2],[94,2],[72,2],[112,2],[75,2],[112,2],[71,2],[71,2],[71,2],[100,2],[90,2],[112,2],[65,2],[71,2],[112,2],[112,2],[112,2],[72,2],[112,2],[65,2],[75,2],[94,2],[90,2],[112,2],[75,2],[75,2],[75,2],[112,2],[118,2],[118,2],[112,2],[112,2],[90,2],[72,2],[112,2],[75,2],[112,2],[71,2],[101,2],[71,2],[71,2],[71,2],[71,2],[71,2],[71,2],[72,2],[101,2],[71,2],[94,2],[72,2],[101,2],[72,2],[71,2],[72,2],[94,2],[101,2],[71,2],[94,2],[71,2],[112,2],[90,2],[90,2],[72,2],[91,2],[90,2],[94,2],[71,2],[112,2],[71,2],[101,2],[100,2],[100,2],[112,2],[65,2],[112,2],[101,2],[71,2],[75,2],[101,2],[71,2],[94,2],[112,2],[75,2],[112,2],[65,2],[72,2],[71,2],[114,2],[72,2],[71,2],[114,2],[114,2],[114,2],[79,74],[80,74],[109,74],[114,2],[114,2],[95,96],[95,18],[95,18],[95,18],[64,110],[71,18],[104,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[65,74],[93,2],[93,2],[93,2],[115,2],[93,2],[76,2],[70,2],[115,2],[115,2],[70,2],[93,2],[93,2],[93,2],[70,2],[70,2],[79,19],[80,19],[114,87],[118,88],[95,96],[98,96],[95,18],[98,74],[95,96],[98,96],[95,18],[98,74],[99,96],[99,18],[99,96],[99,18],[117,[[29,[80]]]],[98,96],[98,18],[98,18],[98,74],[117,[[29,[79]]]],[116,[[29,[91]]]],[98,96],[98,18],[98,18],[98,74],[104,74],[70,18],[105,18],[105,106],[65,18],[115,108],[112,18],[76,74],[70,20],[70,20],[118,18],[118,18],[75,19],[109,74],[71,18],[65,74],[65,20],[91,19],[117,[[29,[109]]]],[75,19],[118,19],[71,18],0,[[],81],[82,[[29,[84]]]],[85,[[29,[70]]]],[86,[[29,[105]]]],[87,[[29,[115]]]],[88,[[29,[120]]]],[89,[[29,[76]]]],[122,[[29,[63]]]],[92,18],[92,18],[97,19],0,[65,20],[93,18],[97,19],[115,19],[76,18],[65,20],[65,18],[75,18],[121,6],[70,20],[72,19],[73,74],[73,74],[105,74],[115,107],[101,18],[116,19],[118,[[5,[6,6]]]],[103,6],[103,123],[103,19],[103,19],[103,19],[76,19],[70,20],[105,19],[115,19],[121,6],[104,74],[71,18],0,[101,19],[104,74],[104,74],[104,74],[104,74],[104,74],[104,74],[104,74],[104,74],[90,74],[90,74],[90,74],[92,18],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[97,[[29,[6]]]],[64,[[29,[19]]]],0,[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[93,18],[76,74],[[],81],[92,19],[105,19],[114,2],[114,2],[114,2],[114,2],[114,2],[114,2],[114,2],[114,2],[114,2],[114,19],[114,19],[114,19],[[19,19],63],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],124],[[124,124],124],[[124,124],5],[[124,124],124],[[124,124],5],[124,20],[[124,124],124],[[124,124],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[124,124],[125,125],[126,126],[127,127],[128,128],[[124,124],26],[124,124],[[125,20,126,127],5],[[128,125,126,127],5],[[124,124],2],[[],128],[[124,124],124],[[128,125,2],5],[125,5],[125,5],[125,20],[[],20],[20,5],[[],20],[20,5],[[],20],[20,5],[[],20],[20,5],[[],124],[124,5],[[],128],[128,5],[[],124],[[128,125,2],5],[128,5],[128,5],[128,5],[125,5],[125,5],[128,5],[[124,124],2],[[125,125],2],[[126,126],2],[[127,127],2],[[128,128],2],[[124,-1],5,[[28,[],[[27,[124]]]]]],[[124,3],4],[[124,3],4],[[124,3],4],[[124,3],4],[[124,3],4],[[125,3],4],[[126,3],4],[[127,3],4],[[128,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,[[29,[124]]]],[20,124],[20,124],[-1,124,[[28,[],[[27,[124]]]]]],[[124,-1],5,30],[[124,124],5],[[124,124],124],[[124,124],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[124,2],[124,2],[124,124],[[124,124],[[29,[26]]]],[[124,124],5],[[124,124,2],5],[[124,124],124],[[124,124],5],[[124,124],124],[[124,124],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[124,124],124],[[125,20],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],[[129,[-1]]],[]],[[[129,[-1]],3],4,[]],[-1,-1,[]],[-1,-2,[],[]],[[],57],[[[129,[-1]]],5,[]],[[[129,[-1]]],5,[]],0,[57,5],[-1,[[129,[-1]]],[]],[[[24,[-1]]],[[129,[-1]]],[]],[[[129,[-1]]],5,[]],[[[129,[-1]]],5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[],5],[[],5],[[],5],[74,18],[74,19],[74,74],[[74,18],5],[[74,19],5],[[74,74],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],130],[[130,130],130],[[130,130],5],[[130,130],130],[[130,130],5],[130,19],[[130,130],130],[[130,130],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,130],[[130,130],26],[130,130],[[130,130],2],0,[[130,130],130],[[],5],[[],130],[[],5],[[130,130],2],[[130,-1],5,[[28,[],[[27,[130]]]]]],[[131,3],4],[[131,3],4],[[130,3],4],[[130,3],4],[[130,3],4],[[130,3],4],[[130,3],4],[[130,3],4],[-1,-1,[]],[-1,-1,[]],[19,[[29,[130]]]],[19,130],[19,130],[-1,130,[[28,[],[[27,[130]]]]]],[[130,-1],5,30],[[130,130],5],[[130,130],130],[[130,130],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[130,2],[130,2],0,[130,130],[[130,130],[[29,[26]]]],[[130,130],5],[[130,130,2],5],0,[[130,130],130],[[130,130],5],[[130,130],130],[[130,130],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[[130,130],130],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,6],[[19,6],5],0,0,[132,2],[133,2],[74,2],[19,2],[6,2],[[[24,[-1]]],2,132],[74,2],[19,2],[6,2],[[[24,[-1]]],2,133],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],57],[134,6],[135,135],[[57,57],57],[[57,57],5],[[57,57],57],[[57,57],5],[57,74],[[57,57],57],[[57,57],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[57,-1],136,[]],[[57,19],135],[[57,6],135],[[57,74],135],[57,57],[137,137],[138,138],[139,139],[140,140],[134,134],[[57,57],26],[[-1,-1,140],141,[]],[[19,19,140],135],[57,57],[[57,57],2],[[],57],[[-1,-1,139],141,[]],[[19,19,139],135],[135,135],[[],134],[[57,57],57],[[135,1],135],[[],57],[[],57],[[57,57],2],[[137,137],2],[[138,138],2],[[139,139],2],[[140,140],2],[[],57],[[57,-1],5,[[28,[],[[27,[57]]]]]],[142,-1,[]],[135,134],[135,56],[[57,3],4],[[57,3],4],[[57,3],4],[[57,3],4],[[57,3],4],[[57,3],4],[[137,3],4],[[138,3],4],[[139,3],4],[[140,3],4],[[135,3],4],[[134,3],4],[[134,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[74,[[29,[57]]]],[74,57],[74,57],[-1,57,[[28,[],[[27,[57]]]]]],[74,57],[[],57],[[],57],[[57,-1],5,30],[57,74],[[57,57],5],[[57,-1],136,[]],[[57,6],135],[[57,19],135],[[57,74],135],[[57,57],57],[[57,57],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,2],[57,2],[[135,18],135],[135,135],[[-1,-1],143,[]],[[6,6],135],[[19,19],135],[135,135],0,[57,5],[57,5],[57,5],[57,5],[57,5],0,[[74,1],57],[57,57],[[57,57],[[29,[26]]]],[135,135],[[57,57],5],[[57,57,2],5],[134,5],[[134,19,19],5],[134,5],[[134,1],5],[134,5],[134,5],[134,5],[134,5],[[134,57,19],5],[[134,18],5],[[],57],[[57,57],57],[[57,57],5],[[57,57],57],[57,144],[57,135],[[57,57],5],[[57,-1],136,[]],[[57,19],135],[[57,6],135],[[57,74],135],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[6,6,2],136],[[6,6,2],135],[[6,6,2],135],[[6,6,2],135],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[57,57],57],0,[57,5],0,[[],57],[[],6],[[],[[5,[6,19]]]],[20,5],[[],5],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[145,3],4],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],146],[[],147],[[],148],[[],149],[[],150],[[146,146],146],[[147,147],147],[[148,148],148],[[149,149],149],[[150,150],150],[[146,146],5],[[147,147],5],[[148,148],5],[[149,149],5],[[150,150],5],[[146,146],146],[[147,147],147],[[148,148],148],[[149,149],149],[[150,150],150],[[146,146],5],[[147,147],5],[[148,148],5],[[149,149],5],[[150,150],5],[146,19],[147,19],[148,19],[149,19],[150,19],[[146,146],146],[[147,147],147],[[148,148],148],[[149,149],149],[[150,150],150],[[146,146],5],[[147,147],5],[[148,148],5],[[149,149],5],[[150,150],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[146,146],[147,147],[148,148],[149,149],[150,150],[[146,146],26],[[147,147],26],[[148,148],26],[[149,149],26],[[150,150],26],[146,146],[147,147],[148,148],[149,149],[150,150],[[146,146],2],[[147,147],2],[[148,148],2],[[149,149],2],[[150,150],2],[[146,146],146],[[147,147],147],[[148,148],148],[[149,149],149],[[150,150],150],[[],146],[[],147],[[],148],[[],149],[[],150],[[146,146],2],[[147,147],2],[[148,148],2],[[149,149],2],[[150,150],2],[[146,-1],5,[[28,[],[[27,[146]]]]]],[[147,-1],5,[[28,[],[[27,[147]]]]]],[[148,-1],5,[[28,[],[[27,[148]]]]]],[[149,-1],5,[[28,[],[[27,[149]]]]]],[[150,-1],5,[[28,[],[[27,[150]]]]]],[[146,3],4],[[146,3],4],[[146,3],4],[[146,3],4],[[146,3],4],[[147,3],4],[[147,3],4],[[147,3],4],[[147,3],4],[[147,3],4],[[148,3],4],[[148,3],4],[[148,3],4],[[148,3],4],[[148,3],4],[[149,3],4],[[149,3],4],[[149,3],4],[[149,3],4],[[149,3],4],[[150,3],4],[[150,3],4],[[150,3],4],[[150,3],4],[[150,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,[[29,[146]]]],[19,[[29,[147]]]],[19,[[29,[148]]]],[19,[[29,[149]]]],[19,[[29,[150]]]],[19,146],[19,147],[19,148],[19,149],[19,150],[19,146],[19,147],[19,148],[19,149],[19,150],[-1,146,[[28,[],[[27,[146]]]]]],[-1,147,[[28,[],[[27,[147]]]]]],[-1,148,[[28,[],[[27,[148]]]]]],[-1,149,[[28,[],[[27,[149]]]]]],[-1,150,[[28,[],[[27,[150]]]]]],[[146,-1],5,30],[[147,-1],5,30],[[148,-1],5,30],[[149,-1],5,30],[[150,-1],5,30],[[146,146],5],[[147,147],5],[[148,148],5],[[149,149],5],[[150,150],5],[[146,146],146],[[147,147],147],[[148,148],148],[[149,149],149],[[150,150],150],[[146,146],2],[[147,147],2],[[148,148],2],[[149,149],2],[[150,150],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[146,2],[147,2],[148,2],[149,2],[150,2],[146,2],[147,2],[148,2],[149,2],[150,2],[146,146],[147,147],[148,148],[149,149],[150,150],[[146,146],[[29,[26]]]],[[147,147],[[29,[26]]]],[[148,148],[[29,[26]]]],[[149,149],[[29,[26]]]],[[150,150],[[29,[26]]]],[[146,146],5],[[147,147],5],[[148,148],5],[[149,149],5],[[150,150],5],[[146,146,2],5],[[147,147,2],5],[[148,148,2],5],[[149,149,2],5],[[150,150,2],5],[[146,146],146],[[147,147],147],[[148,148],148],[[149,149],149],[[150,150],150],[[146,146],5],[[147,147],5],[[148,148],5],[[149,149],5],[[150,150],5],[[146,146],146],[[147,147],147],[[148,148],148],[[149,149],149],[[150,150],150],[[146,146],5],[[147,147],5],[[148,148],5],[[149,149],5],[[150,150],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[146,146],146],[[147,147],147],[[148,148],148],[[149,149],149],[[150,150],150],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[1864,1865],"p":[[6,"Ring",0],[1,"bool"],[5,"Formatter",4985],[8,"Result",4985],[1,"tuple"],[1,"u64"],[6,"Result",4986],[5,"TypeId",4987],[10,"ApicControl",40],[6,"ApicId",40],[6,"DeliveryMode",40],[6,"DestinationMode",40],[6,"DeliveryStatus",40],[6,"Level",40],[6,"TriggerMode",40],[6,"DestinationShorthand",40],[5,"Icr",40],[1,"u8"],[1,"u32"],[1,"usize"],[5,"IoApic",165],[5,"X2APIC",179],[5,"XAPIC",204],[1,"slice"],[5,"EFlags",276],[6,"Ordering",4988],[17,"Item"],[10,"IntoIterator",4989],[6,"Option",4990],[10,"Hasher",4991],[5,"PAddr",349],[5,"IOAddr",349],[5,"VAddr",349],[5,"PDEntry",349],[5,"PTEntry",349],[5,"PDFlags",349],[5,"PTFlags",349],[1,"i32"],[10,"Into",4992],[10,"Copy",4993],[5,"TaskStateSegment",708],[5,"PAddr",753],[5,"IOAddr",753],[5,"VAddr",753],[5,"PML4Entry",753],[5,"PML5Entry",753],[5,"PDPTEntry",753],[5,"PDEntry",753],[5,"PTEntry",753],[5,"PML4Flags",753],[5,"PML5Flags",753],[5,"PDPTFlags",753],[5,"PDFlags",753],[5,"PTFlags",753],[5,"RFlags",1394],[5,"Descriptor64",1470],[5,"SegmentSelector",4223],[5,"TaskStateSegment",1524],[8,"Result",4453],[5,"Cr0",1554],[5,"Cr4",1554],[5,"Xcr0",1554],[5,"CpuIdResult",1749],[5,"HypervisorInfo",1749],[5,"ProcessorCapacityAndFeatureInfo",1749],[5,"ProcessorBrandString",1749],[1,"str"],[5,"VendorInfo",1749],[5,"SoCVendorBrand",1749],[5,"CacheParameter",1749],[5,"FeatureInfo",1749],[5,"ExtendedProcessorFeatureIdentifiers",1749],[5,"ProcessorFrequencyInfo",1749],[1,"u16"],[5,"MemoryEncryptionInfo",1749],[5,"DatInfo",1749],[6,"DatType",1749],[6,"CacheType",1749],[5,"L3CatInfo",1749],[5,"L2CatInfo",1749],[5,"CpuId",1749],[5,"CacheInfoIter",1749],[6,"CacheInfoType",1749],[5,"CacheInfo",1749],[5,"CacheParametersIter",1749],[5,"ExtendedTopologyIter",1749],[5,"ExtendedStateIter",1749],[5,"SgxSectionIter",1749],[5,"DatIter",1749],[5,"ProcessorTraceInfo",1749],[5,"L3MonitoringInfo",1749],[5,"ProcessorTopologyInfo",1749],[5,"PerformanceMonitoringInfo",1749],[5,"ApmInfo",1749],[5,"L1CacheTlbInfo",1749],[6,"Associativity",1749],[5,"TscInfo",1749],[5,"L2And3CacheTlbInfo",1749],[5,"Tlb1gbPageInfo",1749],[5,"ThermalPowerInfo",1749],[5,"SvmFeatures",1749],[5,"PerformanceOptimizationInfo",1749],[5,"ProcessorSerial",1749],[5,"MonitorMwaitInfo",1749],[5,"ExtendedTopologyLevel",1749],[6,"TopologyType",1749],[6,"ExtendedRegisterType",1749],[6,"ExtendedRegisterStateLocation",1749],[5,"MemBwAllocationInfo",1749],[6,"Hypervisor",1749],[5,"Error",4985],[5,"ExtendedFeatures",1749],[5,"DirectCacheAccessInfo",1749],[5,"ExtendedStateInfo",1749],[5,"ExtendedState",1749],[5,"RdtMonitoringInfo",1749],[5,"RdtAllocationInfo",1749],[5,"SgxInfo",1749],[5,"SoCVendorInfo",1749],[6,"SgxSectionInfo",1749],[5,"EpcSection",1749],[5,"SoCVendorAttributesIter",1749],[1,"u128"],[5,"Dr6",2876],[6,"Breakpoint",2876],[6,"BreakCondition",2876],[6,"BreakSize",2876],[5,"Dr7",2876],[5,"DescriptorTablePointer",3021],[5,"PageFaultError",3050],[5,"InterruptDescription",3050],[10,"RdRand",4211],[10,"RdSeed",4211],[5,"Descriptor",4223],[5,"DescriptorBuilder",4223],[10,"GateDescriptorBuilder",4223],[6,"SystemDescriptorTypes64",4223],[6,"SystemDescriptorTypes32",4223],[6,"DataSegmentType",4223],[6,"CodeSegmentType",4223],[10,"SegmentDescriptorBuilder",4223],[10,"BuildDescriptor",4223],[10,"LdtDescriptorBuilder",4223],[10,"TaskGateDescriptorBuilder",4223],[6,"VmFail",4453],[5,"PinbasedControls",4472],[5,"PrimaryControls",4472],[5,"SecondaryControls",4472],[5,"EntryControls",4472],[5,"ExitControls",4472],[5,"Page",349],[5,"LargePage",349],[5,"Page",753],[5,"LargePage",753],[5,"HugePage",753]],"b":[[317,"impl-Octal-for-EFlags"],[318,"impl-UpperHex-for-EFlags"],[319,"impl-Debug-for-EFlags"],[320,"impl-LowerHex-for-EFlags"],[321,"impl-Binary-for-EFlags"],[384,"impl-Add%3Cu32%3E-for-PAddr"],[385,"impl-Add-for-PAddr"],[386,"impl-Add%3Cusize%3E-for-PAddr"],[387,"impl-Add%3Cu32%3E-for-IOAddr"],[388,"impl-Add%3Cusize%3E-for-IOAddr"],[389,"impl-Add-for-IOAddr"],[390,"impl-Add%3Cu32%3E-for-VAddr"],[391,"impl-Add%3Cusize%3E-for-VAddr"],[392,"impl-Add-for-VAddr"],[393,"impl-AddAssign%3Cu32%3E-for-PAddr"],[394,"impl-AddAssign-for-PAddr"],[395,"impl-AddAssign%3Cu32%3E-for-IOAddr"],[396,"impl-AddAssign-for-IOAddr"],[397,"impl-AddAssign%3Cu32%3E-for-VAddr"],[398,"impl-AddAssign%3Cusize%3E-for-VAddr"],[399,"impl-AddAssign-for-VAddr"],[429,"impl-BitAnd%3Cu32%3E-for-PAddr"],[430,"impl-BitAnd-for-PAddr"],[431,"impl-BitAnd%3Cu32%3E-for-IOAddr"],[432,"impl-BitAnd-for-IOAddr"],[433,"impl-BitAnd%3Cu32%3E-for-VAddr"],[434,"impl-BitAnd%3Cusize%3E-for-VAddr"],[435,"impl-BitAnd-for-VAddr"],[436,"impl-BitAnd%3Ci32%3E-for-VAddr"],[441,"impl-BitOr%3Cu32%3E-for-PAddr"],[442,"impl-BitOr-for-PAddr"],[443,"impl-BitOr-for-IOAddr"],[444,"impl-BitOr%3Cu32%3E-for-IOAddr"],[445,"impl-BitOr%3Cusize%3E-for-VAddr"],[446,"impl-BitOr%3Cu32%3E-for-VAddr"],[447,"impl-BitOr-for-VAddr"],[505,"impl-UpperHex-for-PAddr"],[506,"impl-LowerHex-for-PAddr"],[507,"impl-Binary-for-PAddr"],[508,"impl-Debug-for-PAddr"],[509,"impl-Pointer-for-PAddr"],[510,"impl-Display-for-PAddr"],[511,"impl-Octal-for-PAddr"],[512,"impl-UpperHex-for-IOAddr"],[513,"impl-Debug-for-IOAddr"],[514,"impl-Binary-for-IOAddr"],[515,"impl-LowerHex-for-IOAddr"],[516,"impl-Octal-for-IOAddr"],[517,"impl-Display-for-IOAddr"],[518,"impl-Pointer-for-IOAddr"],[519,"impl-Display-for-VAddr"],[520,"impl-LowerHex-for-VAddr"],[521,"impl-UpperHex-for-VAddr"],[522,"impl-Pointer-for-VAddr"],[523,"impl-Binary-for-VAddr"],[524,"impl-Octal-for-VAddr"],[525,"impl-Debug-for-VAddr"],[526,"impl-LowerHex-for-PDFlags"],[527,"impl-Binary-for-PDFlags"],[528,"impl-Debug-for-PDFlags"],[529,"impl-Octal-for-PDFlags"],[530,"impl-UpperHex-for-PDFlags"],[532,"impl-LowerHex-for-PTFlags"],[533,"impl-Debug-for-PTFlags"],[534,"impl-Octal-for-PTFlags"],[535,"impl-UpperHex-for-PTFlags"],[536,"impl-Binary-for-PTFlags"],[540,"impl-From%3Ci32%3E-for-PAddr"],[542,"impl-From%3Cu32%3E-for-PAddr"],[543,"impl-From%3Cusize%3E-for-PAddr"],[544,"impl-From%3Cu32%3E-for-IOAddr"],[546,"impl-From%3Cusize%3E-for-IOAddr"],[547,"impl-From%3Ci32%3E-for-IOAddr"],[548,"impl-From%3Ci32%3E-for-VAddr"],[550,"impl-From%3Cusize%3E-for-VAddr"],[551,"impl-From%3Cu32%3E-for-VAddr"],[579,"impl-Into%3Cusize%3E-for-PAddr"],[580,"impl-Into%3Cu32%3E-for-PAddr"],[582,"impl-Into%3Cusize%3E-for-IOAddr"],[584,"impl-Into%3Cu32%3E-for-IOAddr"],[585,"impl-Into%3Cu32%3E-for-VAddr"],[586,"impl-Into%3Cusize%3E-for-VAddr"],[641,"impl-Rem-for-PAddr"],[642,"impl-Rem%3Cu32%3E-for-PAddr"],[643,"impl-Rem%3Cusize%3E-for-PAddr"],[644,"impl-Rem%3Cusize%3E-for-IOAddr"],[645,"impl-Rem%3Cu32%3E-for-IOAddr"],[646,"impl-Rem-for-IOAddr"],[647,"impl-Rem%3Cu32%3E-for-VAddr"],[648,"impl-Rem%3Cusize%3E-for-VAddr"],[649,"impl-Rem-for-VAddr"],[656,"impl-Shr%3Ci32%3E-for-VAddr"],[657,"impl-Shr%3Cusize%3E-for-VAddr"],[658,"impl-Shr%3Cu32%3E-for-VAddr"],[659,"impl-Sub%3Cusize%3E-for-PAddr"],[660,"impl-Sub%3Cu32%3E-for-PAddr"],[661,"impl-Sub-for-PAddr"],[662,"impl-Sub%3Cu32%3E-for-IOAddr"],[663,"impl-Sub%3Cusize%3E-for-IOAddr"],[664,"impl-Sub-for-IOAddr"],[665,"impl-Sub%3Cusize%3E-for-VAddr"],[666,"impl-Sub%3Cu32%3E-for-VAddr"],[667,"impl-Sub-for-VAddr"],[844,"impl-Add%3Cusize%3E-for-PAddr"],[845,"impl-Add%3Cu64%3E-for-PAddr"],[846,"impl-Add-for-PAddr"],[847,"impl-Add-for-IOAddr"],[848,"impl-Add%3Cusize%3E-for-IOAddr"],[849,"impl-Add%3Cu64%3E-for-IOAddr"],[850,"impl-Add%3Cu64%3E-for-VAddr"],[851,"impl-Add-for-VAddr"],[852,"impl-Add%3Cusize%3E-for-VAddr"],[853,"impl-AddAssign%3Cu64%3E-for-PAddr"],[854,"impl-AddAssign-for-PAddr"],[855,"impl-AddAssign-for-IOAddr"],[856,"impl-AddAssign%3Cu64%3E-for-IOAddr"],[857,"impl-AddAssign-for-VAddr"],[858,"impl-AddAssign%3Cu64%3E-for-VAddr"],[859,"impl-AddAssign%3Cusize%3E-for-VAddr"],[899,"impl-BitAnd%3Cu64%3E-for-PAddr"],[900,"impl-BitAnd-for-PAddr"],[901,"impl-BitAnd-for-IOAddr"],[902,"impl-BitAnd%3Cu64%3E-for-IOAddr"],[903,"impl-BitAnd-for-VAddr"],[904,"impl-BitAnd%3Cu64%3E-for-VAddr"],[905,"impl-BitAnd%3Cusize%3E-for-VAddr"],[906,"impl-BitAnd%3Ci32%3E-for-VAddr"],[917,"impl-BitOr%3Cu64%3E-for-PAddr"],[918,"impl-BitOr-for-PAddr"],[919,"impl-BitOr-for-IOAddr"],[920,"impl-BitOr%3Cu64%3E-for-IOAddr"],[921,"impl-BitOr%3Cu64%3E-for-VAddr"],[922,"impl-BitOr%3Cusize%3E-for-VAddr"],[923,"impl-BitOr-for-VAddr"],[1040,"impl-UpperHex-for-PAddr"],[1041,"impl-Debug-for-PAddr"],[1042,"impl-Display-for-PAddr"],[1043,"impl-Pointer-for-PAddr"],[1044,"impl-Octal-for-PAddr"],[1045,"impl-Binary-for-PAddr"],[1046,"impl-LowerHex-for-PAddr"],[1047,"impl-UpperHex-for-IOAddr"],[1048,"impl-Pointer-for-IOAddr"],[1049,"impl-Debug-for-IOAddr"],[1050,"impl-Display-for-IOAddr"],[1051,"impl-LowerHex-for-IOAddr"],[1052,"impl-Binary-for-IOAddr"],[1053,"impl-Octal-for-IOAddr"],[1054,"impl-UpperHex-for-VAddr"],[1055,"impl-Display-for-VAddr"],[1056,"impl-Debug-for-VAddr"],[1057,"impl-Binary-for-VAddr"],[1058,"impl-LowerHex-for-VAddr"],[1059,"impl-Pointer-for-VAddr"],[1060,"impl-Octal-for-VAddr"],[1061,"impl-UpperHex-for-PML4Flags"],[1062,"impl-Binary-for-PML4Flags"],[1063,"impl-Octal-for-PML4Flags"],[1064,"impl-Debug-for-PML4Flags"],[1065,"impl-LowerHex-for-PML4Flags"],[1066,"impl-LowerHex-for-PML5Flags"],[1067,"impl-Binary-for-PML5Flags"],[1068,"impl-UpperHex-for-PML5Flags"],[1069,"impl-Octal-for-PML5Flags"],[1070,"impl-Debug-for-PML5Flags"],[1073,"impl-Binary-for-PDPTFlags"],[1074,"impl-Octal-for-PDPTFlags"],[1075,"impl-UpperHex-for-PDPTFlags"],[1076,"impl-LowerHex-for-PDPTFlags"],[1077,"impl-Debug-for-PDPTFlags"],[1079,"impl-UpperHex-for-PDFlags"],[1080,"impl-Binary-for-PDFlags"],[1081,"impl-Debug-for-PDFlags"],[1082,"impl-Octal-for-PDFlags"],[1083,"impl-LowerHex-for-PDFlags"],[1085,"impl-LowerHex-for-PTFlags"],[1086,"impl-Debug-for-PTFlags"],[1087,"impl-Binary-for-PTFlags"],[1088,"impl-Octal-for-PTFlags"],[1089,"impl-UpperHex-for-PTFlags"],[1095,"impl-From%3Cusize%3E-for-PAddr"],[1096,"impl-From%3Ci32%3E-for-PAddr"],[1097,"impl-From%3Cu64%3E-for-PAddr"],[1098,"impl-From%3Cusize%3E-for-IOAddr"],[1100,"impl-From%3Cu64%3E-for-IOAddr"],[1101,"impl-From%3Ci32%3E-for-IOAddr"],[1102,"impl-From%3Cu64%3E-for-VAddr"],[1103,"impl-From%3Ci32%3E-for-VAddr"],[1105,"impl-From%3Cusize%3E-for-VAddr"],[1167,"impl-Into%3Cu64%3E-for-PAddr"],[1168,"impl-Into%3Cusize%3E-for-PAddr"],[1171,"impl-Into%3Cusize%3E-for-IOAddr"],[1172,"impl-Into%3Cu64%3E-for-IOAddr"],[1173,"impl-Into%3Cu64%3E-for-VAddr"],[1174,"impl-Into%3Cusize%3E-for-VAddr"],[1280,"impl-Rem%3Cu64%3E-for-PAddr"],[1281,"impl-Rem%3Cusize%3E-for-PAddr"],[1282,"impl-Rem-for-PAddr"],[1283,"impl-Rem-for-IOAddr"],[1284,"impl-Rem%3Cu64%3E-for-IOAddr"],[1285,"impl-Rem%3Cusize%3E-for-IOAddr"],[1286,"impl-Rem-for-VAddr"],[1287,"impl-Rem%3Cu64%3E-for-VAddr"],[1288,"impl-Rem%3Cusize%3E-for-VAddr"],[1301,"impl-Shr%3Ci32%3E-for-VAddr"],[1302,"impl-Shr%3Cusize%3E-for-VAddr"],[1303,"impl-Shr%3Cu64%3E-for-VAddr"],[1306,"impl-Sub%3Cusize%3E-for-PAddr"],[1307,"impl-Sub-for-PAddr"],[1308,"impl-Sub%3Cu64%3E-for-PAddr"],[1309,"impl-Sub%3Cu64%3E-for-IOAddr"],[1310,"impl-Sub-for-IOAddr"],[1311,"impl-Sub%3Cusize%3E-for-IOAddr"],[1312,"impl-Sub%3Cu64%3E-for-VAddr"],[1313,"impl-Sub%3Cusize%3E-for-VAddr"],[1314,"impl-Sub-for-VAddr"],[1435,"impl-LowerHex-for-RFlags"],[1436,"impl-Binary-for-RFlags"],[1437,"impl-Octal-for-RFlags"],[1438,"impl-UpperHex-for-RFlags"],[1439,"impl-Debug-for-RFlags"],[1660,"impl-UpperHex-for-Cr0"],[1661,"impl-Octal-for-Cr0"],[1662,"impl-Binary-for-Cr0"],[1663,"impl-LowerHex-for-Cr0"],[1664,"impl-Debug-for-Cr0"],[1665,"impl-Binary-for-Cr4"],[1666,"impl-LowerHex-for-Cr4"],[1667,"impl-UpperHex-for-Cr4"],[1668,"impl-Debug-for-Cr4"],[1669,"impl-Octal-for-Cr4"],[1670,"impl-Binary-for-Xcr0"],[1671,"impl-LowerHex-for-Xcr0"],[1672,"impl-Octal-for-Xcr0"],[1673,"impl-UpperHex-for-Xcr0"],[1674,"impl-Debug-for-Xcr0"],[2091,"impl-Debug-for-Associativity"],[2092,"impl-Display-for-Associativity"],[2102,"impl-Debug-for-VendorInfo"],[2103,"impl-Display-for-VendorInfo"],[2106,"impl-Display-for-CacheInfo"],[2107,"impl-Debug-for-CacheInfo"],[2111,"impl-Debug-for-CacheType"],[2112,"impl-Display-for-CacheType"],[2116,"impl-Display-for-TopologyType"],[2117,"impl-Debug-for-TopologyType"],[2119,"impl-Display-for-ExtendedRegisterType"],[2120,"impl-Debug-for-ExtendedRegisterType"],[2121,"impl-Debug-for-ExtendedRegisterStateLocation"],[2122,"impl-Display-for-ExtendedRegisterStateLocation"],[2129,"impl-Display-for-DatType"],[2130,"impl-Debug-for-DatType"],[2132,"impl-Display-for-SoCVendorBrand"],[2133,"impl-Debug-for-SoCVendorBrand"],[2967,"impl-Debug-for-Dr6"],[2968,"impl-UpperHex-for-Dr6"],[2969,"impl-Octal-for-Dr6"],[2970,"impl-Binary-for-Dr6"],[2971,"impl-LowerHex-for-Dr6"],[3102,"impl-Display-for-InterruptDescription"],[3103,"impl-Debug-for-InterruptDescription"],[3104,"impl-LowerHex-for-PageFaultError"],[3105,"impl-Debug-for-PageFaultError"],[3106,"impl-Display-for-PageFaultError"],[3107,"impl-Binary-for-PageFaultError"],[3108,"impl-UpperHex-for-PageFaultError"],[3109,"impl-Octal-for-PageFaultError"],[4301,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4302,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4303,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4332,"impl-BuildDescriptor%3CDescriptor%3E-for-DescriptorBuilder"],[4333,"impl-BuildDescriptor%3CDescriptor64%3E-for-DescriptorBuilder"],[4334,"impl-Octal-for-SegmentSelector"],[4335,"impl-Debug-for-SegmentSelector"],[4336,"impl-UpperHex-for-SegmentSelector"],[4337,"impl-Display-for-SegmentSelector"],[4338,"impl-LowerHex-for-SegmentSelector"],[4339,"impl-Binary-for-SegmentSelector"],[4345,"impl-Debug-for-Descriptor"],[4346,"impl-Display-for-Descriptor"],[4365,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4366,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4367,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4382,"impl-LdtDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4383,"impl-LdtDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4416,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4417,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4418,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4434,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4435,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4436,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4723,"impl-Binary-for-PinbasedControls"],[4724,"impl-LowerHex-for-PinbasedControls"],[4725,"impl-Debug-for-PinbasedControls"],[4726,"impl-Octal-for-PinbasedControls"],[4727,"impl-UpperHex-for-PinbasedControls"],[4728,"impl-Binary-for-PrimaryControls"],[4729,"impl-Octal-for-PrimaryControls"],[4730,"impl-UpperHex-for-PrimaryControls"],[4731,"impl-LowerHex-for-PrimaryControls"],[4732,"impl-Debug-for-PrimaryControls"],[4733,"impl-Binary-for-SecondaryControls"],[4734,"impl-Octal-for-SecondaryControls"],[4735,"impl-UpperHex-for-SecondaryControls"],[4736,"impl-LowerHex-for-SecondaryControls"],[4737,"impl-Debug-for-SecondaryControls"],[4738,"impl-LowerHex-for-EntryControls"],[4739,"impl-UpperHex-for-EntryControls"],[4740,"impl-Binary-for-EntryControls"],[4741,"impl-Octal-for-EntryControls"],[4742,"impl-Debug-for-EntryControls"],[4743,"impl-UpperHex-for-ExitControls"],[4744,"impl-Binary-for-ExitControls"],[4745,"impl-Debug-for-ExitControls"],[4746,"impl-LowerHex-for-ExitControls"],[4747,"impl-Octal-for-ExitControls"]]}],\
["x86_64",{"doc":"This crate provides x86_64 specific functions and data …","t":"EGPPPPECEENNNNNNNNCNCQQCNNNFFFFNNNNNNNNHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHCHCCHCCCHHHHHHIFEKIEKIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNEEEEEEEEHHHHHHHHHHHHEHHHHHPPPFGFFFPNONNNNNNNNNNNNNNNNNHNHHNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNCCCCEEECCEECTTTFFFFFFFTTTEETTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTGGPPKGFPFPFPFPFFFFFTTTTTTPPTTTTTPPPPTTTTTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNFFFTFFTTTTTTFTTTFTTTTTTTTTFTFTFTTTFTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTFTTTTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNHTTTTTTTTTTTTFTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNHHTFFFFFTFKKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNTTTTTTTTTFFTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFONNNNNCCNOCCNNCNTTTTTTTGFTTFTTTTTTTEPTTTTPTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPTPPGPIIPPFFGPIPIIPTPFFFPPPTPPPTTPFITTTPPFPPTPPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNONNOOONNONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNONNNNNNNNNNNNOONNNNNNNNONNNNONOONNNOONNNNNNNNNNONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKEEEEEEEEEEEEEEEMMCCCCFFFNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNKGPPPPGGPGFKKFFPPPFPPPPKPPPPFPPPKGGGNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNNNMNNNNNNNNNMNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMNNNNNNNNNOOOFKFFFKTTTGGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTTTTTTTTTPGPTTPTTPTFFFFFGPPTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMMFNNNNNONONONNN","n":["PhysAddr","PrivilegeLevel","Ring0","Ring1","Ring2","Ring3","VirtAddr","addr","align_down","align_up","borrow","borrow_mut","clone","eq","fmt","from","from_u16","hash","instructions","into","registers","set_general_handler","software_interrupt","structures","try_from","try_into","type_id","PhysAddr","PhysAddrNotValid","VirtAddr","VirtAddrNotValid","add","add","add","add","add_assign","add_assign","add_assign","add_assign","align_down","align_down","align_down","align_up","align_up","align_up","as_mut_ptr","as_ptr","as_u64","as_u64","backward_checked","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","from","from","from","from","from_ptr","hash","hash","into","into","into","into","is_aligned","is_aligned","is_null","is_null","new","new","new_truncate","new_truncate","new_unsafe","new_unsafe","p1_index","p2_index","p3_index","p4_index","page_offset","page_table_index","partial_cmp","partial_cmp","steps_between","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_new","try_new","type_id","type_id","type_id","type_id","zero","zero","bochs_breakpoint","hlt","interrupts","nop","port","random","read_rip","segmentation","tables","tlb","are_enabled","disable","enable","enable_and_hlt","int3","without_interrupts","Port","PortGeneric","PortRead","PortReadAccess","PortReadOnly","PortWrite","PortWriteAccess","PortWriteOnly","ReadOnlyAccess","ReadWriteAccess","WriteOnlyAccess","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","new","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","RdRand","borrow","borrow_mut","clone","fmt","from","get_u16","get_u32","get_u64","into","new","try_from","try_into","type_id","CS","DS","ES","FS","GS","SS","Segment","Segment64","cs","load_ds","load_es","load_fs","load_gs","load_ss","rdfsbase","rdgsbase","set_cs","swap_gs","wrfsbase","wrgsbase","DescriptorTablePointer","lgdt","lidt","load_tss","sgdt","sidt","Address","All","AllExceptGlobal","AsidOutOfRangeError","InvPicdCommand","Invlpgb","InvlpgbFlushBuilder","Pcid","Single","asid","asid","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","cmp","eq","final_translation_only","flush","flush","flush_all","flush_pcid","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","include_global","include_nested_translations","into","into","into","into","into","invlpgb_count_max","nasid","nasid","new","new","pages","partial_cmp","pcid","tlb_flush_nested","tlbsync","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","control","debug","model_specific","mxcsr","rdfsbase","rdgsbase","read_rip","rflags","segmentation","wrfsbase","wrgsbase","xcontrol","ALIGNMENT_MASK","CACHE_DISABLE","CONTROL_FLOW_ENFORCEMENT","Cr0","Cr0Flags","Cr2","Cr3","Cr3Flags","Cr4","Cr4Flags","DEBUGGING_EXTENSIONS","EMULATE_COPROCESSOR","EXTENSION_TYPE","Efer","EferFlags","FSGSBASE","KEY_LOCKER","L5_PAGING","MACHINE_CHECK_EXCEPTION","MONITOR_COPROCESSOR","NOT_WRITE_THROUGH","NUMERIC_ERROR","OSFXSR","OSXMMEXCPT_ENABLE","OSXSAVE","PAGE_GLOBAL","PAGE_LEVEL_CACHE_DISABLE","PAGE_LEVEL_WRITETHROUGH","PAGE_SIZE_EXTENSION","PAGING","PCID","PERFORMANCE_MONITOR_COUNTER","PHYSICAL_ADDRESS_EXTENSION","PROTECTED_MODE_ENABLE","PROTECTED_MODE_VIRTUAL_INTERRUPTS","PROTECTION_KEY","PROTECTION_KEY_SUPERVISOR","PROTECTION_KEY_USER","SAFER_MODE_EXTENSIONS","SUPERVISOR_MODE_ACCESS_PREVENTION","SUPERVISOR_MODE_EXECUTION_PROTECTION","TASK_SWITCHED","TIMESTAMP_DISABLE","USER_MODE_INSTRUCTION_PREVENTION","VIRTUAL_8086_MODE_EXTENSIONS","VIRTUAL_MACHINE_EXTENSIONS","WRITE_PROTECT","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_name","from_name","from_name","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_empty","is_empty","is_empty","iter","iter","iter","iter_names","iter_names","iter_names","not","not","not","partial_cmp","partial_cmp","partial_cmp","read","read","read","read","read_pcid","read_raw","read_raw","read_raw","read_raw","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","update","update","write","write","write","write_pcid","write_raw","write_raw","ACCESS_DETECTED","BreakpointCondition","BreakpointSize","DataReadsWrites","DataWrites","DebugAddressRegister","DebugAddressRegisterNumber","Dr0","Dr0","Dr1","Dr1","Dr2","Dr2","Dr3","Dr3","Dr6","Dr6Flags","Dr7","Dr7Flags","Dr7Value","GENERAL_DETECT_ENABLE","GLOBAL_BREAKPOINT_0_ENABLE","GLOBAL_BREAKPOINT_1_ENABLE","GLOBAL_BREAKPOINT_2_ENABLE","GLOBAL_BREAKPOINT_3_ENABLE","GLOBAL_EXACT_BREAKPOINT_ENABLE","InstructionExecution","IoReadsWrites","LOCAL_BREAKPOINT_0_ENABLE","LOCAL_BREAKPOINT_1_ENABLE","LOCAL_BREAKPOINT_2_ENABLE","LOCAL_BREAKPOINT_3_ENABLE","LOCAL_EXACT_BREAKPOINT_ENABLE","Length1B","Length2B","Length4B","Length8B","NUM","RESTRICTED_TRANSACTIONAL_MEMORY","RTM","STEP","SWITCH","TRAP","TRAP0","TRAP1","TRAP2","TRAP3","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","cmp","cmp","complement","complement","condition","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","eq","eq","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_name","from_name","get","global_breakpoint_enable","hash","hash","insert","insert","insert_flags","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","local_breakpoint_enable","new","new","not","not","partial_cmp","partial_cmp","read","read","read","read","read","read","read","read_raw","read_raw","remove","remove","remove_flags","set","set","set_condition","set_flags","set_size","size","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","toggle_flags","trap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","write","write","write","write","write","write","write_raw","CetFlags","Efer","EferFlags","FAST_FXSAVE_FXRSTOR","FsBase","GsBase","IBT_ENABLE","IBT_LEGACY_ENABLE","IBT_LEGACY_SUPPRESS_ENABLE","IBT_NO_TRACK_ENABLE","IBT_SUPPRESS_ENABLE","IBT_TRACKED","KernelGsBase","LONG_MODE_ACTIVE","LONG_MODE_ENABLE","LONG_MODE_SEGMENT_LIMIT_ENABLE","LStar","MSR","MSR","MSR","MSR","MSR","MSR","MSR","MSR","MSR","Msr","NO_EXECUTE_ENABLE","SCet","SECURE_VIRTUAL_MACHINE_ENABLE","SFMask","SS_ENABLE","SS_WRITE_ENABLE","SYSTEM_CALL_EXTENSIONS","Star","TRANSLATION_CACHE_EXTENSION","UCet","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_name","from_name","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","new","not","not","partial_cmp","partial_cmp","read","read","read","read","read","read","read","read","read","read","read_raw","read_raw","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","update","write","write","write","write","write","write","write","write","write","write","write_raw","write_raw","DENORMAL","DENORMALS_ARE_ZEROS","DENORMAL_MASK","DIVIDE_BY_ZERO","DIVIDE_BY_ZERO_MASK","FLUSH_TO_ZERO","INVALID_OPERATION","INVALID_OPERATION_MASK","MxCsr","OVERFLOW","OVERFLOW_MASK","PRECISION","PRECISION_MASK","ROUNDING_CONTROL_NEGATIVE","ROUNDING_CONTROL_POSITIVE","ROUNDING_CONTROL_ZERO","UNDERFLOW","UNDERFLOW_MASK","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","cmp","complement","contains","default","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","hash","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","partial_cmp","read","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","write","ALIGNMENT_CHECK","AUXILIARY_CARRY_FLAG","CARRY_FLAG","DIRECTION_FLAG","ID","INTERRUPT_FLAG","IOPL_HIGH","IOPL_LOW","NESTED_TASK","OVERFLOW_FLAG","PARITY_FLAG","RESUME_FLAG","RFlags","SIGN_FLAG","TRAP_FLAG","VIRTUAL_8086_MODE","VIRTUAL_INTERRUPT","VIRTUAL_INTERRUPT_PENDING","ZERO_FLAG","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","hash","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","partial_cmp","read","read_raw","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","write","write_raw","BASE","CS","DS","ES","FS","GS","NULL","SS","Segment","Segment64","SegmentSelector","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","cmp","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_reg","get_reg","get_reg","get_reg","get_reg","get_reg","get_reg","hash","index","into","into","into","into","into","into","into","new","partial_cmp","read_base","read_base","read_base","rpl","set_reg","set_reg","set_reg","set_reg","set_reg","set_reg","set_reg","set_rpl","swap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_base","write_base","write_base","AVX","BNDCSR","BNDREG","HI16_ZMM","LWP","MPK","OPMASK","SSE","X87","XCr0","XCr0Flags","YMM","ZMM_HI256","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","hash","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","not","partial_cmp","read","read_raw","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","write","write_raw","DescriptorTablePointer","base","borrow","borrow_mut","clone","fmt","from","gdt","idt","into","limit","paging","port","try_from","try_into","tss","type_id","ACCESSED","AVAILABLE","BASE_0_23","BASE_24_31","CONFORMING","DEFAULT_SIZE","DPL_RING_3","Descriptor","DescriptorFlags","EXECUTABLE","GRANULARITY","GlobalDescriptorTable","KERNEL_CODE32","KERNEL_CODE64","KERNEL_DATA","LIMIT_0_15","LIMIT_16_19","LONG_MODE","PRESENT","SegmentSelector","SystemSegment","USER_CODE32","USER_CODE64","USER_DATA","USER_SEGMENT","UserSegment","WRITABLE","add_entry","all","as_raw_slice","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","complement","contains","difference","dpl","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","from_raw_slice","hash","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","iter","iter_names","kernel_code_segment","kernel_data_segment","load","load_unsafe","new","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_into","try_into","try_into","tss_segment","tss_segment_unchecked","type_id","type_id","type_id","union","user_code_segment","user_data_segment","AlignmentCheck","BoundRange","Breakpoint","CAUSED_BY_WRITE","ControlProtection","Debug","DescriptorTable","DeviceNotAvailable","DivergingHandlerFunc","DivergingHandlerFuncWithErrCode","Division","Double","Entry","EntryOptions","ExceptionVector","Gdt","GeneralHandlerFunc","GeneralProtection","HandlerFunc","HandlerFuncWithErrCode","HypervisorInjection","INSTRUCTION_FETCH","Idt","InterruptDescriptorTable","InterruptStackFrame","InterruptStackFrameValue","InvalidOpcode","InvalidTss","Ldt","MALFORMED_TABLE","MachineCheck","NonMaskableInterrupt","Overflow","PROTECTION_KEY","PROTECTION_VIOLATION","Page","PageFaultErrorCode","PageFaultHandlerFunc","RMP","SGX","SHADOW_STACK","Security","SegmentNotPresent","SelectorErrorCode","SimdFloatingPoint","Stack","USER_MODE","Virtualization","VmmCommunication","X87FloatingPoint","alignment_check","all","as_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_range_exceeded","breakpoint","clone","clone","clone","clone","clone","clone","clone","clone","cmp","code_segment","complement","contains","cp_protection_exception","cpu_flags","debug","deref","descriptor_table","device_not_available","difference","disable_interrupts","divide_error","double_fault","empty","eq","eq","eq","eq","eq","eq","extend","external","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","general_protection_fault","handler_addr","hash","hash","hash","hv_injection_exception","index","index","index_mut","insert","instruction_pointer","intersection","intersects","into","into","into","into","into","into","into","into","into","into_iter","invalid_opcode","invalid_tss","iretq","is_all","is_empty","is_null","iter","iter_names","load","load_unsafe","machine_check","missing","new","new","new_truncate","non_maskable_interrupt","not","overflow","page_fault","partial_cmp","remove","reset","security_exception","segment_not_present","set","set_handler_addr","set_handler_fn","set_handler_fn","set_handler_fn","set_handler_fn","set_handler_fn","set_present","set_privilege_level","set_stack_index","simd_floating_point","slice","slice_mut","stack_pointer","stack_segment","stack_segment_fault","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtualization","vmm_communication_exception","x87_floating_point","FrameAllocator","FrameDeallocator","MappedPageTable","Mapper","OffsetPageTable","Page","PageOffset","PageSize","PageTable","PageTableFlags","PageTableIndex","PhysFrame","RecursivePageTable","Size1GiB","Size2MiB","Size4KiB","Translate","allocate_frame","deallocate_frame","frame","mapper","page","page_table","PhysFrame","PhysFrameRange","PhysFrameRangeInclusive","add","add_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","containing_address","end","end","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_start_address","from_start_address_unchecked","hash","hash","hash","into","into","into","into_iter","into_iter","is_empty","is_empty","next","next","partial_cmp","range","range_inclusive","size","start","start","start_address","sub","sub","sub_assign","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CleanUp","FlagUpdateError","FrameAllocationFailed","InvalidFrameAddress","InvalidFrameAddress","InvalidFrameAddress","InvalidPageTable","MapToError","Mapped","MappedFrame","MappedPageTable","Mapper","MapperAllSizes","MapperFlush","MapperFlushAll","NotActive","NotMapped","NotRecursive","OffsetPageTable","PageAlreadyMapped","PageNotMapped","PageNotMapped","PageNotMapped","PageTableFrameMapping","ParentEntryHugePage","ParentEntryHugePage","ParentEntryHugePage","ParentEntryHugePage","RecursivePageTable","Size1GiB","Size2MiB","Size4KiB","Translate","TranslateError","TranslateResult","UnmapError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean_up","clean_up","clean_up","clean_up","clean_up_addr_range","clean_up_addr_range","clean_up_addr_range","clean_up_addr_range","default","flush","flush_all","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_to_pointer","from","from","from","from","from","from","from","from","from","from","from","from","identity_map","ignore","ignore","into","into","into","into","into","into","into","into","into","into","into","into","level_4_table","level_4_table","level_4_table","map_to","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","new","new","new","new","new","new_unchecked","page_table_frame_mapping","phys_offset","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","size","start_address","translate","translate","translate","translate","translate_addr","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","flags","frame","offset","AddressNotAligned","NotGiantPageSize","Page","PageRange","PageRangeInclusive","PageSize","SIZE","SIZE","SIZE_AS_DEBUG_STR","Size1GiB","Size2MiB","Size4KiB","add","add_assign","as_4kib_page_range","backward_checked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","containing_address","end","end","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","from","from","from","from","from","from","from","from_page_table_indices","from_page_table_indices_1gib","from_page_table_indices_2mib","from_start_address","from_start_address_unchecked","hash","hash","hash","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","next","next","p1_index","p2_index","p3_index","p4_index","page_table_index","partial_cmp","partial_cmp","partial_cmp","partial_cmp","range","range_inclusive","size","start","start","start_address","steps_between","sub","sub","sub_assign","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ACCESSED","BIT_10","BIT_11","BIT_52","BIT_53","BIT_54","BIT_55","BIT_56","BIT_57","BIT_58","BIT_59","BIT_60","BIT_61","BIT_62","BIT_9","DIRTY","Four","FrameError","FrameNotPresent","GLOBAL","HUGE_PAGE","HugeFrame","NO_CACHE","NO_EXECUTE","One","PRESENT","PageOffset","PageTable","PageTableEntry","PageTableFlags","PageTableIndex","PageTableLevel","Three","Two","USER_ACCESSIBLE","WRITABLE","WRITE_THROUGH","addr","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","complement","contains","default","difference","empty","entry_address_space_alignment","eq","eq","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","hash","hash","hash","hash","index","index","index_mut","index_mut","insert","intersection","intersects","into","into","into","into","into","into","into","into_iter","is_all","is_empty","is_empty","is_unused","iter","iter","iter_mut","iter_names","new","new","new","new","new_truncate","new_truncate","next_higher_level","next_lower_level","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","set","set_addr","set_flags","set_frame","set_unused","sub","sub_assign","symmetric_difference","table_address_space_alignment","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","zero","PortRead","PortWrite","read_from_port","write_to_port","TaskStateSegment","borrow","borrow_mut","clone","fmt","from","interrupt_stack_table","into","iomap_base","new","privilege_stack_table","try_from","try_into","type_id"],"q":[[0,"x86_64"],[27,"x86_64::addr"],[135,"x86_64::instructions"],[145,"x86_64::instructions::interrupts"],[151,"x86_64::instructions::port"],[199,"x86_64::instructions::random"],[213,"x86_64::instructions::segmentation"],[233,"x86_64::instructions::tables"],[239,"x86_64::instructions::tlb"],[316,"x86_64::registers"],[328,"x86_64::registers::control"],[586,"x86_64::registers::debug"],[867,"x86_64::registers::model_specific"],[1118,"x86_64::registers::mxcsr"],[1193,"x86_64::registers::rflags"],[1270,"x86_64::registers::segmentation"],[1367,"x86_64::registers::xcontrol"],[1446,"x86_64::structures"],[1463,"x86_64::structures::gdt"],[1575,"x86_64::structures::idt"],[1814,"x86_64::structures::paging"],[1837,"x86_64::structures::paging::frame"],[1897,"x86_64::structures::paging::mapper"],[2134,"x86_64::structures::paging::mapper::TranslateResult"],[2137,"x86_64::structures::paging::page"],[2263,"x86_64::structures::paging::page_table"],[2448,"x86_64::structures::port"],[2452,"x86_64::structures::tss"],[2466,"core::fmt"],[2467,"core::fmt"],[2468,"core::result"],[2469,"core::any"],[2470,"core::convert"],[2471,"core::option"],[2472,"core::cmp"],[2473,"core::ops::function"],[2474,"core::clone"],[2475,"core::fmt"],[2476,"bitflags::iter"],[2477,"bitflags::iter"],[2478,"core::ops::range"],[2479,"core::cmp"],[2480,"core::iter::traits::iterator"]],"d":["","Represents a protection ring level.","Privilege-level 0 (most privilege): This level is used by …","Privilege-level 1 (moderate privilege): This level is used …","Privilege-level 2 (moderate privilege): Like level 1, this …","Privilege-level 3 (least privilege): This level is used by …","","Physical and virtual addresses manipulation","","","","","","","","Returns the argument unchanged.","Creates a <code>PrivilegeLevel</code> from a numeric value. The value …","","Special x86_64 instructions.","Calls <code>U::from(self)</code>.","Access to various system and model specific registers.","Set a general handler in an <code>InterruptDescriptorTable</code>.","Generate a software interrupt by invoking the <code>int</code> …","Representations of various x86 specific structures and …","","","","A 64-bit physical memory address.","A passed <code>u64</code> was not a valid physical address.","A canonical 64-bit virtual memory address.","A passed <code>u64</code> was not a valid virtual address.","","","","","","","","","Align address downwards.","Aligns the virtual address downwards to the given …","Aligns the physical address downwards to the given …","Align address upwards.","Aligns the virtual address upwards to the given alignment.","Aligns the physical address upwards to the given alignment.","Converts the address to a mutable raw pointer.","Converts the address to a raw pointer.","Converts the address to an <code>u64</code>.","Converts the address to an <code>u64</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a virtual address from the given pointer","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the virtual address has the demanded …","Checks whether the physical address has the demanded …","Convenience method for checking if a virtual address is …","Convenience method for checking if a physical address is …","Creates a new canonical virtual address.","Creates a new physical address.","Creates a new canonical virtual address, throwing out bits …","Creates a new physical address, throwing bits 52..64 away.","Creates a new virtual address, without any checks.","Creates a new physical address, without any checks.","Returns the 9-bit level 1 page table index.","Returns the 9-bit level 2 page table index.","Returns the 9-bit level 3 page table index.","Returns the 9-bit level 4 page table index.","Returns the 12-bit page offset of this virtual address.","Returns the 9-bit level page table index.","","","","","","","","","","","","","","","","","","","","","","Tries to create a new canonical virtual address.","Tries to create a new physical address.","","","","","Creates a virtual address that points to <code>0</code>.","Creates a physical address that points to <code>0</code>.","Emits a ‘magic breakpoint’ instruction for the Bochs …","Halts the CPU until the next interrupt arrives.","Enabling and disabling interrupts","Executes the <code>nop</code> instructions, which performs no operation …","Access to I/O ports","Support for build-in RNGs","Gets the current instruction pointer. Note that this is …","Provides functions to read and write segment registers.","Functions to load GDT, IDT, and TSS structures.","Functions to flush the translation lookaside buffer (TLB).","Returns whether interrupts are enabled.","Disable interrupts.","Enable interrupts.","Atomically enable interrupts and put the CPU to sleep","Cause a breakpoint exception by invoking the <code>int3</code> …","Run a closure with disabled interrupts.","A read-write I/O port.","An I/O port.","","A marker trait for access types which allow reading port …","A read-only I/O port.","","A marker trait for access types which allow writing port …","A write-only I/O port.","An access marker type indicating that a port is only …","An access marker type indicating that a port is allowed to …","An access marker type indicating that a port is only …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an I/O port with the given port number.","Reads from the port.","","","","","","","","","","","","","Writes to the port.","Used to obtain random numbers using x86_64’s RDRAND …","","","","","Returns the argument unchanged.","Uniformly sampled u16. May fail in rare circumstances or …","Uniformly sampled u32. May fail in rare circumstances or …","Uniformly sampled u64. May fail in rare circumstances or …","Calls <code>U::from(self)</code>.","Creates Some(RdRand) if RDRAND is supported, None otherwise","","","","","","","","","","","","Alias for <code>CS::get_reg()</code>","Alias for <code>DS::set_reg()</code>","Alias for <code>ES::set_reg()</code>","Alias for <code>FS::set_reg()</code>","Alias for <code>GS::set_reg()</code>","Alias for <code>SS::set_reg()</code>","Alias for <code>FS::read_base()</code>","Alias for <code>GS::read_base()</code>","Alias for <code>CS::set_reg()</code>","Alias for <code>GS::swap()</code>","Alias for <code>FS::write_base()</code>.","Alias for <code>GS::write_base()</code>.","","Load a GDT.","Load an IDT.","Load the task state register using the <code>ltr</code> instruction.","Get the address of the current GDT.","Get the address of the current IDT.","The logical processor invalidates mappings—except global …","The logical processor invalidates all mappings—including …","The logical processor invalidates all mappings—except …","An error returned when trying to use an invalid ASID.","The Invalidate PCID Command to execute.","Used to broadcast flushes to all logical processors.","A builder struct to construct the parameters for the …","Structure of a PCID. A PCID has to be &lt;= 4096 for x86_64.","The logical processor invalidates all mappings—except …","Only flush TLB entries with the given ASID.","The requested ASID.","","","","","","","","","","","Create a <code>InvlpgbFlushBuilder</code>.","","","","","","Only flush the final translation and not the cached upper …","Invalidate the given address in the TLB using the <code>invlpg</code> …","Execute the flush.","Invalidate the TLB completely by reloading the CR3 …","Invalidate the given address in the TLB using the <code>invpcid</code> …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Also flush global pages.","Also flush nestred translations that could be used for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the maximum count of pages to be flushed supported …","Returns the number of available address space identifiers.","The number of valid ASIDS.","Create a new PCID. Will result in a failure if the value of","Check that <code>invlpgb</code> and <code>tlbsync</code> are supported and query …","Flush a range of pages.","","Only flush TLB entries with the given PCID.","Returns whether the processor supports flushing …","Wait for all previous <code>invlpgb</code> instruction executed on the …","","","","","","","","","","","","","","","","Get the value of the current PCID.","Functions to read and write control registers.","Functions to read and write debug registers.","Functions to read and write model specific registers.","Functions to read and write MXCSR register.","","","","Processor state stored in the RFLAGS register.","Abstractions for segment registers.","","","Access to various extended system registers","Enables automatic usermode alignment checking if […","Disables some processor caches, specifics are …","Enables Control-flow Enforcement Technology (CET)","Various control flags modifying the basic operation of the …","Configuration flags of the <code>Cr0</code> register.","Contains the Page Fault Linear Address (PFLA).","Contains the physical address of the highest-level page …","Controls cache settings for the highest-level page table.","Contains various control flags that enable architectural …","Configuration flags of the <code>Cr4</code> register.","Enables I/O breakpoint capability and enforces treatment …","Force all x87 and MMX instructions to cause an <code>#NE</code> …","Indicates support of 387DX math coprocessor instructions.","","","Enables software running in 64-bit mode at any privilege …","Enables the Key Locker feature (Intel Only).","Enables 5-level paging on supported CPUs (Intel Only).","Enables the machine-check exception mechanism.","Enables monitoring of the coprocessor, typical for x87 …","Ignored, should always be unset.","Enables the native (internal) error reporting mechanism …","Enables the use of legacy SSE instructions; allows using …","Enables the SIMD floating-point exception (<code>#XF</code>) for …","Enables extended processor state management instructions, …","Enables the global page feature, allowing some page …","Disable caching for the table.","Use a writethrough cache policy for the table (otherwise a …","Enables the use of 4MB physical frames; ignored if …","Enables paging.","Enables process-context identifiers (PCIDs).","Allows software running at any privilege level to use the …","Enables physical address extensions and 2MB physical …","Enables protected mode.","Enables support for protected-mode virtual interrupts.","Alias for <code>PROTECTION_KEY_USER</code>","Enables protection keys for supervisor-mode pages (Intel …","Enables protection keys for user-mode pages.","Enables SMX instructions (Intel Only).","Enables restrictions for supervisor-mode software when …","Prevents the execution of instructions that reside in …","Automatically set to 1 on <em>hardware</em> task switch.","When set, only privilege-level 0 can execute the <code>RDTSC</code> or …","Prevents the execution of the <code>SGDT</code>, <code>SIDT</code>, <code>SLDT</code>, <code>SMSW</code>, and …","Enables hardware-supported performance enhancements for …","Enables VMX instructions (Intel Only).","Controls whether supervisor-level writes to read-only …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","Read the current set of CR0 flags.","Read the current page fault linear address from the CR2 …","Read the current P4 table address from the CR3 register.","Read the current set of CR4 flags.","Read the current P4 table address from the CR3 register …","Read the current raw CR0 value.","Read the current page fault linear address from the CR2 …","Read the current P4 table address from the CR3 register","Read the current raw CR4 value.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Updates CR0 flags.","Updates CR4 flags.","Write CR0 flags.","Write a new P4 table address into the CR3 register.","Write CR4 flags.","Write a new P4 table address into the CR3 register.","Write raw CR0 flags.","Write raw CR4 flags.","Next instruction accesses one of the debug registers.","The condition for a hardware breakpoint.","The size of a hardware breakpoint.","Data reads or writes but not instruction fetches","Data writes","Debug Address Register","A valid debug address register number.","Debug Address Register","The debug address register number of <code>Dr0</code> (0).","Debug Address Register","The debug address register number of <code>Dr1</code> (1).","Debug Address Register","The debug address register number of <code>Dr2</code> (2).","Debug Address Register","The debug address register number of <code>Dr3</code> (3).","Debug Status Register (DR6).","Debug condition flags of the <code>Dr6</code> register.","Debug Control Register (DR7).","Debug control flags of the <code>Dr7</code> register.","A valid value of the <code>Dr7</code> debug register.","Enables debug register protection.","Breakpoint 0 is enabled for all tasks.","Breakpoint 1 is enabled for all tasks.","Breakpoint 2 is enabled for all tasks.","Breakpoint 3 is enabled for all tasks.","Enable detection of exact instruction causing a data …","Instruction execution","I/O reads or writes","Breakpoint 0 is enabled for the current task.","Breakpoint 1 is enabled for the current task.","Breakpoint 2 is enabled for the current task.","Breakpoint 3 is enabled for the current task.","Enable detection of exact instruction causing a data …","1 byte length","2 byte length","4 byte length","8 byte length","The corresponding <code>DebugAddressRegisterNumber</code>.","Enables advanced debugging of RTM transactional regions.","When <em>clear</em>, indicates a debug or breakpoint exception …","CPU is in single-step execution mode.","Task switch.","Breakpoint condition was detected.","Breakpoint condition 0 was detected.","Breakpoint condition 1 was detected.","Breakpoint condition 2 was detected.","Breakpoint condition 3 was detected.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","Returns the raw value of the fields currently stored.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Returns the condition field of a debug address register.","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Returns the <code>Dr7Flags</code> in this value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Creates a new hardware breakpoint condition if <code>bits</code> is …","Creates a new hardware breakpoint size if <code>bits</code> is valid.","Convert from underlying bit representation, unless that …","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Returns the number as a primitive type.","Returns the global breakpoint enable flag of the provided …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Inserts the specified <code>Dr7Flags</code> in-place.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Returns the local breakpoint enable flag of the provided …","Creates a debug address register number if it is valid.","Creates a new hardware breakpoint size if <code>size</code> is valid.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","Reads the current breakpoint address.","","","","","Read the current set of DR6 flags.","Read the current set of DR7 flags.","Read the current raw DR6 value.","Read the current raw DR7 value.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Removes the specified <code>Dr7Flags</code> in-place.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the condition field of a debug address register.","Inserts or removes the specified <code>Dr7Flags</code> depending on the …","Sets the size field of a debug address register.","Returns the size field of a debug address register.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Toggles the specified <code>Dr7Flags</code> in-place.","Returns the trap flag of the provided debug address …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Writes the provided breakpoint address.","","","","","Write DR7 value.","Write raw DR7 value.","Flags stored in IA32_U_CET and IA32_S_CET (Table-2-2 in …","The Extended Feature Enable Register.","Flags of the Extended Feature Enable Register.","Enable the <code>fxsave</code> and <code>fxrstor</code> instructions to execute …","FS.Base Model Specific Register.","GS.Base Model Specific Register.","Enable indirect branch tracking (ENDBR_EN)","Enable legacy treatment for indirect branch tracking …","Disable suppression of CET on legacy compatibility …","Enable no-track opcode prefix for indirect branch tracking …","Enable suppression of indirect branch tracking (SUPPRESS)","Is IBT waiting for a branch to return? (read-only, TRACKER)","KernelGsBase Model Specific Register.","Indicates that long mode is active.","Activates long mode, requires activating paging.","Enable certain limit checks in 64-bit mode.","Syscall Register: LSTAR","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","A model specific register.","Enables the no-execute page-protection feature.","IA32_S_CET: supervisor mode CET configuration","Enables SVM extensions.","Syscall Register: SFMASK","Enable shadow stack (SH_STK_EN)","Enable WRSS{D,Q}W instructions (WR_SHTK_EN)","Enables the <code>syscall</code> and <code>sysret</code> instructions.","Syscall Register: STAR","Changes how the <code>invlpg</code> instruction operates on TLB entries …","IA32_U_CET: user mode CET configuration","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Create an instance from a register.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","Read 64 bits msr register.","Read the current EFER flags.","Read the current FsBase register.","Read the current GsBase register.","Read the current KernelGsBase register.","Read the Ring 0 and Ring 3 segment bases. Returns","Read the current LStar register. This holds the target RIP …","Read to the SFMask register. The SFMASK register is used …","Read IA32_U_CET. Returns a tuple of the flags and the …","Read IA32_S_CET. Returns a tuple of the flags and the …","Read the current raw EFER flags.","Read the Ring 0 and Ring 3 segment bases. The remaining …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Update EFER flags.","Write 64 bits to msr register.","Write the EFER flags, preserving reserved values.","Write a given virtual address to the FS.Base register.","Write a given virtual address to the GS.Base register.","Write a given virtual address to the KernelGsBase register.","Write the Ring 0 and Ring 3 segment bases. The remaining …","Write a given virtual address to the LStar register. This …","Write to the SFMask register. The SFMASK register is used …","Write IA32_U_CET.","Write IA32_S_CET.","Write the EFER flags.","Write the Ring 0 and Ring 3 segment bases. The remaining …","Denormal","Denormals are zeros","Denormal mask","Divide-by-zero","Divide-by-zero mask","Flush to zero","Invalid operation","Invalid operation mask","MXCSR register.","Overflow","Overflow mask","Precision","Precision mask","Toward negative infinity","Toward positive infinity","Toward zero (positive + negative)","Underflow","Underflow mask","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Return the default MXCSR value at reset, as documented in …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Read the value of MXCSR.","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Write MXCSR.","Enable automatic alignment checking if CR0.AM is set. Only …","Set by hardware if last arithmetic operation generated a …","Set by hardware if last arithmetic operation generated a …","Determines the order in which strings are processed.","Processor feature identification flag.","Enable interrupts.","The high bit of the I/O Privilege Level field.","The low bit of the I/O Privilege Level field.","Used by <code>iret</code> in hardware task switch mode to determine if …","Set by hardware to indicate that the sign bit of the …","Set by hardware if last result has an even number of 1 …","Allows to restart an instruction following an instruction …","The RFLAGS register.","Set by hardware if last arithmetic operation resulted in a …","Enable single-step mode for debugging.","Enable the virtual-8086 mode.","Virtual image of the INTERRUPT_FLAG bit.","Indicates that an external, maskable interrupt is pending.","Set by hardware if last arithmetic operation resulted in a …","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Returns the current value of the RFLAGS register.","Returns the raw current value of the RFLAGS register.","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Writes the RFLAGS register, preserves reserved bits.","Writes the RFLAGS register.","MSR containing the segment base. This MSR can be used to …","Code Segment","Data Segment","ES Segment","FS Segment","GS Segment","Can be used as a selector into a non-existent segment and …","Stack Segment","An x86 segment","An x86 segment which is actually used in 64-bit mode","Specifies which element to load into a segment from …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the current value of the segment register.","","","","","","","","Returns the GDT index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new SegmentSelector","","Reads the segment base address","","","Returns the requested privilege level.","Reload the segment register. Depending on the segment, …","Note this is special since we cannot directly move to <code>CS</code>; …","","","","","","Set the privilege level for this Segment selector.","Swap <code>KernelGsBase</code> MSR and <code>GsBase</code> MSR.","","","","","","","","","","","","","","","","","","","","","","Writes the segment base address","","","Enables AVX instructions and using the upper halves of the …","Enables MPX instructions and using the BNDCFGU and …","Enables MPX instructions and using the BND0-BND3 bound …","Enables AVX-512 instructions and using the upper ZMM …","Enables Lightweight Profiling extensions and managing LWP …","Enables using the PKRU register with <code>XSAVE</code>/<code>XRSTOR</code>.","Enables AVX-512 instructions and using the K0-K7 mask …","Enables using MXCSR and the XMM registers with <code>XSAVE</code>/<code>XRSTOR</code>…","Enables using the x87 FPU state with <code>XSAVE</code>/<code>XRSTOR</code>.","Extended feature enable mask register","Configuration flags of the XCr0 register.","Alias for <code>AVX</code>","Enables AVX-512 instructions and using the upper halves of …","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Read the current set of XCR0 flags.","Read the current raw XCR0 value.","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Write XCR0 flags.","Write raw XCR0 flags.","A struct describing a pointer to a descriptor table (GDT / …","Pointer to the memory region containing the DT.","","","","","Returns the argument unchanged.","Types for the Global Descriptor Table and segment …","Provides types for the Interrupt Descriptor Table and its …","Calls <code>U::from(self)</code>.","Size of the DT.","Abstractions for page tables and other paging related …","Traits for accessing I/O ports.","","","Provides a type for the task state segment structure.","","Set by the processor if this segment has been accessed. …","Available for use by the Operating System","Bits <code>0..=23</code> of the base field (ignored in 64-bit mode, …","Bits <code>24..=31</code> of the base field (ignored in 64-bit mode, …","For code segments, sets the segment as “conforming”, …","Use 32-bit (as opposed to 16-bit) operands. If <code>LONG_MODE</code> …","These two bits encode the Descriptor Privilege Level (DPL) …","A 64-bit mode segment descriptor.","Flags for a GDT descriptor. Not all flags are valid for …","This flag must be set for code segments and unset for data …","Limit field is scaled by 4096 bytes. In 64-bit mode, …","A 64-bit mode global descriptor table (GDT).","A flat 32-bit kernel code segment","A 64-bit kernel code segment","A kernel data segment (64-bit or flat 32-bit)","Bits <code>0..=15</code> of the limit field (ignored in 64-bit mode)","Bits <code>16..=19</code> of the limit field (ignored in 64-bit mode)","Must be set for 64-bit code segments, unset otherwise.","Must be set for any segment, causes a segment not present …","","A system segment descriptor such as a LDT or TSS …","A flat 32-bit user code segment","A 64-bit user code segment","A user data segment (64-bit or flat 32-bit)","This flag must be set for user segments (in contrast to …","Descriptor for a code or data segment.","For 32-bit data segments, sets the segment as writable. …","Adds the given segment descriptor to the GDT, returning …","Get a flags value with all known bits set.","Get a reference to the internal table.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Returns the Descriptor Privilege Level (DPL). When using …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Forms a GDT from a slice of <code>u64</code>.","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Creates a segment descriptor for a 64-bit kernel code …","Creates a segment descriptor for a kernel data segment …","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …","Creates an empty GDT.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","Creates a TSS system descriptor for the given TSS.","Similar to <code>Descriptor::tss_segment</code>, but unsafe since it …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Creates a segment descriptor for a 64-bit ring 3 code …","Creates a segment descriptor for a ring 3 data segment …","Alignment Check","Bound Range Exceeded","Breakpoint","If this flag is set, the memory access that caused the …","Control Protection Exception","Debug","The possible descriptor table values.","Device Not Available","A handler function that must not return, e.g. for a …","A handler function with an error code that must not …","Error during Division","Double Fault","An Interrupt Descriptor Table entry.","Represents the options field of an IDT entry.","This structure defines the CPU-internal exception vector …","Global Descriptor Table.","A general handler function for an interrupt or an …","General Protection Fault","A handler function for an interrupt or an exception …","A handler function for an exception that pushes an error …","Hypervisor Injection (AMD-only)","If this flag is set, it indicates that the access that …","Interrupt Descriptor Table.","An Interrupt Descriptor Table with 256 entries.","Wrapper type for the interrupt stack frame pushed by the …","Represents the interrupt stack frame pushed by the CPU on …","Invalid Opcode","Invalid TSS","Logical Descriptor Table.","If this flag is set, the page fault is a result of the …","Machine Check","Non-Maskable Interrupt","Overflow","If this flag is set, it indicates that the page fault was …","If this flag is set, the page fault was caused by a …","Page Fault","Describes an page fault error code.","A page fault handler function that pushes a page fault …","If this flag is set, it indicates that the page fault is a …","If this flag is set, it indicates that the page fault was …","If this flag is set, it indicates that the page fault was …","Security Exception","Segment Not Present","Describes an error code referencing a segment selector.","SIMD Floating-Point Exception","Stack Fault","If this flag is set, an access in user mode (CPL=3) caused …","Virtualization Exception (Intel-only)","VMM Communication (AMD-only)","x87 Floating-Point Exception","An alignment check exception (<code>#AC</code>) occurs when an …","Get a flags value with all known bits set.","Gives mutable access to the contents of the interrupt …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","A bound-range exception (<code>#BR</code>) exception can occur as a …","A breakpoint (<code>#BP</code>) exception occurs when an <code>INT3</code> …","","","","","","","","","","The code segment selector, padded with zeros.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","A #CP exception is generated when shadow stacks are …","The flags register before the interrupt handler was …","When the debug-exception mechanism is enabled, a <code>#DB</code> …","","The descriptor table this error code refers to.","A device not available exception (<code>#NM</code>) occurs under any of …","The intersection of a source flags value with the …","Let the CPU disable hardware interrupts when the handler …","A divide error (<code>#DE</code>) occurs when the denominator of a DIV …","A double fault (<code>#DF</code>) exception can occur when a second …","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","If true, indicates that the exception occurred during …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","A general protection fault (<code>#GP</code>) can occur in various …","Returns the virtual address of this IDT entry’s handler …","","","","The Hypervisor Injection Exception (<code>#HV</code>) is injected by a …","Returns the IDT entry with the specified index.","The index of the selector which caused the error.","Returns a mutable reference to the IDT entry with the …","The bitwise or (<code>|</code>) of the bits in two flags values.","This value points to the instruction that should be …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","An invalid opcode exception (<code>#UD</code>) occurs when an attempt …","An invalid TSS exception (<code>#TS</code>) occurs only as a result of …","Call the <code>iretq</code> (interrupt return) instruction.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","If true, the #SS or #GP has returned zero as opposed to a …","Yield a set of contained flags values.","Yield a set of contained named flags values.","Loads the IDT in the CPU using the <code>lidt</code> command.","Loads the IDT in the CPU using the <code>lidt</code> command.","The machine check exception (<code>#MC</code>) is model specific. …","Creates a non-present IDT entry (but sets the must-be-one …","Creates a new IDT filled with non-present entries.","Create a SelectorErrorCode. Returns None is any of the …","Create a new SelectorErrorCode dropping any reserved bits …","An non maskable interrupt exception (NMI) occurs as a …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","An overflow exception (<code>#OF</code>) occurs as a result of …","A page fault (<code>#PF</code>) can occur during a memory access in any …","","The intersection of a source flags value with the …","Resets all entries of this IDT in place.","The Security Exception (<code>#SX</code>) signals security-sensitive …","An segment-not-present exception (<code>#NP</code>) occurs when an …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Set the handler address for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set or reset the preset bit.","Set the required privilege level (DPL) for invoking the …","Assigns a Interrupt Stack Table (IST) stack to this …","The SIMD Floating-Point Exception (<code>#XF</code>) is used to handle …","Returns slice of IDT entries with the specified range.","Returns a mutable slice of IDT entries with the specified …","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","An stack segment exception (<code>#SS</code>) can occur in the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","vector nr. 20","The VMM Communication Exception (<code>#VC</code>) is always generated …","The x87 Floating-Point Exception-Pending exception (<code>#MF</code>) …","A trait for types that can allocate a frame of memory.","A trait for types that can deallocate a frame of memory.","","","","","","","","","","","","","","","","Allocate a frame of the appropriate size and return it if …","Deallocate the given unused frame.","Abstractions for default-sized and huge physical memory …","Abstractions for reading and modifying the mapping of …","Abstractions for default-sized and huge virtual memory …","Abstractions for page tables and page table entries.","A physical memory frame.","An range of physical memory frames, exclusive the upper …","An range of physical memory frames, inclusive the upper …","","","","","","","","","","","","","Returns the frame that contains the given physical address.","The end of the range, exclusive.","The start of the range, inclusive.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the frame that starts at the given virtual address.","Returns the frame that starts at the given virtual address.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether the range contains no frames.","Returns whether the range contains no frames.","","","","Returns a range of frames, exclusive <code>end</code>.","Returns a range of frames, inclusive <code>end</code>.","Returns the size the frame (4KB, 2MB or 1GB).","The start of the range, inclusive.","The start of the range, inclusive.","Returns the start address of the frame.","","","","","","","","","","","","","Provides methods for cleaning up unused entries.","An error indicating that an <code>update_flags</code> call failed.","An additional frame was needed for the mapping process, …","The page table entry for the given virtual address points …","The page table entry for the given page points to an …","The page table entry for the given page points to an …","The given page table was not suitable to create a …","This error is returned from <code>map_to</code> and similar methods.","The virtual address is mapped to a physical frame.","Represents a physical frame mapped in a page table.","A Mapper implementation that relies on a PhysAddr to …","A trait for common page table operations on pages of size <code>S</code>…","An empty convencience trait that requires the <code>Mapper</code> trait …","This type represents a page whose mapping has changed in …","This type represents a change of a page table requiring a …","The given page table was not active on the CPU.","The given virtual address is not mapped to a physical …","The given page table was not at an recursive address.","A Mapper implementation that requires that the complete …","The given page is already mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","Provides a virtual address mapping for physical page table …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","A recursive page table is a last level page table with an …","The virtual address is mapped to a “huge” 1GiB frame.","The virtual address is mapped to a “large” 2MiB frame.","The virtual address is mapped to a 4KiB frame.","Provides methods for translating virtual addresses.","An error indicating that an <code>translate</code> call failed.","The return value of the <code>Translate::translate</code> function.","An error indicating that an <code>unmap</code> call failed.","","","","","","","","","","","","","","","","","","","","","","","","","Remove all empty P1-P3 tables","","","","Remove all empty P1-P3 tables in a certain range","","","","","Flush the page from the TLB to ensure that the newest …","Flush all pages from the TLB to ensure that the newest …","","","","","","","","","","","","","","Translate the given physical frame to a virtual page table …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Maps the given frame to the virtual page with the same …","Don’t flush the TLB and silence the “must be used” …","Don’t flush the TLB and silence the “must be used” …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a mutable reference to the wrapped level 4 …","Returns a mutable reference to the wrapped level 4 …","Returns a mutable reference to the wrapped level 4 …","Creates a new mapping in the page table.","Creates a new mapping in the page table.","","","","","","","","","","Creates a new <code>MappedPageTable</code> that uses the passed …","Creates a new <code>OffsetPageTable</code> that uses the given offset …","Creates a new RecursivePageTable from the passed level 4 …","Create a new flush promise","Create a new flush promise","Creates a new RecursivePageTable without performing any …","Returns the <code>PageTableFrameMapping</code> used for converting …","Returns the offset used for converting virtual to physical …","Set the flags of an existing page table level 2 entry","","","","","","","","","","Set the flags of an existing page table level 3 entry","","","","","","","","","","Set the flags of an existing page level 4 table entry","","","","","","","","","","Returns the size the frame (4KB, 2MB or 1GB).","Returns the start address of the frame.","Return the frame that the given virtual address is mapped …","","","","Translates the given virtual address to the physical …","Return the frame that the specified page is mapped to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes a mapping from the page table and returns the …","","","","","","","","","","Updates the flags of an existing mapping.","","","","","","","","","","The entry flags in the lowest-level page table.","The mapped frame.","The offset within the mapped frame.","The given address was not sufficiently aligned.","This trait is implemented for 4KiB and 2MiB pages, but not …","A virtual memory page.","A range of pages with exclusive upper bound.","A range of pages with inclusive upper bound.","Trait for abstracting over the three possible page sizes …","The page size in bytes.","The page size in bytes.","A string representation of the page size for debug output.","A “giant” 1GiB page.","A “huge” 2MiB page.","A standard 4KiB page.","","","Converts the range of 2MiB pages to a range of 4KiB pages.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the page that contains the given virtual address.","The end of the range, exclusive.","The end of the range, inclusive.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the 4KiB memory page with the specified page table …","Returns the 1GiB memory page with the specified page table …","Returns the 2MiB memory page with the specified page table …","Returns the page that starts at the given virtual address.","Returns the page that starts at the given virtual address.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns wether this range contains no pages.","Returns whether this range contains no pages.","","","Returns the level 1 page table index of this page.","Returns the level 2 page table index of this page.","Returns the level 3 page table index of this page.","Returns the level 4 page table index of this page.","Returns the table index of this page at the specified …","","","","","Returns a range of pages, exclusive <code>end</code>.","Returns a range of pages, inclusive <code>end</code>.","Returns the size the page (4KB, 2MB or 1GB).","The start of the range, inclusive.","The start of the range, inclusive.","Returns the start address of the page.","","","","","","","","","","","","","","","","","","","","","","","","","","Set by the CPU when the mapped frame or page table is …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Set by the CPU on a write to the mapped frame.","Represents the level for a page-map level-4.","The error returned by the <code>PageTableEntry::frame</code> method.","The entry does not have the <code>PRESENT</code> flag set, so it isn’…","Indicates that the mapping is present in all address …","Specifies that the entry maps a huge frame instead of a …","The entry does have the <code>HUGE_PAGE</code> flag set. The <code>frame</code> …","Disables caching for the pointed entry is cacheable.","Forbid code execution from the mapped frames.","Represents the level for a page table.","Specifies whether the mapped frame or page table is loaded …","A 12-bit offset into a 4KiB Page.","Represents a page table.","A 64-bit page table entry.","Possible flags for a page table entry.","A 9-bit index into a page table.","A value between 1 and 4.","Represents the level for a page-directory pointer.","Represents the level for a page directory.","Controls whether accesses from userspace (i.e. ring 3) are …","Controls whether writes to the mapped frames are allowed.","If this bit is set, a “write-through” policy is used …","Returns the physical address mapped by this entry, might …","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Returns the alignment for the address space described by …","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Returns the flags of this entry.","","","","","","","","","","","","Returns the physical frame mapped by this entry.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Checks if the page table is empty (all entries are zero).","Returns whether this entry is zero.","Yield a set of contained flags values.","Returns an iterator over the entries of the page table.","Returns an iterator that allows modifying the entries of …","Yield a set of contained named flags values.","Creates an unused page table entry.","Creates an empty page table.","Creates a new index from the given <code>u16</code>. Panics if the …","Creates a new offset from the given <code>u16</code>. Panics if the …","Creates a new index from the given <code>u16</code>. Throws away bits …","Creates a new offset from the given <code>u16</code>. Throws away bits …","Returns the next higher level or <code>None</code> for level 4","Returns the next lower level or <code>None</code> for level 1","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Map the entry to the specified physical address with the …","Sets the flags of this entry.","Map the entry to the specified physical frame with the …","Sets this entry to zero.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the alignment for the address space described by a …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Clears all entries.","A helper trait that implements the read port operation.","A helper trait that implements the write port operation.","Reads a <code>Self</code> value from the given port.","Writes a <code>Self</code> value to the given port.","In 64-bit mode the TSS holds information that is not …","","","","","Returns the argument unchanged.","The full 64-bit canonical forms of the interrupt stack …","Calls <code>U::from(self)</code>.","The 16-bit offset to the I/O permission bit map from the …","Creates a new TSS with zeroed privilege and interrupt …","The full 64-bit canonical forms of the stack pointers …","","",""],"i":[0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,1,1,0,0,0,0,10,10,13,13,10,10,13,13,0,10,13,0,10,13,10,10,10,13,10,17,18,10,13,17,18,10,13,10,13,10,13,10,13,17,18,10,10,10,10,10,10,13,13,13,13,13,13,10,17,18,10,13,10,10,13,17,18,10,13,10,13,10,13,10,13,10,13,10,13,10,10,10,10,10,10,10,13,10,10,10,10,13,13,13,10,10,13,13,17,18,10,13,17,18,10,13,10,13,17,18,10,13,10,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,25,26,27,24,25,26,27,24,24,24,25,26,27,24,25,26,27,24,25,26,27,24,24,24,25,26,27,24,25,26,27,24,25,26,27,24,0,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,0,0,0,0,0,42,36,37,42,40,39,36,37,42,40,39,36,37,39,40,39,36,40,40,36,0,36,0,0,42,40,39,36,37,37,42,40,39,36,37,40,36,36,42,40,39,36,37,39,39,37,40,39,36,40,36,39,39,42,40,39,36,37,42,40,39,36,37,42,40,39,36,37,40,0,0,0,0,0,0,0,0,0,0,0,0,46,46,48,0,0,0,0,0,0,0,48,46,46,0,0,48,48,48,48,46,46,46,48,48,48,48,47,47,48,46,48,48,48,46,48,48,48,48,48,48,48,46,48,48,48,48,46,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,46,47,47,48,48,46,47,48,46,47,48,51,46,52,53,47,54,48,51,46,52,53,47,54,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,51,46,46,46,46,46,52,53,47,47,47,47,47,54,48,48,48,48,48,51,46,52,53,47,54,48,46,47,48,46,46,47,47,48,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,51,46,52,53,47,54,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,51,52,53,54,53,51,52,53,54,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,51,46,52,53,47,54,48,51,46,52,53,47,54,48,51,46,52,53,47,54,48,46,47,48,51,54,51,53,54,53,51,54,58,0,0,62,62,0,0,0,61,0,61,0,61,0,61,0,0,0,0,0,59,59,59,59,59,59,62,62,59,59,59,59,59,63,63,63,63,152,59,58,58,58,58,58,58,58,58,58,59,58,59,58,59,58,59,58,59,58,58,59,59,60,58,59,58,59,64,65,66,67,61,68,58,59,62,63,60,69,64,65,66,67,61,68,58,59,62,63,60,69,61,58,59,62,63,60,58,59,58,59,60,58,59,58,59,58,59,61,58,59,62,63,60,58,59,60,64,65,66,67,61,68,58,58,58,58,58,59,59,59,59,59,62,63,60,69,64,65,66,67,61,68,58,59,62,63,60,60,69,58,59,62,63,60,58,58,59,59,58,59,60,58,59,60,58,59,58,59,61,59,58,59,58,59,60,58,59,58,59,64,65,66,67,61,68,58,59,62,63,60,69,58,59,58,59,58,59,58,59,58,59,59,61,63,58,59,58,59,152,64,65,66,67,68,69,68,69,58,59,60,58,59,60,60,60,60,58,59,58,59,58,59,58,59,60,58,64,65,66,67,61,68,58,59,62,63,60,69,64,65,66,67,61,68,58,59,62,63,60,69,64,65,66,67,61,68,58,59,62,63,60,69,58,59,152,64,65,66,67,69,69,0,0,0,71,0,0,72,72,72,72,72,72,0,71,71,71,0,74,75,76,77,78,79,80,81,82,0,71,0,71,0,72,72,71,0,71,0,71,72,71,72,71,72,71,72,71,72,71,71,72,72,71,72,71,72,73,74,75,76,77,78,79,80,81,82,71,72,73,74,75,76,77,78,79,80,81,82,71,72,71,72,71,72,71,72,71,72,71,72,71,72,71,72,71,72,73,74,75,76,77,78,79,80,81,82,71,71,71,71,71,72,72,72,72,72,73,74,75,76,77,78,79,80,81,82,71,72,71,72,71,71,72,72,71,72,71,72,71,72,71,72,71,72,71,72,71,72,71,72,73,74,75,76,77,78,79,80,81,82,71,72,71,72,71,72,71,72,71,72,71,72,73,71,72,71,72,73,74,75,76,77,78,79,80,81,82,74,78,71,72,71,72,71,72,71,72,71,72,71,72,73,74,75,76,77,78,79,80,81,82,71,72,73,74,75,76,77,78,79,80,81,82,71,72,73,74,75,76,77,78,79,80,81,82,71,72,71,72,74,73,74,75,76,77,78,79,80,81,82,74,78,85,85,85,85,85,85,85,85,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,85,85,85,85,85,85,85,85,85,85,0,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,83,83,83,83,83,83,83,83,83,83,0,0,153,0,0,0,0,0,34,0,0,0,0,34,86,87,88,89,90,91,34,86,87,88,89,90,91,34,34,34,34,86,87,88,89,90,91,34,86,87,88,89,90,91,154,86,87,88,89,90,91,34,34,34,86,87,88,89,90,91,34,34,153,90,91,34,154,86,87,88,89,90,91,34,91,34,86,87,88,89,90,91,34,86,87,88,89,90,91,34,86,87,88,89,90,91,153,90,91,92,92,92,92,92,92,92,92,92,0,0,92,92,92,92,92,92,92,92,92,92,92,93,92,93,92,92,92,92,92,92,92,92,92,93,92,92,92,92,92,93,92,92,92,92,92,92,92,92,92,92,92,92,93,92,92,92,92,92,92,92,92,93,93,92,92,92,92,92,92,93,92,93,92,93,92,92,93,93,0,35,35,35,35,35,35,0,0,35,35,0,0,35,35,0,35,96,96,96,96,96,96,96,0,0,96,96,0,96,96,96,96,96,96,96,0,95,96,96,96,96,95,96,94,96,94,96,96,96,96,96,96,96,96,94,95,96,94,95,96,94,95,96,96,96,96,96,95,96,96,96,94,95,96,96,96,96,96,94,95,96,96,96,96,96,96,96,96,94,96,96,96,96,94,95,96,96,96,96,96,96,95,95,94,94,94,96,96,96,96,96,96,96,96,94,95,96,94,95,96,95,95,94,95,96,96,95,95,108,108,108,99,108,108,0,108,0,0,108,108,0,0,0,107,0,108,0,0,108,99,107,0,0,0,108,108,107,99,108,108,108,99,99,108,0,0,99,99,99,108,108,0,108,108,99,108,108,108,103,99,100,99,99,99,99,99,99,99,99,100,103,104,105,101,99,106,107,108,100,103,104,105,101,99,106,107,108,103,103,103,104,105,101,99,106,107,108,99,101,99,99,103,101,103,100,106,103,99,105,103,103,99,104,105,99,106,107,108,99,106,100,103,104,105,101,99,99,99,99,99,106,107,108,100,103,104,105,101,99,106,107,108,99,99,99,99,99,99,99,103,104,99,106,107,103,103,106,103,99,101,99,99,100,103,104,105,101,99,106,107,108,99,103,103,101,99,99,106,99,99,103,103,103,104,103,106,106,103,99,103,103,99,99,103,103,103,99,104,104,104,104,104,104,105,105,105,103,103,103,101,101,103,99,99,99,99,100,103,104,105,101,99,106,107,108,100,103,104,105,101,99,106,107,108,100,103,104,105,101,99,106,107,108,99,103,103,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,118,0,0,0,0,0,0,0,57,57,57,119,120,57,119,120,57,119,120,57,57,119,120,57,119,120,57,119,120,57,119,120,57,57,57,119,120,57,119,120,119,120,119,120,119,120,57,57,57,57,119,120,57,57,57,57,57,119,120,57,119,120,57,119,120,0,0,138,136,139,141,0,0,136,0,0,0,0,0,0,135,136,135,0,138,139,140,141,0,138,139,140,141,0,137,137,137,0,0,0,0,128,130,131,135,136,137,134,133,138,139,140,141,128,130,131,135,136,137,134,133,138,139,140,141,126,128,130,131,126,128,130,131,133,134,133,128,130,131,135,135,136,137,134,133,138,139,140,141,129,128,130,131,135,136,137,134,133,138,139,140,141,143,134,133,128,130,131,135,136,137,134,133,138,139,140,141,128,130,131,143,143,128,128,128,130,130,130,131,131,131,128,130,131,134,133,131,128,130,143,128,128,128,130,130,130,131,131,131,143,128,128,128,130,130,130,131,131,131,143,128,128,128,130,130,130,131,131,131,137,137,148,128,130,131,148,143,128,128,128,130,130,130,131,131,131,128,130,131,135,136,137,134,133,138,139,140,141,128,130,131,135,136,137,134,133,138,139,140,141,128,130,131,135,136,137,134,133,138,139,140,141,143,128,128,128,130,130,130,131,131,131,143,128,128,128,130,130,130,131,131,131,155,155,155,0,0,0,0,0,0,117,84,117,0,0,0,84,84,45,84,127,146,147,84,45,132,123,127,146,147,84,45,132,123,127,146,147,84,45,132,127,146,147,84,84,45,132,127,146,147,84,45,132,127,146,147,84,45,132,123,123,84,127,146,147,84,45,132,123,84,84,84,84,84,84,45,132,127,146,147,84,45,132,123,45,132,45,132,45,132,84,84,84,84,84,127,146,147,84,84,84,84,45,132,84,84,84,84,84,127,146,147,84,45,132,123,127,146,147,84,45,132,123,127,146,147,84,45,132,123,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,21,0,150,144,144,150,144,144,21,144,0,0,0,0,0,0,21,21,144,144,144,149,144,144,144,144,144,144,144,144,144,150,149,144,142,19,20,21,150,149,144,142,19,20,21,150,149,144,142,19,20,21,144,19,20,21,144,144,142,144,144,21,150,144,19,20,21,144,149,150,149,144,144,144,144,144,142,19,20,21,149,150,149,144,142,19,20,21,144,144,144,144,144,144,144,144,19,20,21,142,142,142,142,144,144,144,150,149,144,142,19,20,21,144,144,144,142,149,144,142,142,144,149,142,19,20,19,20,21,21,144,144,19,20,21,144,144,149,149,149,149,144,144,144,21,144,150,149,144,142,19,20,21,150,149,144,142,19,20,21,150,149,144,142,19,20,21,144,142,0,0,28,30,0,98,98,98,98,98,98,98,98,98,98,98,98,98],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[1,1],2],[[1,3],4],[-1,-1,[]],[5,1],[[1,-1],6,7],0,[-1,-2,[],[]],0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,[[10,11],-1,[]],[[10,12],-1,[]],[[13,11],-1,[]],[[13,12],-1,[]],[[10,11],6],[[10,12],6],[[13,12],6],[[13,11],6],[[11,11],11],[[10,-1],10,[[14,[11]]]],[[13,-1],13,[[14,[11]]]],[[11,11],11],[[10,-1],10,[[14,[11]]]],[[13,-1],13,[[14,[11]]]],[10],[10],[10,11],[13,11],[[10,12],[[15,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[13,13],[[10,10],16],[[13,13],16],[[10,10],2],[[13,13],2],[[17,3],4],[[18,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[10,12],[[15,[10]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],10],[[10,-1],6,7],[[13,-1],6,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,-1],2,[[14,[11]]]],[[13,-1],2,[[14,[11]]]],[10,2],[13,2],[11,10],[11,13],[11,10],[11,13],[11,10],[11,13],[10,19],[10,19],[10,19],[10,19],[10,20],[[10,21],19],[[10,10],[[15,[16]]]],[[13,13],[[15,[16]]]],[[10,10],[[15,[12]]]],[[10,11],-1,[]],[[10,10],-1,[]],[[10,12],-1,[]],[[13,13],-1,[]],[[13,11],-1,[]],[[13,12],-1,[]],[[10,12],6],[[10,11],6],[[13,12],6],[[13,11],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[11,[[8,[10,17]]]],[11,[[8,[13,18]]]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[],10],[[],13],[[],6],[[],6],0,[[],6],0,0,[[],10],0,0,0,[[],2],[[],6],[[],6],[[],6],[[],6],[-2,-1,[],[[23,[],[[22,[-1]]]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1,-2]]],[[24,[-1,-2]]],[],[]],[[[24,[-1,-2]],[24,[-1,-2]]],2,[],[]],[[[24,[-1,-2]],3],4,[],0],[[25,3],4],[[26,3],4],[[27,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[24,[-1,-2]]],[],[]],[[[24,[-1,-2]]],-1,28,29],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[[24,[-1,-2]],-1],6,30,31],0,[-1,-2,[],[]],[-1,-2,[],[]],[32,32],[[32,3],4],[-1,-1,[]],[32,[[15,[5]]]],[32,[[15,[33]]]],[32,[[15,[11]]]],[-1,-2,[],[]],[[],[[15,[32]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,[[],34],[34,6],[34,6],[34,6],[34,6],[34,6],[[],11],[[],11],[34,6],[[],6],[11,6],[11,6],0,[35,6],[35,6],[34,6],[[],35],[[],35],0,0,0,0,0,0,0,0,0,[[[36,[-1]],5],[[8,[[36,[-1]],37]]],38],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,36],[40,40],[39,39],[[[36,[-1]]],[[36,[-1]]],[38,41]],[[40,40],16],[[40,40],2],[[[36,[-1]]],[[36,[-1]]],38],[10,6],[[[36,[-1]]],6,38],[[],6],[42,6],[[42,3],4],[[40,3],4],[[39,3],4],[[[36,[-1]],3],4,[38,43]],[[37,3],4],[[37,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[40,-1],6,7],[[[36,[-1]]],[[36,[-1]]],38],[[[36,[-1]]],[[36,[-1]]],38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,5],[39,33],0,[5,[[8,[40,44]]]],[[],[[15,[39]]]],[[[36,[-1]],[45,[-2]]],[[36,[-2]]],38,38],[[40,40],[[15,[16]]]],[[[36,[-1]],40],[[36,[-1]]],38],[39,2],[39,6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[40,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],46],[[],47],[[],48],[[46,46],46],[[47,47],47],[[48,48],48],[[46,46],6],[[47,47],6],[[48,48],6],[[46,46],46],[[47,47],47],[[48,48],48],[[46,46],6],[[47,47],6],[[48,48],6],[46,11],[46,11],[47,11],[47,11],[48,11],[48,11],[[46,46],46],[[47,47],47],[[48,48],48],[[46,46],6],[[47,47],6],[[48,48],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[47,47],[48,48],[[46,46],16],[[47,47],16],[[48,48],16],[46,46],[47,47],[48,48],[[46,46],2],[[47,47],2],[[48,48],2],[[46,46],46],[[47,47],47],[[48,48],48],[[],46],[[],47],[[],48],[[46,46],2],[[47,47],2],[[48,48],2],[[46,-1],6,[[50,[],[[49,[46]]]]]],[[47,-1],6,[[50,[],[[49,[47]]]]]],[[48,-1],6,[[50,[],[[49,[48]]]]]],[[51,3],4],[[46,3],4],[[46,3],4],[[46,3],4],[[46,3],4],[[46,3],4],[[52,3],4],[[53,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[54,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[15,[46]]]],[11,[[15,[47]]]],[11,[[15,[48]]]],[11,46],[11,46],[11,47],[11,47],[11,48],[11,48],[11,46],[11,47],[11,48],[11,46],[11,47],[11,48],[-1,46,[[50,[],[[49,[46]]]]]],[-1,47,[[50,[],[[49,[47]]]]]],[-1,48,[[50,[],[[49,[48]]]]]],[44,[[15,[46]]]],[44,[[15,[47]]]],[44,[[15,[48]]]],[[46,-1],6,7],[[47,-1],6,7],[[48,-1],6,7],[[46,46],6],[[47,47],6],[[48,48],6],[[46,46],46],[[47,47],47],[[48,48],48],[[46,46],2],[[47,47],2],[[48,48],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,-1,[]],[47,-1,[]],[48,-1,[]],[46,2],[47,2],[48,2],[46,2],[47,2],[48,2],[46,[[55,[46]]]],[47,[[55,[47]]]],[48,[[55,[48]]]],[46,[[56,[46]]]],[47,[[56,[47]]]],[48,[[56,[48]]]],[46,46],[47,47],[48,48],[[46,46],[[15,[16]]]],[[47,47],[[15,[16]]]],[[48,48],[[15,[16]]]],[[],46],[[],10],[[],[[6,[57,47]]]],[[],48],[[],[[6,[57,40]]]],[[],11],[[],11],[[],[[6,[57,5]]]],[[],11],[[46,46],6],[[47,47],6],[[48,48],6],[[46,46,2],6],[[47,47,2],6],[[48,48,2],6],[[46,46],46],[[47,47],47],[[48,48],48],[[46,46],6],[[47,47],6],[[48,48],6],[[46,46],46],[[47,47],47],[[48,48],48],[[46,46],6],[[47,47],6],[[48,48],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[46,46],46],[[47,47],47],[[48,48],48],[-1,6,[[23,[46]]]],[-1,6,[[23,[48]]]],[46,6],[[57,47],6],[48,6],[[57,40],6],[11,6],[11,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],58],[[],59],[[58,58],58],[[59,59],59],[[58,58],6],[[59,59],6],[[58,58],58],[[59,59],59],[[58,58],6],[[59,59],6],[58,11],[58,11],[59,11],[59,11],[60,11],[[58,58],58],[[59,59],59],[[58,58],6],[[59,59],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61,61],[58,58],[59,59],[62,62],[63,63],[60,60],[[58,58],16],[[59,59],16],[58,58],[59,59],[[60,61],62],[[58,58],2],[[59,59],2],[[58,58],58],[[59,59],59],[[],58],[[],59],[[61,61],2],[[58,58],2],[[59,59],2],[[62,62],2],[[63,63],2],[[60,60],2],[[58,-1],6,[[50,[],[[49,[58]]]]]],[[59,-1],6,[[50,[],[[49,[59]]]]]],[60,59],[[64,3],4],[[65,3],4],[[66,3],4],[[67,3],4],[[61,3],4],[[68,3],4],[[58,3],4],[[58,3],4],[[58,3],4],[[58,3],4],[[58,3],4],[[59,3],4],[[59,3],4],[[59,3],4],[[59,3],4],[[59,3],4],[[62,3],4],[[63,3],4],[[60,3],4],[[69,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[59,60],[-1,-1,[]],[-1,-1,[]],[11,[[15,[58]]]],[11,[[15,[59]]]],[11,[[15,[62]]]],[11,[[15,[63]]]],[11,[[15,[60]]]],[11,58],[11,58],[11,59],[11,59],[11,58],[11,59],[11,60],[11,58],[11,59],[11,60],[-1,58,[[50,[],[[49,[58]]]]]],[-1,59,[[50,[],[[49,[59]]]]]],[44,[[15,[58]]]],[44,[[15,[59]]]],[61,70],[61,59],[[58,-1],6,7],[[59,-1],6,7],[[58,58],6],[[59,59],6],[[60,59],6],[[58,58],58],[[59,59],59],[[58,58],2],[[59,59],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,-1,[]],[59,-1,[]],[58,2],[59,2],[58,2],[59,2],[58,[[55,[58]]]],[59,[[55,[59]]]],[58,[[56,[58]]]],[59,[[56,[59]]]],[61,59],[70,[[15,[61]]]],[12,[[15,[63]]]],[58,58],[59,59],[[58,58],[[15,[16]]]],[[59,59],[[15,[16]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],58],[[],60],[[],11],[[],11],[[58,58],6],[[59,59],6],[[60,59],6],[[58,58,2],6],[[59,59,2],6],[[60,61,62],6],[[60,59,2],6],[[60,61,63],6],[[60,61],63],[[58,58],58],[[59,59],59],[[58,58],6],[[59,59],6],[[58,58],58],[[59,59],59],[[58,58],6],[[59,59],6],[[60,59],6],[61,58],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[58,58],58],[[59,59],59],[11,6],[11,6],[11,6],[11,6],[11,6],[60,6],[11,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],71],[[],72],[[71,71],71],[[72,72],72],[[71,71],6],[[72,72],6],[[71,71],71],[[72,72],72],[[71,71],6],[[72,72],6],[71,11],[71,11],[72,11],[72,11],[[71,71],71],[[72,72],72],[[71,71],6],[[72,72],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,71],[72,72],[[71,71],16],[[72,72],16],[71,71],[72,72],[[71,71],2],[[72,72],2],[[71,71],71],[[72,72],72],[[],71],[[],72],[[71,71],2],[[72,72],2],[[71,-1],6,[[50,[],[[49,[71]]]]]],[[72,-1],6,[[50,[],[[49,[72]]]]]],[[73,3],4],[[74,3],4],[[75,3],4],[[76,3],4],[[77,3],4],[[78,3],4],[[79,3],4],[[80,3],4],[[81,3],4],[[82,3],4],[[71,3],4],[[71,3],4],[[71,3],4],[[71,3],4],[[71,3],4],[[72,3],4],[[72,3],4],[[72,3],4],[[72,3],4],[[72,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[15,[71]]]],[11,[[15,[72]]]],[11,71],[11,71],[11,72],[11,72],[11,71],[11,72],[11,71],[11,72],[-1,71,[[50,[],[[49,[71]]]]]],[-1,72,[[50,[],[[49,[72]]]]]],[44,[[15,[71]]]],[44,[[15,[72]]]],[[71,-1],6,7],[[72,-1],6,7],[[71,71],6],[[72,72],6],[[71,71],71],[[72,72],72],[[71,71],2],[[72,72],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,-1,[]],[72,-1,[]],[71,2],[72,2],[71,2],[72,2],[71,[[55,[71]]]],[72,[[55,[72]]]],[71,[[56,[71]]]],[72,[[56,[72]]]],[33,73],[71,71],[72,72],[[71,71],[[15,[16]]]],[[72,72],[[15,[16]]]],[73,11],[[],71],[[],10],[[],10],[[],10],[[],[[6,[34,34,34,34]]]],[[],10],[[],83],[[],[[6,[72,84]]]],[[],[[6,[72,84]]]],[[],11],[[],[[6,[5,5]]]],[[71,71],6],[[72,72],6],[[71,71,2],6],[[72,72,2],6],[[71,71],71],[[72,72],72],[[71,71],6],[[72,72],6],[[71,71],71],[[72,72],72],[[71,71],6],[[72,72],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[71,71],71],[[72,72],72],[-1,6,[[23,[71]]]],[[73,11],6],[71,6],[10,6],[10,6],[10,6],[[34,34,34,34],[[8,[6,44]]]],[10,6],[83,6],[[72,84],6],[[72,84],6],[11,6],[[5,5],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],85],[[85,85],85],[[85,85],6],[[85,85],85],[[85,85],6],[85,33],[85,33],[[85,85],85],[[85,85],6],[-1,-2,[],[]],[-1,-2,[],[]],[85,85],[[85,85],16],[85,85],[[85,85],2],[[],85],[[85,85],85],[[],85],[[85,85],2],[[85,-1],6,[[50,[],[[49,[85]]]]]],[[85,3],4],[[85,3],4],[[85,3],4],[[85,3],4],[[85,3],4],[-1,-1,[]],[33,[[15,[85]]]],[33,85],[33,85],[33,85],[33,85],[-1,85,[[50,[],[[49,[85]]]]]],[44,[[15,[85]]]],[[85,-1],6,7],[[85,85],6],[[85,85],85],[[85,85],2],[-1,-2,[],[]],[85,-1,[]],[85,2],[85,2],[85,[[55,[85]]]],[85,[[56,[85]]]],[85,85],[[85,85],[[15,[16]]]],[[],85],[[85,85],6],[[85,85,2],6],[[85,85],85],[[85,85],6],[[85,85],85],[[85,85],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[85,85],85],[85,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],83],[[83,83],83],[[83,83],6],[[83,83],83],[[83,83],6],[83,11],[83,11],[[83,83],83],[[83,83],6],[-1,-2,[],[]],[-1,-2,[],[]],[83,83],[[83,83],16],[83,83],[[83,83],2],[[83,83],83],[[],83],[[83,83],2],[[83,-1],6,[[50,[],[[49,[83]]]]]],[[83,3],4],[[83,3],4],[[83,3],4],[[83,3],4],[[83,3],4],[-1,-1,[]],[11,[[15,[83]]]],[11,83],[11,83],[11,83],[11,83],[-1,83,[[50,[],[[49,[83]]]]]],[44,[[15,[83]]]],[[83,-1],6,7],[[83,83],6],[[83,83],83],[[83,83],2],[-1,-2,[],[]],[83,-1,[]],[83,2],[83,2],[83,[[55,[83]]]],[83,[[56,[83]]]],[83,83],[[83,83],[[15,[16]]]],[[],83],[[],11],[[83,83],6],[[83,83,2],6],[[83,83],83],[[83,83],6],[[83,83],83],[[83,83],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[83,83],83],[83,6],[11,6],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[[34,34],16],[[34,34],2],[[34,3],4],[[86,3],4],[[87,3],4],[[88,3],4],[[89,3],4],[[90,3],4],[[91,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[34,-1],6,7],[34,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,1],34],[[34,34],[[15,[16]]]],[[],10],[[],10],[[],10],[34,1],[34,6],[34,6],[34,6],[34,6],[34,6],[34,6],[34,6],[[34,1],6],[[],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[10,6],[10,6],[10,6],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],92],[[92,92],92],[[92,92],6],[[92,92],92],[[92,92],6],[92,11],[92,11],[[92,92],92],[[92,92],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[[92,92],16],[92,92],[[92,92],2],[[92,92],92],[[],92],[[92,92],2],[[92,-1],6,[[50,[],[[49,[92]]]]]],[[93,3],4],[[92,3],4],[[92,3],4],[[92,3],4],[[92,3],4],[[92,3],4],[-1,-1,[]],[-1,-1,[]],[11,[[15,[92]]]],[11,92],[11,92],[11,92],[11,92],[-1,92,[[50,[],[[49,[92]]]]]],[44,[[15,[92]]]],[[92,-1],6,7],[[92,92],6],[[92,92],92],[[92,92],2],[-1,-2,[],[]],[-1,-2,[],[]],[92,-1,[]],[92,2],[92,2],[92,[[55,[92]]]],[92,[[56,[92]]]],[92,92],[[92,92],[[15,[16]]]],[[],92],[[],11],[[92,92],6],[[92,92,2],6],[[92,92],92],[[92,92],6],[[92,92],92],[[92,92],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[92,92],92],[92,6],[11,6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[[35,3],4],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[94,95],34],[[],96],[94,[[97,[11]]]],[[96,96],96],[[96,96],6],[[96,96],96],[[96,96],6],[96,11],[96,11],[[96,96],96],[[96,96],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[94,94],[95,95],[96,96],[[96,96],16],[96,96],[[96,96],2],[[96,96],96],[95,1],[[],96],[[96,96],2],[[96,-1],6,[[50,[],[[49,[96]]]]]],[[94,3],4],[[95,3],4],[[96,3],4],[[96,3],4],[[96,3],4],[[96,3],4],[[96,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[15,[96]]]],[11,96],[11,96],[11,96],[11,96],[-1,96,[[50,[],[[49,[96]]]]]],[44,[[15,[96]]]],[[[97,[11]]],94],[[96,-1],6,7],[[96,96],6],[[96,96],96],[[96,96],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[96,-1,[]],[96,2],[96,2],[96,[[55,[96]]]],[96,[[56,[96]]]],[[],95],[[],95],[94,6],[94,6],[[],94],[96,96],[[96,96],[[15,[16]]]],[[96,96],6],[[96,96,2],6],[[96,96],96],[[96,96],6],[[96,96],96],[[96,96],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[98,95],[98,95],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[96,96],96],[[],95],[[],95],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],99],[100,[[102,[101]]]],[[99,99],99],[[99,99],6],[[99,99],99],[[99,99],6],[99,11],[99,11],[[99,99],99],[[99,99],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[103,103],[[[104,[-1]]],[[104,[-1]]],41],[105,105],[101,101],[99,99],[106,106],[107,107],[108,108],[[99,99],16],0,[99,99],[[99,99],2],0,0,0,[100,-1,[]],[106,107],0,[[99,99],99],[[105,2],105],0,0,[[],99],[[[104,[-1]],[104,[-1]]],2,[]],[[105,105],2],[[99,99],2],[[106,106],2],[[107,107],2],[[108,108],2],[[99,-1],6,[[50,[],[[49,[99]]]]]],[106,2],[[100,3],4],[[103,3],4],[[[104,[-1]],3],4,[]],[[105,3],4],[[101,3],4],[[99,3],4],[[99,3],4],[[99,3],4],[[99,3],4],[[99,3],4],[[106,3],4],[[107,3],4],[[108,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[15,[99]]]],[11,99],[11,99],[11,99],[11,99],[-1,99,[[50,[],[[49,[99]]]]]],[44,[[15,[99]]]],0,[[[104,[-1]]],10,[]],[[99,-1],6,7],[[106,-1],6,7],[[107,-1],6,7],0,[[103,12],-1,[]],[106,11],[[103,12],-1,[]],[[99,99],6],0,[[99,99],99],[[99,99],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[99,-1,[]],0,0,[101,109],[99,2],[99,2],[106,2],[99,[[55,[99]]]],[99,[[56,[99]]]],[103,6],[103,6],0,[[],[[104,[-1]]],[]],[[],103],[11,[[15,[106]]]],[11,106],0,[99,99],0,0,[[99,99],[[15,[16]]]],[[99,99],6],[103,6],0,0,[[99,99,2],6],[[[104,[-1]],10],105,[]],[[[104,[110]],110],105],[[[104,[111]],111],105],[[[104,[112]],112],105],[[[104,[113]],113],105],[[[104,[114]],114],105],[[105,2],105],[[105,1],105],[[105,5],105],0,[[103,-1],[[97,[[104,[111]]]]],[[115,[12]]]],[[103,-1],[[97,[[104,[111]]]]],[[115,[12]]]],0,0,0,[[99,99],99],[[99,99],6],[[99,99],99],[[99,99],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[99,99],99],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[116,[[15,[[57,[-1]]]]],117],[[118,[57,[-1]]],6,117],0,0,0,0,0,0,0,[[[57,[-1]],11],-2,117,[]],[[[57,[-1]],11],6,117],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[57,[-1]]],[[57,[-1]]],[41,117]],[[[119,[-1]]],[[119,[-1]]],[41,117]],[[[120,[-1]]],[[120,[-1]]],[41,117]],[[[57,[-1]],[57,[-1]]],16,[121,117]],[13,[[57,[-1]]],117],0,0,[[[57,[-1]],[57,[-1]]],2,[122,117]],[[[119,[-1]],[119,[-1]]],2,[122,117]],[[[120,[-1]],[120,[-1]]],2,[122,117]],[[[57,[-1]],3],4,117],[[[119,[-1]],3],4,117],[[[120,[-1]],3],4,117],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[13,[[8,[[57,[-1]],123]]],117],[13,[[57,[-1]]],117],[[[57,[-1]],-2],6,[124,117],7],[[[119,[-1]],-2],6,[124,117],7],[[[120,[-1]],-2],6,[124,117],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[119,[-1]]],2,117],[[[120,[-1]]],2,117],[[[119,[-1]]],[[15,[-2]]],117,[]],[[[120,[-1]]],[[15,[-2]]],117,[]],[[[57,[-1]],[57,[-1]]],[[15,[16]]],[125,117]],[[[57,[-1]],[57,[-1]]],[[119,[-1]]],117],[[[57,[-1]],[57,[-1]]],[[120,[-1]]],117],[[[57,[-1]]],11,117],0,0,[[[57,[-1]]],13,117],[[[57,[-1]],[57,[-1]]],-2,117,[]],[[[57,[-1]],11],-2,117,[]],[[[57,[-1]],11],6,117],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[126,-1],6,[[118,[127]]]],[[[128,[-1]],-2],6,129,[[118,[127]]]],[[130,-1],6,[[118,[127]]]],[[131,-1],6,[[118,[127]]]],[[126,132,-1],6,[[118,[127]]]],[[[128,[-1]],132,-2],6,129,[[118,[127]]]],[[130,132,-1],6,[[118,[127]]]],[[131,132,-1],6,[[118,[127]]]],[[],133],[[[134,[-1]]],6,117],[133,6],[[[128,[-1]],3],4,[43,129]],[[130,3],4],[[131,3],4],[[135,3],4],[[135,3],4],[[136,3],4],[[137,3],4],[[[134,[-1]],3],4,[43,117]],[[133,3],4],[[[138,[-1]],3],4,[43,117]],[[139,3],4],[[140,3],4],[[141,3],4],[[129,57],142],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[143,[57,[-1]],144,-2],[[8,[[134,[-1]],[138,[-1]]]]],[117,117],[[116,[127]],145]],[[[134,[-1]]],6,117],[133,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[128,[-1]]],142,129],[130,142],[131,142],[[143,[84,[-1]],[57,[-1]],144,-2],[[8,[[134,[-1]],[138,[-1]]]]],117,[[116,[127]],145]],[[143,[84,[-1]],[57,[-1]],144,144,-2],[[8,[[134,[-1]],[138,[-1]]]]],117,[[116,[127]],145]],[[[128,[-1]],[84,[146]],[57,[146]],144,144,-2],[[8,[[134,[146]],[138,[146]]]]],129,[[116,[127]],145]],[[[128,[-1]],[84,[127]],[57,[127]],144,144,-2],[[8,[[134,[127]],[138,[127]]]]],129,[[116,[127]],145]],[[[128,[-1]],[84,[147]],[57,[147]],144,144,-2],[[8,[[134,[147]],[138,[147]]]]],129,[[116,[127]],145]],[[130,[84,[127]],[57,[127]],144,144,-1],[[8,[[134,[127]],[138,[127]]]]],[[116,[127]],145]],[[130,[84,[146]],[57,[146]],144,144,-1],[[8,[[134,[146]],[138,[146]]]]],[[116,[127]],145]],[[130,[84,[147]],[57,[147]],144,144,-1],[[8,[[134,[147]],[138,[147]]]]],[[116,[127]],145]],[[131,[84,[146]],[57,[146]],144,144,-1],[[8,[[134,[146]],[138,[146]]]]],[[116,[127]],145]],[[131,[84,[147]],[57,[147]],144,144,-1],[[8,[[134,[147]],[138,[147]]]]],[[116,[127]],145]],[[131,[84,[127]],[57,[127]],144,144,-1],[[8,[[134,[127]],[138,[127]]]]],[[116,[127]],145]],[[142,-1],[[128,[-1]]],129],[[142,10],130],[142,[[8,[131,135]]]],[[[84,[-1]]],[[134,[-1]]],117],[[],133],[[142,19],131],[[[128,[-1]]],-1,129],[130,10],[[143,[84,[-1]],144],[[8,[133,140]]],117],[[[128,[-1]],[84,[147]],144],[[8,[133,140]]],129],[[[128,[-1]],[84,[146]],144],[[8,[133,140]]],129],[[[128,[-1]],[84,[127]],144],[[8,[133,140]]],129],[[130,[84,[147]],144],[[8,[133,140]]]],[[130,[84,[146]],144],[[8,[133,140]]]],[[130,[84,[127]],144],[[8,[133,140]]]],[[131,[84,[127]],144],[[8,[133,140]]]],[[131,[84,[147]],144],[[8,[133,140]]]],[[131,[84,[146]],144],[[8,[133,140]]]],[[143,[84,[-1]],144],[[8,[133,140]]],117],[[[128,[-1]],[84,[146]],144],[[8,[133,140]]],129],[[[128,[-1]],[84,[147]],144],[[8,[133,140]]],129],[[[128,[-1]],[84,[127]],144],[[8,[133,140]]],129],[[130,[84,[127]],144],[[8,[133,140]]]],[[130,[84,[147]],144],[[8,[133,140]]]],[[130,[84,[146]],144],[[8,[133,140]]]],[[131,[84,[146]],144],[[8,[133,140]]]],[[131,[84,[147]],144],[[8,[133,140]]]],[[131,[84,[127]],144],[[8,[133,140]]]],[[143,[84,[-1]],144],[[8,[133,140]]],117],[[[128,[-1]],[84,[146]],144],[[8,[133,140]]],129],[[[128,[-1]],[84,[127]],144],[[8,[133,140]]],129],[[[128,[-1]],[84,[147]],144],[[8,[133,140]]],129],[[130,[84,[127]],144],[[8,[133,140]]]],[[130,[84,[146]],144],[[8,[133,140]]]],[[130,[84,[147]],144],[[8,[133,140]]]],[[131,[84,[127]],144],[[8,[133,140]]]],[[131,[84,[147]],144],[[8,[133,140]]]],[[131,[84,[146]],144],[[8,[133,140]]]],[137,11],[137,13],[[148,10],136],[[[128,[-1]],10],136,129],[[130,10],136],[[131,10],136],[[148,10],[[15,[13]]]],[[143,[84,[-1]]],[[8,[[57,[-1]],141]]],117],[[[128,[-1]],[84,[147]]],[[8,[[57,[147]],141]]],129],[[[128,[-1]],[84,[146]]],[[8,[[57,[146]],141]]],129],[[[128,[-1]],[84,[127]]],[[8,[[57,[127]],141]]],129],[[130,[84,[146]]],[[8,[[57,[146]],141]]]],[[130,[84,[147]]],[[8,[[57,[147]],141]]]],[[130,[84,[127]]],[[8,[[57,[127]],141]]]],[[131,[84,[127]]],[[8,[[57,[127]],141]]]],[[131,[84,[147]]],[[8,[[57,[147]],141]]]],[[131,[84,[146]]],[[8,[[57,[146]],141]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[143,[84,[-1]]],[[8,[[6,[[57,[-1]],[134,[-1]]]],139]]],117],[[[128,[-1]],[84,[127]]],[[8,[[6,[[57,[127]],[134,[127]]]],139]]],129],[[[128,[-1]],[84,[147]]],[[8,[[6,[[57,[147]],[134,[147]]]],139]]],129],[[[128,[-1]],[84,[146]]],[[8,[[6,[[57,[146]],[134,[146]]]],139]]],129],[[130,[84,[146]]],[[8,[[6,[[57,[146]],[134,[146]]]],139]]]],[[130,[84,[147]]],[[8,[[6,[[57,[147]],[134,[147]]]],139]]]],[[130,[84,[127]]],[[8,[[6,[[57,[127]],[134,[127]]]],139]]]],[[131,[84,[147]]],[[8,[[6,[[57,[147]],[134,[147]]]],139]]]],[[131,[84,[127]]],[[8,[[6,[[57,[127]],[134,[127]]]],139]]]],[[131,[84,[146]]],[[8,[[6,[[57,[146]],[134,[146]]]],139]]]],[[143,[84,[-1]],144],[[8,[[134,[-1]],140]]],117],[[[128,[-1]],[84,[127]],144],[[8,[[134,[127]],140]]],129],[[[128,[-1]],[84,[146]],144],[[8,[[134,[146]],140]]],129],[[[128,[-1]],[84,[147]],144],[[8,[[134,[147]],140]]],129],[[130,[84,[127]],144],[[8,[[134,[127]],140]]]],[[130,[84,[147]],144],[[8,[[134,[147]],140]]]],[[130,[84,[146]],144],[[8,[[134,[146]],140]]]],[[131,[84,[127]],144],[[8,[[134,[127]],140]]]],[[131,[84,[146]],144],[[8,[[134,[146]],140]]]],[[131,[84,[147]],144],[[8,[[134,[147]],140]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[84,[-1]],11],-2,117,[]],[[[84,[-1]],11],6,117],[[[45,[146]]],[[45,[127]]]],[[[84,[-1]],12],[[15,[[84,[-1]]]]],117],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[127,127],[146,146],[147,147],[[[84,[-1]]],[[84,[-1]]],[41,117]],[[[45,[-1]]],[[45,[-1]]],[41,117]],[[[132,[-1]]],[[132,[-1]]],[41,117]],[[127,127],16],[[146,146],16],[[147,147],16],[[[84,[-1]],[84,[-1]]],16,[121,117]],[10,[[84,[-1]]],117],0,0,[[127,127],2],[[146,146],2],[[147,147],2],[[[84,[-1]],[84,[-1]]],2,[122,117]],[[[45,[-1]],[45,[-1]]],2,[122,117]],[[[132,[-1]],[132,[-1]]],2,[122,117]],[[127,3],4],[[146,3],4],[[147,3],4],[[[84,[-1]],3],4,117],[[[45,[-1]],3],4,117],[[[132,[-1]],3],4,117],[[123,3],4],[[123,3],4],[[[84,[-1]],12],[[15,[[84,[-1]]]]],117],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[19,19,19,19],[[84,[127]]]],[[19,19],[[84,[147]]]],[[19,19,19],[[84,[146]]]],[10,[[8,[[84,[-1]],123]]],117],[10,[[84,[-1]]],117],[[[84,[-1]],-2],6,[124,117],7],[[[45,[-1]],-2],6,[124,117],7],[[[132,[-1]],-2],6,[124,117],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[45,[-1]]],2,117],[[[132,[-1]]],2,117],[[[45,[-1]]],[[15,[-2]]],117,[]],[[[132,[-1]]],[[15,[-2]]],117,[]],[[[84,[127]]],19],[[[84,[-1]]],19,38],[[[84,[-1]]],19,117],[[[84,[-1]]],19,117],[[[84,[-1]],21],19,117],[[127,127],[[15,[16]]]],[[146,146],[[15,[16]]]],[[147,147],[[15,[16]]]],[[[84,[-1]],[84,[-1]]],[[15,[16]]],[125,117]],[[[84,[-1]],[84,[-1]]],[[45,[-1]]],117],[[[84,[-1]],[84,[-1]]],[[132,[-1]]],117],[[[84,[-1]]],11,117],0,0,[[[84,[-1]]],10,117],[[[84,[-1]],[84,[-1]]],[[15,[12]]],117],[[[84,[-1]],11],-2,117,[]],[[[84,[-1]],[84,[-1]]],-2,117,[]],[[[84,[-1]],11],6,117],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[149,13],[[],144],[[144,144],144],[[144,144],6],[[144,144],144],[[144,144],6],[144,11],[144,11],[[144,144],144],[[144,144],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[150,150],[149,149],[144,144],[142,142],[19,19],[20,20],[21,21],[[144,144],16],[[19,19],16],[[20,20],16],[[21,21],16],[144,144],[[144,144],2],[[],142],[[144,144],144],[[],144],[21,11],[[150,150],2],[[144,144],2],[[19,19],2],[[20,20],2],[[21,21],2],[[144,-1],6,[[50,[],[[49,[144]]]]]],[149,144],[[150,3],4],[[149,3],4],[[144,3],4],[[144,3],4],[[144,3],4],[[144,3],4],[[144,3],4],[[142,3],4],[[19,3],4],[[20,3],4],[[21,3],4],[149,[[8,[57,150]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[15,[144]]]],[11,144],[11,144],[11,144],[11,144],[-1,144,[[50,[],[[49,[144]]]]]],[44,[[15,[144]]]],[[144,-1],6,7],[[19,-1],6,7],[[20,-1],6,7],[[21,-1],6,7],[[142,19],-1,[]],[[142,12],-1,[]],[[142,19],-1,[]],[[142,12],-1,[]],[[144,144],6],[[144,144],144],[[144,144],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[144,-1,[]],[144,2],[144,2],[142,2],[149,2],[144,[[55,[144]]]],[142,[[0,[[151,[],[[49,[149]]]]]]]],[142,[[0,[[151,[],[[49,[149]]]]]]]],[144,[[56,[144]]]],[[],149],[[],142],[5,19],[5,20],[5,19],[5,20],[21,[[15,[21]]]],[21,[[15,[21]]]],[144,144],[[144,144],[[15,[16]]]],[[19,19],[[15,[16]]]],[[20,20],[[15,[16]]]],[[21,21],[[15,[16]]]],[[144,144],6],[[144,144,2],6],[[149,13,144],6],[[149,144],6],[[149,57,144],6],[149,6],[[144,144],144],[[144,144],6],[[144,144],144],[21,11],[[144,144],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[144,144],144],[142,6],0,0,[5,28],[[5,30],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[[98,3],4],[-1,-1,[]],0,[-1,-2,[],[]],0,[[],98],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]]],"c":[221,222,223,224,225,226,227,228,229,230,231,232,363,478,479,480,747,748,1002,1003,1166,1241,1378,1413,1532,1713,2371],"p":[[6,"PrivilegeLevel",0],[1,"bool"],[5,"Formatter",2466],[8,"Result",2466],[1,"u16"],[1,"tuple"],[10,"Hasher",2467],[6,"Result",2468],[5,"TypeId",2469],[5,"VirtAddr",27],[1,"u64"],[1,"usize"],[5,"PhysAddr",27],[10,"Into",2470],[6,"Option",2471],[6,"Ordering",2472],[5,"VirtAddrNotValid",27],[5,"PhysAddrNotValid",27],[5,"PageTableIndex",2263],[5,"PageOffset",2263],[6,"PageTableLevel",2263],[17,"Output"],[10,"FnOnce",2473],[5,"PortGeneric",151],[5,"ReadOnlyAccess",151],[5,"WriteOnlyAccess",151],[5,"ReadWriteAccess",151],[10,"PortRead",2448],[10,"PortReadAccess",151],[10,"PortWrite",2448],[10,"PortWriteAccess",151],[5,"RdRand",199],[1,"u32"],[5,"SegmentSelector",1270],[5,"DescriptorTablePointer",1446],[5,"InvlpgbFlushBuilder",239],[5,"AsidOutOfRangeError",239],[10,"NotGiantPageSize",2137],[5,"Invlpgb",239],[5,"Pcid",239],[10,"Clone",2474],[6,"InvPicdCommand",239],[10,"Debug",2466],[1,"str"],[5,"PageRange",2137],[5,"Cr0Flags",328],[5,"Cr3Flags",328],[5,"Cr4Flags",328],[17,"Item"],[10,"IntoIterator",2475],[5,"Cr0",328],[5,"Cr2",328],[5,"Cr3",328],[5,"Cr4",328],[5,"Iter",2476],[5,"IterNames",2476],[5,"PhysFrame",1837],[5,"Dr6Flags",586],[5,"Dr7Flags",586],[5,"Dr7Value",586],[6,"DebugAddressRegisterNumber",586],[6,"BreakpointCondition",586],[6,"BreakpointSize",586],[5,"Dr0",586],[5,"Dr1",586],[5,"Dr2",586],[5,"Dr3",586],[5,"Dr6",586],[5,"Dr7",586],[1,"u8"],[5,"EferFlags",867],[5,"CetFlags",867],[5,"Msr",867],[5,"Efer",867],[5,"FsBase",867],[5,"GsBase",867],[5,"KernelGsBase",867],[5,"Star",867],[5,"LStar",867],[5,"SFMask",867],[5,"UCet",867],[5,"SCet",867],[5,"RFlags",1193],[5,"Page",2137],[5,"MxCsr",1118],[5,"CS",1270],[5,"SS",1270],[5,"DS",1270],[5,"ES",1270],[5,"FS",1270],[5,"GS",1270],[5,"XCr0Flags",1367],[5,"XCr0",1367],[5,"GlobalDescriptorTable",1463],[6,"Descriptor",1463],[5,"DescriptorFlags",1463],[1,"slice"],[5,"TaskStateSegment",2452],[5,"PageFaultErrorCode",1575],[5,"InterruptStackFrame",1575],[5,"InterruptStackFrameValue",1575],[5,"Volatile",2477],[5,"InterruptDescriptorTable",1575],[5,"Entry",1575],[5,"EntryOptions",1575],[5,"SelectorErrorCode",1575],[6,"DescriptorTable",1575],[6,"ExceptionVector",1575],[1,"never"],[8,"PageFaultHandlerFunc",1575],[8,"HandlerFunc",1575],[8,"HandlerFuncWithErrCode",1575],[8,"DivergingHandlerFunc",1575],[8,"DivergingHandlerFuncWithErrCode",1575],[10,"RangeBounds",2478],[10,"FrameAllocator",1814],[10,"PageSize",2137],[10,"FrameDeallocator",1814],[5,"PhysFrameRange",1837],[5,"PhysFrameRangeInclusive",1837],[10,"Ord",2472],[10,"PartialEq",2472],[5,"AddressNotAligned",2137],[10,"Hash",2467],[10,"PartialOrd",2472],[10,"CleanUp",1897],[6,"Size4KiB",2137],[5,"MappedPageTable",1897],[10,"PageTableFrameMapping",1897],[5,"OffsetPageTable",1897],[5,"RecursivePageTable",1897],[5,"PageRangeInclusive",2137],[5,"MapperFlushAll",1897],[5,"MapperFlush",1897],[6,"InvalidPageTable",1897],[6,"TranslateResult",1897],[6,"MappedFrame",1897],[6,"MapToError",1897],[6,"UnmapError",1897],[6,"FlagUpdateError",1897],[6,"TranslateError",1897],[5,"PageTable",2263],[10,"Mapper",1897],[5,"PageTableFlags",2263],[10,"Sized",2479],[6,"Size2MiB",2137],[6,"Size1GiB",2137],[10,"Translate",1897],[5,"PageTableEntry",2263],[6,"FrameError",2263],[10,"Iterator",2480],[10,"DebugAddressRegister",586],[10,"Segment64",1270],[10,"Segment",1270],[15,"Mapped",2134]],"b":[[31,"impl-Add%3Cu64%3E-for-VirtAddr"],[32,"impl-Add%3Cusize%3E-for-VirtAddr"],[33,"impl-Add%3Cu64%3E-for-PhysAddr"],[34,"impl-Add%3Cusize%3E-for-PhysAddr"],[35,"impl-AddAssign%3Cu64%3E-for-VirtAddr"],[36,"impl-AddAssign%3Cusize%3E-for-VirtAddr"],[37,"impl-AddAssign%3Cusize%3E-for-PhysAddr"],[38,"impl-AddAssign%3Cu64%3E-for-PhysAddr"],[66,"impl-LowerHex-for-VirtAddr"],[67,"impl-Pointer-for-VirtAddr"],[68,"impl-Octal-for-VirtAddr"],[69,"impl-UpperHex-for-VirtAddr"],[70,"impl-Debug-for-VirtAddr"],[71,"impl-Binary-for-VirtAddr"],[72,"impl-Debug-for-PhysAddr"],[73,"impl-Binary-for-PhysAddr"],[74,"impl-Pointer-for-PhysAddr"],[75,"impl-UpperHex-for-PhysAddr"],[76,"impl-Octal-for-PhysAddr"],[77,"impl-LowerHex-for-PhysAddr"],[109,"impl-Sub%3Cu64%3E-for-VirtAddr"],[110,"impl-Sub-for-VirtAddr"],[111,"impl-Sub%3Cusize%3E-for-VirtAddr"],[112,"impl-Sub-for-PhysAddr"],[113,"impl-Sub%3Cu64%3E-for-PhysAddr"],[114,"impl-Sub%3Cusize%3E-for-PhysAddr"],[115,"impl-SubAssign%3Cusize%3E-for-VirtAddr"],[116,"impl-SubAssign%3Cu64%3E-for-VirtAddr"],[117,"impl-SubAssign%3Cusize%3E-for-PhysAddr"],[118,"impl-SubAssign%3Cu64%3E-for-PhysAddr"],[275,"impl-Display-for-AsidOutOfRangeError"],[276,"impl-Debug-for-AsidOutOfRangeError"],[390,"impl-Flags-for-Cr0Flags"],[391,"impl-Cr0Flags"],[392,"impl-Cr3Flags"],[393,"impl-Flags-for-Cr3Flags"],[394,"impl-Cr4Flags"],[395,"impl-Flags-for-Cr4Flags"],[441,"impl-Octal-for-Cr0Flags"],[442,"impl-LowerHex-for-Cr0Flags"],[443,"impl-UpperHex-for-Cr0Flags"],[444,"impl-Debug-for-Cr0Flags"],[445,"impl-Binary-for-Cr0Flags"],[448,"impl-Debug-for-Cr3Flags"],[449,"impl-UpperHex-for-Cr3Flags"],[450,"impl-Octal-for-Cr3Flags"],[451,"impl-LowerHex-for-Cr3Flags"],[452,"impl-Binary-for-Cr3Flags"],[454,"impl-Octal-for-Cr4Flags"],[455,"impl-Debug-for-Cr4Flags"],[456,"impl-Binary-for-Cr4Flags"],[457,"impl-LowerHex-for-Cr4Flags"],[458,"impl-UpperHex-for-Cr4Flags"],[469,"impl-Cr0Flags"],[470,"impl-Flags-for-Cr0Flags"],[471,"impl-Flags-for-Cr3Flags"],[472,"impl-Cr3Flags"],[473,"impl-Cr4Flags"],[474,"impl-Flags-for-Cr4Flags"],[643,"impl-Flags-for-Dr6Flags"],[644,"impl-Dr6Flags"],[645,"impl-Dr7Flags"],[646,"impl-Flags-for-Dr7Flags"],[708,"impl-UpperHex-for-Dr6Flags"],[709,"impl-Debug-for-Dr6Flags"],[710,"impl-Octal-for-Dr6Flags"],[711,"impl-Binary-for-Dr6Flags"],[712,"impl-LowerHex-for-Dr6Flags"],[713,"impl-LowerHex-for-Dr7Flags"],[714,"impl-Debug-for-Dr7Flags"],[715,"impl-Octal-for-Dr7Flags"],[716,"impl-Binary-for-Dr7Flags"],[717,"impl-UpperHex-for-Dr7Flags"],[740,"impl-Flags-for-Dr6Flags"],[741,"impl-Dr6Flags"],[742,"impl-Flags-for-Dr7Flags"],[743,"impl-Dr7Flags"],[914,"impl-Flags-for-EferFlags"],[915,"impl-EferFlags"],[916,"impl-CetFlags"],[917,"impl-Flags-for-CetFlags"],[972,"impl-LowerHex-for-EferFlags"],[973,"impl-Debug-for-EferFlags"],[974,"impl-UpperHex-for-EferFlags"],[975,"impl-Binary-for-EferFlags"],[976,"impl-Octal-for-EferFlags"],[977,"impl-Binary-for-CetFlags"],[978,"impl-LowerHex-for-CetFlags"],[979,"impl-UpperHex-for-CetFlags"],[980,"impl-Debug-for-CetFlags"],[981,"impl-Octal-for-CetFlags"],[996,"impl-EferFlags"],[997,"impl-Flags-for-EferFlags"],[998,"impl-Flags-for-CetFlags"],[999,"impl-CetFlags"],[1141,"impl-Flags-for-MxCsr"],[1142,"impl-MxCsr"],[1156,"impl-UpperHex-for-MxCsr"],[1157,"impl-LowerHex-for-MxCsr"],[1158,"impl-Debug-for-MxCsr"],[1159,"impl-Binary-for-MxCsr"],[1160,"impl-Octal-for-MxCsr"],[1163,"impl-Flags-for-MxCsr"],[1164,"impl-MxCsr"],[1217,"impl-RFlags"],[1218,"impl-Flags-for-RFlags"],[1231,"impl-Octal-for-RFlags"],[1232,"impl-LowerHex-for-RFlags"],[1233,"impl-UpperHex-for-RFlags"],[1234,"impl-Debug-for-RFlags"],[1235,"impl-Binary-for-RFlags"],[1238,"impl-Flags-for-RFlags"],[1239,"impl-RFlags"],[1385,"impl-XCr0Flags"],[1386,"impl-Flags-for-XCr0Flags"],[1402,"impl-Octal-for-XCr0Flags"],[1403,"impl-Debug-for-XCr0Flags"],[1404,"impl-UpperHex-for-XCr0Flags"],[1405,"impl-Binary-for-XCr0Flags"],[1406,"impl-LowerHex-for-XCr0Flags"],[1410,"impl-Flags-for-XCr0Flags"],[1411,"impl-XCr0Flags"],[1497,"impl-DescriptorFlags"],[1498,"impl-Flags-for-DescriptorFlags"],[1520,"impl-Octal-for-DescriptorFlags"],[1521,"impl-Debug-for-DescriptorFlags"],[1522,"impl-Binary-for-DescriptorFlags"],[1523,"impl-UpperHex-for-DescriptorFlags"],[1524,"impl-LowerHex-for-DescriptorFlags"],[1529,"impl-DescriptorFlags"],[1530,"impl-Flags-for-DescriptorFlags"],[1632,"impl-Flags-for-PageFaultErrorCode"],[1633,"impl-PageFaultErrorCode"],[1692,"impl-LowerHex-for-PageFaultErrorCode"],[1693,"impl-Octal-for-PageFaultErrorCode"],[1694,"impl-UpperHex-for-PageFaultErrorCode"],[1695,"impl-Debug-for-PageFaultErrorCode"],[1696,"impl-Binary-for-PageFaultErrorCode"],[1710,"impl-Flags-for-PageFaultErrorCode"],[1711,"impl-PageFaultErrorCode"],[1765,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame,+PageFaultErrorCode)%3E"],[1766,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame)%3E"],[1767,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame,+u64)%3E"],[1768,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame)+-%3E+!%3E"],[1769,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame,+u64)+-%3E+!%3E"],[1885,"impl-Sub-for-PhysFrame%3CS%3E"],[1886,"impl-Sub%3Cu64%3E-for-PhysFrame%3CS%3E"],[1971,"impl-Debug-for-InvalidPageTable"],[1972,"impl-Display-for-InvalidPageTable"],[2014,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2015,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2016,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2017,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2018,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2019,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2020,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2021,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2022,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2032,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2033,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2034,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2035,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2036,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2037,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2038,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2039,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2040,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2042,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2043,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2044,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2045,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2046,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2047,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2048,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2049,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2050,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2052,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2053,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2054,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2055,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2056,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2057,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2058,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2059,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2060,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2069,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2070,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2071,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2072,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2073,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2074,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2075,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2076,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2077,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2115,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2116,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2117,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2118,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2119,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2120,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2121,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2122,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2123,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2125,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2126,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2127,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2128,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2129,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2130,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2131,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2132,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2133,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2192,"impl-Display-for-AddressNotAligned"],[2193,"impl-Debug-for-AddressNotAligned"],[2239,"impl-Sub%3Cu64%3E-for-Page%3CS%3E"],[2240,"impl-Sub-for-Page%3CS%3E"],[2306,"impl-Flags-for-PageTableFlags"],[2307,"impl-PageTableFlags"],[2350,"impl-LowerHex-for-PageTableFlags"],[2351,"impl-Binary-for-PageTableFlags"],[2352,"impl-UpperHex-for-PageTableFlags"],[2353,"impl-Debug-for-PageTableFlags"],[2354,"impl-Octal-for-PageTableFlags"],[2368,"impl-Flags-for-PageTableFlags"],[2369,"impl-PageTableFlags"],[2378,"impl-Index%3CPageTableIndex%3E-for-PageTable"],[2379,"impl-Index%3Cusize%3E-for-PageTable"],[2380,"impl-IndexMut%3CPageTableIndex%3E-for-PageTable"],[2381,"impl-IndexMut%3Cusize%3E-for-PageTable"]]}],\
["xarray",{"doc":"","t":"FFFFKPPPFRFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ArcRef","BoxRef","Cursor","CursorMut","ItemEntry","Mark0","Mark1","Mark2","Range","Ref","XArray","XMark","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cursor","cursor_mut","deref","deref","drop","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from_raw","index","index","into","into","into","into","into","into","into","into_iter","into_raw","is_marked","is_marked","is_marked","load","load","load","new","next","next","next","range","raw_as_ref","remove","remove","reset_to","reset_to","set_mark","set_mark","store","store","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unset_mark","unset_mark","unset_mark_all"],"q":[[0,"xarray"],[101,"core::clone"],[102,"core::convert"],[103,"core::cmp"],[104,"core::fmt"],[105,"core::fmt"],[106,"core::option"],[107,"core::ops::range"],[108,"core::result"],[109,"core::any"]],"d":["A type that represents <code>&amp;&#39;a Arc&lt;T&gt;</code>.","A type that represents <code>&amp;&#39;a Box&lt;T&gt;</code>.","A <code>Cursor</code> can traverse in the <code>XArray</code> by setting or …","A <code>CursorMut</code> can traverse in the <code>XArray</code> by setting or …","A trait for the types users wish to store in an <code>XArray</code>.","","","","An iterator over a range of entries in an <code>XArray</code>.","A type that behaves just like a shared references to the …","<code>XArray</code> is an abstract data type functioning like an …","The mark type used in the <code>XArray</code>.","","","","","","","","","","","","","","","Clones the <code>XArray</code> with the COW mechanism.","","Creates a <code>Cursor</code> to perform read-related operations in the …","Creates a <code>CursorMut</code> to perform read- and write-related …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Recovers the original value from a <code>*const ()</code>, reclaiming …","Returns the target index of the cursor.","Returns the target index of the cursor.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Converts the original value into a <code>*const ()</code>, consuming …","Checks whether the target item is marked with the input …","Checks whether the target item is marked with the input …","Checks whether the <code>XArray</code> is marked with the input <code>mark</code>.","Loads the item at the target index.","Loads the item at the target index.","Loads the <code>index</code>-th item.","Makes a new, empty <code>XArray</code>.","Increases the target index of the cursor by one.","Increases the target index of the cursor by one.","","Creates a <code>Range</code> which can be immutably iterated over the …","Obtains a shared reference to the original value.","Removes the item at the target index, and returns the …","Removes the <code>XEntry</code> in the <code>XArray</code> at the target index, and …","Resets the target index to <code>index</code>.","Resets the target index to <code>index</code>.","Sets the input <code>mark</code> for the item at the target index if …","Marks the <code>XArray</code> with the input <code>mark</code>.","Stores a new <code>item</code> at the target index, and returns the old …","Stores the provided item in the <code>XArray</code> at the target …","","","","","","","","","","","","","","","","","","","","","","","Unsets the input <code>mark</code> for the item at the target index if …","Unsets the input <code>mark</code> for the <code>XArray</code>.","Unsets the input <code>mark</code> for all of the items in the <code>XArray</code>."],"i":[0,0,0,0,0,4,4,4,0,2,0,0,8,9,4,21,1,10,11,8,9,4,21,1,10,11,1,1,1,1,10,11,9,10,11,10,11,8,9,4,21,1,10,11,2,8,9,8,9,4,21,1,10,11,21,2,8,9,1,8,9,1,1,8,9,21,1,2,9,1,8,9,9,1,9,1,1,8,9,4,21,1,10,11,8,9,4,21,1,10,11,8,9,4,21,1,10,11,9,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[[1,[-1,-2]]],[2,3],[[5,[4]]]],[[-1,-2],6,[],[]],[[[1,[-1,-2]],7],[[8,[-1,-2]]],2,[[5,[4]]]],[[[1,[-1,-2]],7],[[9,[-1,-2]]],2,[[5,[4]]]],[[[10,[-1]]],-2,[],[]],[[[11,[-1]]],-2,[],[]],[[[9,[-1,-2]]],6,2,[[5,[4]]]],[[[10,[-1]],[10,[-1]]],12,13],[[[11,[-1]],[11,[-1]]],12,13],[[[10,[-1]],14],15,16],[[[11,[-1]],14],15,16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[2,[],[[17,[-1]]]]],[[19,[],[[18,[[2,[],[[17,[-1]]]]]]]]]],[[[8,[-1,-2]]],7,2,[[5,[4]]]],[[[9,[-1,-2]]],7,2,[[5,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[],[[17,[-1]]]]],6,[[19,[],[[18,[[2,[],[[17,[-1]]]]]]]]]],[[[8,[-1,-2]],-2],12,2,[[5,[4]]]],[[[9,[-1,-2]],-2],12,2,[[5,[4]]]],[[[1,[-1,-2]],-2],12,2,[[5,[4]]]],[[[8,[-1,-2]]],20,2,[[5,[4]]]],[[[9,[-1,-2]]],20,2,[[5,[4]]]],[[[1,[-1,-2]],7],20,2,[[5,[4]]]],[[],[[1,[-1,-2]]],2,[[5,[4]]]],[[[8,[-1,-2]]],6,2,[[5,[4]]]],[[[9,[-1,-2]]],6,2,[[5,[4]]]],[[[21,[-1,-2]]],[[20,[-3]]],2,[[5,[4]]],[]],[[[1,[-1,-2]],[22,[7]]],[[21,[-1,-2]]],2,[[5,[4]]]],[6,-1,[]],[[[9,[-1,-2]]],[[20,[-1]]],2,[[5,[4]]]],[[[1,[-1,-2]],7],[[20,[-1]]],2,[[5,[4]]]],[[[8,[-1,-2]],7],6,2,[[5,[4]]]],[[[9,[-1,-2]],7],6,2,[[5,[4]]]],[[[9,[-1,-2]],-2],[[23,[6,6]]],2,[[5,[4]]]],[[[1,[-1,-2]],-2],6,2,[[5,[4]]]],[[[9,[-1,-2]],-1],[[20,[-1]]],2,[[5,[4]]]],[[[1,[-1,-2]],7,-1],[[20,[-1]]],2,[[5,[4]]]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[[[9,[-1,-2]],-2],[[23,[6,6]]],2,[[5,[4]]]],[[[1,[-1,-2]],-2],6,2,[[5,[4]]]],[[[1,[-1,-2]],-2],6,2,[[5,[4]]]]],"c":[],"p":[[5,"XArray",0],[10,"ItemEntry",0],[10,"Clone",101],[6,"XMark",0],[10,"Into",102],[1,"tuple"],[1,"u64"],[5,"Cursor",0],[5,"CursorMut",0],[5,"ArcRef",0],[5,"BoxRef",0],[1,"bool"],[10,"PartialEq",103],[5,"Formatter",104],[8,"Result",104],[10,"Debug",104],[17,"Ref"],[17,"Target"],[10,"Deref",105],[6,"Option",106],[5,"Range",0],[5,"Range",107],[6,"Result",108],[5,"TypeId",109]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
